<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="fs_2ubixfsv2_2ubixfs_8h" kind="file" language="C++">
    <compoundname>ubixfs.h</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*#ifndef<sp/>UBIXFS_H</highlight></codeline>
<codeline lineno="2"><highlight class="comment">#define<sp/>UBIXFS_H</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">#include<sp/>&lt;sys/types.h&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment">#include<sp/>&lt;unistd.h&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment">#include<sp/>&quot;fsAbstract.h&quot;</highlight></codeline>
<codeline lineno="7"><highlight class="comment">#include<sp/>&quot;types.h&quot;</highlight></codeline>
<codeline lineno="8"><highlight class="comment">#include<sp/>&quot;file.h&quot;</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">#define<sp/>INODE_IN_USE<sp/><sp/><sp/><sp/><sp/><sp/>0x00000001</highlight></codeline>
<codeline lineno="11"><highlight class="comment">#define<sp/>INODE_DIRECTORY<sp/><sp/><sp/>0x00000002</highlight></codeline>
<codeline lineno="12"><highlight class="comment">#define<sp/>ATTR_INODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000004</highlight></codeline>
<codeline lineno="13"><highlight class="comment">#define<sp/>INODE_LOGGED<sp/><sp/><sp/><sp/><sp/><sp/>0x00000008</highlight></codeline>
<codeline lineno="14"><highlight class="comment">#define<sp/>INODE_DELETED<sp/><sp/><sp/><sp/><sp/>0x00000010</highlight></codeline>
<codeline lineno="15"><highlight class="comment">#define<sp/>PERMANENT_FLAGS<sp/><sp/><sp/>0x0000ffff</highlight></codeline>
<codeline lineno="16"><highlight class="comment">#define<sp/>INODE_NO_CACHE<sp/><sp/><sp/><sp/>0x00010000</highlight></codeline>
<codeline lineno="17"><highlight class="comment">#define<sp/>INODE_WAS_WRITTEN<sp/>0x00020000</highlight></codeline>
<codeline lineno="18"><highlight class="comment">#define<sp/>NO_TRANSACTION<sp/><sp/><sp/><sp/>0x00040000</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">#define<sp/>NUM_DIRECT_BLOCKS<sp/>64</highlight></codeline>
<codeline lineno="21"><highlight class="comment">#define<sp/>MAX_FILENAME_LENGTH<sp/>256</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">#define<sp/>UBIXFS_MAGIC1<sp/>0xA0A0A0A</highlight></codeline>
<codeline lineno="24"><highlight class="comment">#define<sp/>UBIXFS_MAGIC2<sp/>0xB0B0B0B</highlight></codeline>
<codeline lineno="25"><highlight class="comment">#define<sp/>UBIXFS_MAGIC3<sp/>0xC0C0C0C</highlight></codeline>
<codeline lineno="26"><highlight class="comment">#define<sp/>UBIXFS_INODE_MAGIC<sp/>0x3bbe0ad9</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight></codeline>
<codeline lineno="28"><highlight class="comment">*/</highlight><highlight class="comment">/*<sp/>befs<sp/>magic<sp/>numbers</highlight></codeline>
<codeline lineno="29"><highlight class="comment">#define<sp/>SUPER_BLOCK_MAGIC1<sp/>0x42465331<sp/>//<sp/>BFS1</highlight></codeline>
<codeline lineno="30"><highlight class="comment">#define<sp/>SUPER_BLOCK_MAGIC2<sp/>0xdd121031</highlight></codeline>
<codeline lineno="31"><highlight class="comment">#define<sp/>SUPER_BLOCK_MAGIC3<sp/>0x15b6830e</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="33"><highlight class="comment">#define<sp/>UBIXFS_CLEAN<sp/>0x434C454E<sp/><sp/>//<sp/>CLEN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">#define<sp/>UBIXFS_DIRTY<sp/>0x44495254<sp/><sp/>//<sp/>DIRT</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">typedef<sp/>struct<sp/>blockRun<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>unsigned<sp/>short<sp/>start<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>unsigned<sp/>short<sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="41"><highlight class="comment">}<sp/>inodeAddr;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">struct<sp/>bNode;</highlight></codeline>
<codeline lineno="44"><highlight class="comment">struct<sp/>ubixfsInode;</highlight></codeline>
<codeline lineno="45"><highlight class="comment">class<sp/>bTree;</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">typedef<sp/>union<sp/>uPtr<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>inodeAddr<sp/>iAddr;</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>bNode<sp/>*<sp/>bPtr;</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/>bTree<sp/>*<sp/>btPtr;</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>ubixfsInode<sp/>*<sp/>iPtr;</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>void<sp/>*<sp/>vPtr;</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/>off_t<sp/>offset;</highlight></codeline>
<codeline lineno="54"><highlight class="comment">};</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">typedef<sp/>struct<sp/>diskSuperBlock<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>char<sp/><sp/><sp/><sp/><sp/><sp/>name[32]<sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/>int32<sp/><sp/><sp/><sp/><sp/>magic1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/>int32<sp/><sp/><sp/><sp/><sp/>fsByteOrder<sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">//<sp/>blockSize<sp/>on<sp/>disk<sp/>(4096<sp/>for<sp/>UbixFS<sp/>v2)</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/>int32<sp/><sp/><sp/><sp/><sp/>blockSize<sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">//<sp/>number<sp/>of<sp/>bits<sp/>needed<sp/>to<sp/>shift<sp/>a<sp/>block<sp/>number<sp/>to<sp/>get<sp/>a<sp/>byte<sp/>address</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/><sp/>blockShift<sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/>off_t<sp/><sp/><sp/><sp/><sp/>numBlocks<sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/>off_t<sp/><sp/><sp/><sp/><sp/>usedBlocks<sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">//<sp/>BlockAllocationTable</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/>batSectors<sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="72"><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/>inodeCount<sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/>inodeSize<sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/>magic2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/>blocksPerAG<sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/>AGShift<sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/>numAGs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/>lastUsedAG<sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="80"><highlight class="comment">//<sp/>flags<sp/>tells<sp/>whether<sp/>the<sp/>FS<sp/>is<sp/>clean<sp/>(0x434C454E)<sp/>or<sp/>dirty<sp/>(0x44495954)</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/>int32<sp/><sp/><sp/><sp/><sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="82"><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment">//<sp/>journal<sp/>information</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/>blockRun<sp/><sp/>logBlocks<sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/>off_t<sp/><sp/><sp/><sp/><sp/>logStart<sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/>off_t<sp/><sp/><sp/><sp/><sp/>logEnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/>int32<sp/><sp/><sp/><sp/><sp/>magic3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="89"><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">//<sp/>root<sp/>dir<sp/>of<sp/>the<sp/>SYS<sp/>container</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/>inodeAddr<sp/>rootDir<sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="92"><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">//<sp/>indicies</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/>inodeAddr<sp/>indicies<sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="95"><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/>char<sp/><sp/><sp/><sp/><sp/><sp/>pad[368]<sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="97"><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment">}<sp/>diskSuperBlock;</highlight></codeline>
<codeline lineno="99"><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">typedef<sp/>struct<sp/>dataStream<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/>struct<sp/>blockRun<sp/>direct[NUM_DIRECT_BLOCKS]<sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/>off_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDirectRange<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/>struct<sp/>blockRun<sp/>indirect<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/>off_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIndirectRange<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/>struct<sp/>blockRun<sp/>double_indirect<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/>off_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDoubleIndirectRange<sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/>off_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="108"><highlight class="comment">}<sp/>dataStream;</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">typedef<sp/>struct<sp/>ubixfsInode<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/>int32<sp/><sp/><sp/><sp/><sp/><sp/><sp/>magic1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/>inodeAddr<sp/><sp/><sp/>inodeNum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/>char<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[MAX_FILENAME_LENGTH]<sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/>uid_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/>gid_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>gid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/>int32<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/>int32<sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>//<sp/>uInt64<sp/><sp/><sp/><sp/><sp/><sp/>createTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>//<sp/>uInt64<sp/><sp/><sp/><sp/><sp/><sp/>lastModifiedTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>(packed));</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/>inodeAddr<sp/><sp/><sp/>attributes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/><sp/><sp/>type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/><sp/><sp/>inodeSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/>uPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/>uPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/>uPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/>uPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/>dataStream<sp/><sp/>blocks<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/><sp/><sp/>refCount<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/>char<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallData[3200]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((packed));</highlight></codeline>
<codeline lineno="130"><highlight class="comment">}<sp/>ubixfsInode;</highlight></codeline>
<codeline lineno="131"><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">class<sp/>UbixFS<sp/>:<sp/>public<sp/>vfs_abstract<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>protected:</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/>signed<sp/>char<sp/>*<sp/><sp/><sp/><sp/>freeBlockList;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/>diskSuperBlock<sp/>*<sp/>superBlock;</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/>fileDescriptor<sp/>*<sp/>root;</highlight></codeline>
<codeline lineno="137"><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/>blockRun<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getFreeBlock(blockRun);</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/>blockRun<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getFreeBlock(uInt32);</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/>blockRun<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getFreeBlock(void);</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/>blockRun<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get8FreeBlocks(uInt32);</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/>uInt32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getNextAG(void);</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/>void<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mknod(const<sp/>char<sp/>*,<sp/>ubixfsInode<sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printSuperBlock(void);</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printFreeBlockList(uInt32);</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setFreeBlock(blockRun);</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>public:</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UbixFS(void);</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UbixFS(device_t<sp/>*);</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/>vfs_init(void);</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/>vfs_format(device_t<sp/>*);</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/>virtual<sp/>void<sp/>*<sp/><sp/><sp/>vfs_mknod(const<sp/>char<sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/>vfs_mkdir(const<sp/>char<sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/>vfs_open(const<sp/>char<sp/>*,<sp/>fileDescriptor<sp/>*,<sp/>int,<sp/>...);</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/>virtual<sp/>size_t<sp/><sp/><sp/>vfs_read(fileDescriptor<sp/>*,<sp/>void<sp/>*,<sp/>off_t,<sp/>size_t);</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/>virtual<sp/>size_t<sp/><sp/><sp/>vfs_write(fileDescriptor<sp/>*,<sp/>void<sp/>*,<sp/>off_t,<sp/>size_t);</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/>vfs_sync(void);</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/>vfs_stop(void);<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/>virtual<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~UbixFS(void);<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/>friend<sp/>class<sp/>bTree;</highlight></codeline>
<codeline lineno="161"><highlight class="comment">};<sp/>//<sp/>UbixFS</highlight></codeline>
<codeline lineno="162"><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">#endif<sp/>//<sp/>!UBIXFS_H</highlight></codeline>
<codeline lineno="164"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Dev/git/UbixOS/sys/fs/ubixfsv2/ubixfs.h"/>
  </compounddef>
</doxygen>
