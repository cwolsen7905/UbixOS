<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="group__lwip__opts__ipv4" kind="group">
    <compoundname>lwip_opts_ipv4</compoundname>
    <title>IPv4</title>
    <innergroup refid="group__lwip__opts__arp">ARP</innergroup>
    <innergroup refid="group__lwip__opts__icmp">ICMP</innergroup>
    <innergroup refid="group__lwip__opts__dhcp">DHCP</innergroup>
    <innergroup refid="group__lwip__opts__autoip">AUTOIP</innergroup>
    <innergroup refid="group__lwip__opts__igmp">IGMP</innergroup>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__lwip__opts__ipv4_1ga556b9b58fd02c0fdd126791baef77411" prot="public" static="no">
        <name>IP_DEFAULT_TTL</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_DEFAULT_TTL: Default value for Time-To-Live used by transport layers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="672" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1ga881d32ff5ee02af01f758953f1b51d59" prot="public" static="no">
        <name>IP_FORWARD</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_FORWARD==1: Enables the ability to forward IP packets across network interfaces. If you are going to run lwIP on a device with only one network interface, define this to 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="609" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1ga9e761df07c4e93901858741d4771dbc7" prot="public" static="no">
        <name>IP_FORWARD_ALLOW_TX_ON_RX_NETIF</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_FORWARD_ALLOW_TX_ON_RX_NETIF==1: allow ip_forward() to send packets back out on the netif where it was received. This should only be used for wireless networks. ATTENTION: When this is 1, make sure your netif driver correctly marks incoming link-layer-broadcast/multicast packets as such using the corresponding pbuf flags! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="700" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="700" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1gaf85c8bdd5035b6cada790b4cc2a209a4" prot="public" static="no">
        <name>IP_FRAG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_FRAG==1: Fragment outgoing IP packets if their size exceeds MTU. Note that this option does not affect incoming packet sizes, which can be controlled via IP_REASSEMBLY. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="627" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1gaa956b0167c37a2265b55e2d0204a3933" prot="public" static="no">
        <name>IP_OPTIONS_ALLOWED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_OPTIONS_ALLOWED: Defines the behavior for IP options. IP_OPTIONS_ALLOWED==0: All packets with IP options are dropped. IP_OPTIONS_ALLOWED==1: IP options are allowed (but not parsed). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="646" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1ga29084a46d7d4be30e8029d356bca0394" prot="public" static="no">
        <name>IP_REASS_MAX_PBUFS</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_REASS_MAX_PBUFS: Total maximum amount of pbufs waiting to be reassembled. Since the received pbufs are enqueued, be sure to configure PBUF_POOL_SIZE &gt; IP_REASS_MAX_PBUFS so that the stack is still able to receive packets even if the maximum amount of fragments is enqueued for reassembly! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="665" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="665" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1gad41122bd0b5485a18a4415c8f953727b" prot="public" static="no">
        <name>IP_REASS_MAXAGE</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_REASS_MAXAGE: Maximum time (in multiples of IP_TMR_INTERVAL - so seconds, normally) a fragmented IP packet waits for all fragments to arrive. If not all fragments arrived in this time, the whole packet is discarded. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="655" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1ga1a31ab0e0f37b17d40fa7c35bc2c4f69" prot="public" static="no">
        <name>IP_REASSEMBLY</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_REASSEMBLY==1: Reassemble incoming fragmented IP packets. Note that this option does not affect outgoing packet sizes, which can be controlled via IP_FRAG. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="618" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1ga0b2c993fd940f5774108298933310384" prot="public" static="no">
        <name>IP_SOF_BROADCAST</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_SOF_BROADCAST=1: Use the SOF_BROADCAST field to enable broadcast filter per pcb on udp and raw send operations. To enable broadcast filter on recv operations, you also have to set IP_SOF_BROADCAST_RECV=1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="681" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1ga0f1fbf42d3344bf87cd056d48ddca3db" prot="public" static="no">
        <name>IP_SOF_BROADCAST_RECV</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP_SOF_BROADCAST_RECV (requires IP_SOF_BROADCAST=1) enable the broadcast filter on recv operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="689" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1ga429e811a80ebb5157e14a854870c4410" prot="public" static="no">
        <name>LWIP_IPV4</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LWIP_IPV4==1: Enable IPv4 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="600" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwip__opts__ipv4_1gafd988b31749b30c65009c8ddf6c0a58d" prot="public" static="no">
        <name>LWIP_RANDOMIZE_INITIAL_LOCAL_PORTS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LWIP_RANDOMIZE_INITIAL_LOCAL_PORTS==1: randomize the local port for the first local TCP/UDP pcb (default==0). This can prevent creating predictable port numbers after booting a device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/opt.h" line="709" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/opt.h" bodystart="709" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
