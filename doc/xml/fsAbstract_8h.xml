<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="fsAbstract_8h" kind="file" language="C++">
    <compoundname>fsAbstract.h</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*#ifndef<sp/>FSABSTRACT_H</highlight></codeline>
<codeline lineno="2"><highlight class="comment">#define<sp/>FSABSTRACT_H</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">#include<sp/>&lt;stdio.h&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment">#include<sp/>&lt;dirent.h&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment">#include<sp/>&lt;sys/types.h&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment">#include<sp/>&lt;device.h&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment">#include<sp/>&quot;file.h&quot;</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">class<sp/>vfs_abstract<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>protected:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>vfs_abstract<sp/>*<sp/>prev;</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>vfs_abstract<sp/>*<sp/>next;</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>device_t<sp/>*<sp/>device;</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>public:<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>//<sp/>File<sp/>I/O</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_open(const<sp/>char<sp/>*,<sp/>fileDescriptor<sp/>*,int,...)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_close(fileDescriptor<sp/>*)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>virtual<sp/>size_t<sp/><sp/>vfs_read(fileDescriptor<sp/>*,<sp/>void<sp/>*,<sp/>off_t,<sp/>size_t)<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>return<sp/>0;<sp/>};</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>virtual<sp/>size_t<sp/><sp/>vfs_write(fileDescriptor<sp/>*,<sp/>void<sp/>*,<sp/>off_t,<sp/>size_t)<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>return<sp/>0;<sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>//<sp/>Dir<sp/>I/O</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_opendir(DIR<sp/>*,const<sp/>char<sp/>*)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_closedir(DIR<sp/>*)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_mkdir(const<sp/>char<sp/>*,<sp/>mode_t)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_rmdir(const<sp/>char<sp/>*)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_readdir(DIR<sp/>*,struct<sp/>dirent<sp/>*)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>//<sp/>FS<sp/>Functions</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_init(void)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_format(device_t<sp/>*)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/>virtual<sp/>void<sp/>*<sp/><sp/>vfs_mknod(const<sp/>char<sp/>*,<sp/>mode_t)<sp/>{<sp/>return<sp/>NULL;<sp/>};</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_purge(void)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_stop(void)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_sync(void)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>//<sp/>Misc<sp/>Functions</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_unlink(const<sp/>char<sp/>*)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>virtual<sp/>int<sp/><sp/><sp/><sp/><sp/>vfs_rename(const<sp/>char<sp/>*,const<sp/>char<sp/>*)<sp/>{<sp/>return<sp/>-1;<sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>virtual<sp/><sp/><sp/><sp/><sp/>~vfs_abstract(void)<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="comment">};<sp/>//<sp/>vfs_FS</highlight></codeline>
<codeline lineno="45"><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">#endif*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>!FSABSTRACT_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Dev/git/UbixOS/sys/fs/ubixfsv2/fsAbstract.h"/>
  </compounddef>
</doxygen>
