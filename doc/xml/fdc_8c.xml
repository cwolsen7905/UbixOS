<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="fdc_8c" kind="file" language="C++">
    <compoundname>fdc.c</compoundname>
    <includes refid="fdc_8h" local="no">isa/fdc.h</includes>
    <includes refid="8259_8h" local="no">isa/8259.h</includes>
    <includes refid="video_8h" local="no">sys/video.h</includes>
    <includes refid="gdt_8h" local="no">sys/gdt.h</includes>
    <includes refid="idt_8h" local="no">sys/idt.h</includes>
    <includes refid="spinlock_8h" local="no">ubixos/spinlock.h</includes>
    <includes refid="io_8h" local="no">sys/io.h</includes>
    <includes refid="dma_8h" local="no">sys/dma.h</includes>
    <includes refid="include_2sys_2device_8h" local="no">sys/device.h</includes>
    <includes refid="kprintf_8h" local="no">lib/kprintf.h</includes>
    <includes refid="kmalloc_8h" local="no">lib/kmalloc.h</includes>
    <includes refid="devfs_8h" local="no">devfs/devfs.h</includes>
    <incdepgraph>
      <node id="11">
        <label>sys/video.h</label>
        <link refid="video_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ufs/ufs.h</label>
        <link refid="ufs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stdarg.h</label>
        <link refid="stdarg_8h"/>
      </node>
      <node id="15">
        <label>sys/io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="12">
        <label>sys/gdt.h</label>
        <link refid="gdt_8h"/>
      </node>
      <node id="2">
        <label>isa/fdc.h</label>
        <link refid="fdc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>i386/cpu.h</label>
        <link refid="i386_2cpu_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sys/idt.h</label>
        <link refid="idt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/select.h</label>
        <link refid="select_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>vfs/inode.h</label>
        <link refid="inode_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ubixos/spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/_sigset.h</label>
        <link refid="__sigset_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>lib/kmalloc.h</label>
        <link refid="kmalloc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>isa/8259.h</label>
        <link refid="8259_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>vfs/mount.h</label>
        <link refid="mount_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>sys/resource.h</label>
        <link refid="resource_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/trap.h</label>
        <link refid="trap_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/types.h</label>
        <link refid="include_2sys_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>vfs/file.h</label>
        <link refid="include_2vfs_2file_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Dev/git/UbixOS/sys/isa/fdc.c</label>
        <link refid="fdc_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>fs/msdos_fs.h</label>
        <link refid="msdos__fs_8h"/>
      </node>
      <node id="27">
        <label>sys/signal.h</label>
        <link refid="sys_2signal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>fs/pipe_fs.h</label>
        <link refid="pipe__fs_8h"/>
      </node>
      <node id="30">
        <label>ubixos/wait.h</label>
        <link refid="wait_8h"/>
      </node>
      <node id="18">
        <label>lib/kprintf.h</label>
        <link refid="kprintf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/thread.h</label>
        <link refid="thread_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>sys/cdefs.h</label>
        <link refid="cdefs_8h"/>
      </node>
      <node id="16">
        <label>sys/dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/_types.h</label>
        <link refid="__types_8h"/>
      </node>
      <node id="7">
        <label>sys/_timespec.h</label>
        <link refid="__timespec_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/device.h</label>
        <link refid="include_2sys_2device_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ubixfs/dirCache.h</label>
        <link refid="dirCache_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sys/_timeval.h</label>
        <link refid="__timeval_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>devfs/devfs.h</label>
        <link refid="devfs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fdc_8c_1aee050d94ea7b1ff201263f7f7bfbbefc" prot="public" static="yes" mutable="no">
        <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
        <definition>bool diskChange</definition>
        <argsstring></argsstring>
        <name>diskChange</name>
        <initializer>= <ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="46" column="13" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1a3041fe08ed5976302158f2668249f8b2" prot="public" static="yes" mutable="no">
        <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
        <definition>volatile bool done</definition>
        <argsstring></argsstring>
        <name>done</name>
        <initializer>= <ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="44" column="22" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1a8313ab2664b92e29fc7761dd3d949662" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structspinLock" kindref="compound">spinLock</ref></type>
        <definition>struct spinLock fdcSpinLock</definition>
        <argsstring></argsstring>
        <name>fdcSpinLock</name>
        <initializer>= <ref refid="spinlock_8h_1a0fe85a4f3642683148b25916d6c5eafd" kindref="member">SPIN_LOCK_INITIALIZER</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="346" column="5" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1abc6a2191073ccb560aaa9246c336fdd9" prot="public" static="yes" mutable="no">
        <type><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref></type>
        <definition>volatile Int8 fdcTrack</definition>
        <argsstring></argsstring>
        <name>fdcTrack</name>
        <initializer>= 0xff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="48" column="22" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1aaf7080152f82d659c32dd37e1727c32d" prot="public" static="yes" mutable="no">
        <type><ref refid="fdc_8h_1a3a2c32c6da970b0c5efa169931f0c751" kindref="member">drvGeom</ref></type>
        <definition>drvGeom geometry</definition>
        <argsstring></argsstring>
        <name>geometry</name>
        <initializer>= { <ref refid="fdc_8h_1a603e1e0a278c07c7338444e750ab35f3" kindref="member">dg144Heads</ref>, <ref refid="fdc_8h_1ae502999ac4dc1f4ef9e0a9db76b11a9a" kindref="member">dg144Tracks</ref>, <ref refid="fdc_8h_1a874c835339ecb6a4a5fdd7aab7bfbe02" kindref="member">dg144Spt</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="45" column="16" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1a7d4d19cb4b75718174baa280e7ceea9d" prot="public" static="yes" mutable="no">
        <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
        <definition>bool motor</definition>
        <argsstring></argsstring>
        <name>motor</name>
        <initializer>= <ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="47" column="13" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1a5772ef6ca96f12ff8ed997ce8bdbc6d7" prot="public" static="yes" mutable="no">
        <type><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref></type>
        <definition>Int8 sr0</definition>
        <argsstring></argsstring>
        <name>sr0</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="49" column="13" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1aee71be8badf158b1d3fc7ea1a47f82e7" prot="public" static="yes" mutable="no">
        <type><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref></type>
        <definition>Int8 statSize</definition>
        <argsstring></argsstring>
        <name>statSize</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="51" column="13" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1ae2746d1bf47d4f690105d083b966fa82" prot="public" static="yes" mutable="no">
        <type><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref></type>
        <definition>Int8 status[7]</definition>
        <argsstring>[7]</argsstring>
        <name>status</name>
        <initializer>= { 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="52" column="13" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1a4235a63d122daa0852a95529c2f93498" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long tbaddr</definition>
        <argsstring></argsstring>
        <name>tbaddr</name>
        <initializer>= 0x80000L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="54" column="15" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fdc_8c_1adea4d22e56b537ae3e8a8dd9b1555ce4" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>volatile int timeOut</definition>
        <argsstring></argsstring>
        <name>timeOut</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="50" column="21" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fdc_8c_1a20a389349155403bb7b901d62f4ff93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>asm</definition>
        <argsstring>(&quot;.globl floppyIsr      \n&quot; &quot;floppyIsr:            \n&quot; &quot;  pusha               \n&quot; &quot;  push %ss            \n&quot; &quot;  push %ds            \n&quot; &quot;  push %es            \n&quot; &quot;  push %fs            \n&quot; &quot;  push %gs            \n&quot; &quot;  call floppyIsrhndlr \n&quot; &quot;  pop %gs             \n&quot; &quot;  pop %fs             \n&quot; &quot;  pop %es             \n&quot; &quot;  pop %ds             \n&quot; &quot;  pop %ss             \n&quot; &quot;  popa                \n&quot; &quot;  iret                \n&quot;)</argsstring>
        <name>asm</name>
        <param>
          <type>&quot;.globl <ref refid="fdc_8h_1a2c2196dd9229105994bb3840347e6f05" kindref="member">floppyIsr</ref> \n&quot; &quot;floppyIsr: \n&quot; &quot; pusha \n&quot; &quot; push %ss \n&quot; &quot; push %ds \n&quot; &quot; push %es \n&quot; &quot; push %<ref refid="structfs" kindref="compound">fs</ref> \n&quot; &quot; push %gs \n&quot; &quot; call <ref refid="fdc_8c_1a5042dfaf2327990b6d1e1a7d3e01751c" kindref="member">floppyIsrhndlr</ref> \n&quot; &quot; pop %gs \n&quot; &quot; pop %<ref refid="structfs" kindref="compound">fs</ref> \n&quot; &quot; pop %es \n&quot; &quot; pop %ds \n&quot; &quot; pop %ss \n&quot; &quot; popa \n&quot; &quot; iret \n&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="77" column="1" declfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" declline="77" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1aa0f8325f93de9409e403e620f914e69f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void block2Hts</definition>
        <argsstring>(int block, int *head, int *track, int *sector)</argsstring>
        <name>block2Hts</name>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>track</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="200" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="200" bodyend="204"/>
        <referencedby refid="fdc_8c_1a4b5fded251628524148377601d44377a" compoundref="fdc_8c" startline="127" endline="198">fdcRw</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a2fad92b12d9ff56bf300b7e53875c75d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fdc_init</definition>
        <argsstring>()</argsstring>
        <name>fdc_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="61" column="5" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="61" bodyend="75"/>
        <references refid="devfs_8c_1ad568bae84bef3691539f1b1d0f6a54b4" compoundref="devfs_8c" startline="174" endline="209">devfs_makeNode</references>
        <references refid="include_2sys_2device_8h_1a256b750ab99e3be9b83a9bfd37a22388" compoundref="device_8c" startline="49" endline="70">device_add</references>
        <references refid="gdt_8h_1a7eb6dc7004c613df58764da5df7d85d8" compoundref="gdt_8h" startline="43">dInt</references>
        <references refid="gdt_8h_1abe5eb76416aff1d9114e1cdb8b0797fe" compoundref="gdt_8h" startline="54">dPresent</references>
        <references refid="fdc_8c_1a62847307f237f6b4240d1eb4718b13e7" compoundref="fdc_8c" startline="56" endline="59">fdcInit2</references>
        <references refid="fdc_8c_1a1f2029ff3278c4b819c4420c168cc082" compoundref="fdc_8c" startline="303" endline="308">fdcRead</references>
        <references refid="fdc_8c_1acc9e5f35deea53f5b68798269b9be7c0" compoundref="fdc_8c" startline="309" endline="312">fdcWrite</references>
        <references refid="fdc_8h_1a2c2196dd9229105994bb3840347e6f05">floppyIsr</references>
        <references refid="structdevice__interface_1a5a20c2397cc4ac3fbb9afe36bea1cfd1" compoundref="include_2sys_2device_8h" startline="55">device_interface::init</references>
        <references refid="8259_8h_1a0ac079c4d770f02e505f4d8569a6960a">irqEnable</references>
        <references refid="kmalloc_8h_1a150eab2ac4ce4553e21ca10e7f441762" compoundref="kmalloc_8c" startline="241" endline="331">kmalloc</references>
        <references refid="structdevice__interface_1a7eb42b0bb3e06dbc9183531a5e59ddb8" compoundref="include_2sys_2device_8h" startline="50">device_interface::major</references>
        <references refid="8259_8h_1a7d84962c1a1c225344a94545309f92fc" compoundref="8259_8h" startline="41">mVec</references>
        <references refid="structdevice__interface_1a876d3736a8df585bb06a82308724db6f" compoundref="include_2sys_2device_8h" startline="52">device_interface::read</references>
        <references refid="structdevice__interface_1a816fbc5cd527e42d0a64a6d690062ed0" compoundref="include_2sys_2device_8h" startline="54">device_interface::reset</references>
        <references refid="fdc_8c_1a3aea9deb2a0bfea9ff05a898f4822e31" compoundref="fdc_8c" startline="288" endline="301">reset</references>
        <references refid="idt_8h_1a174a47ed653fc64fff6b5bb1b895c2cf" compoundref="idt_8c" startline="208" endline="216">setVector</references>
        <references refid="structdevice__interface_1a9d8ffee6ef57616ca48d1f7cfc54e461" compoundref="include_2sys_2device_8h" startline="53">device_interface::write</references>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a62847307f237f6b4240d1eb4718b13e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fdcInit2</definition>
        <argsstring>(struct device_node *dev)</argsstring>
        <name>fdcInit2</name>
        <param>
          <type>struct <ref refid="structdevice__node" kindref="compound">device_node</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="56" column="5" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="56" bodyend="59"/>
        <references refid="structdevice__node_1a588d09d5dabf1c8866d359aaac799b1c" compoundref="include_2sys_2device_8h" startline="37">device_node::devInfo</references>
        <references refid="structdevice__interface_1a82fda947114f5c8d53fb7acbd7eb0e21" compoundref="include_2sys_2device_8h" startline="49">device_interface::size</references>
        <referencedby refid="fdc_8c_1a2fad92b12d9ff56bf300b7e53875c75d" compoundref="fdc_8c" startline="61" endline="75">fdc_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a1f2029ff3278c4b819c4420c168cc082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fdcRead</definition>
        <argsstring>(void *info, void *baseAddr, uInt32 startSector, uInt32 sectorCount)</argsstring>
        <name>fdcRead</name>
        <param>
          <type>void *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>baseAddr</declname>
        </param>
        <param>
          <type><ref refid="objgfx30_8h_1ada085051a6d9a8e00a2cb256d1af14ba" kindref="member">uInt32</ref></type>
          <declname>startSector</declname>
        </param>
        <param>
          <type><ref refid="objgfx30_8h_1ada085051a6d9a8e00a2cb256d1af14ba" kindref="member">uInt32</ref></type>
          <declname>sectorCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="303" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="303" bodyend="308"/>
        <references refid="armv6_2spinlock_8c_1a71f03d2ba55111c715b6068254847a53" compoundref="armv6_2spinlock_8c" startline="55" endline="61">spinLock</references>
        <referencedby refid="fdc_8c_1a2fad92b12d9ff56bf300b7e53875c75d" compoundref="fdc_8c" startline="61" endline="75">fdc_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a4b5fded251628524148377601d44377a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
        <definition>bool fdcRw</definition>
        <argsstring>(int block, unsigned char *blockBuffer, bool read, unsigned long numSectors)</argsstring>
        <name>fdcRw</name>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>blockBuffer</declname>
        </param>
        <param>
          <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
          <declname>read</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>numSectors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="127" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="127" bodyend="198"/>
        <references refid="fdc_8c_1aa0f8325f93de9409e403e620f914e69f" compoundref="fdc_8c" startline="200" endline="204">block2Hts</references>
        <references refid="fdc_8h_1a93ff9547b61a14618c87c5639a1252c5" compoundref="fdc_8h" startline="43">fdcDir</references>
        <references refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" compoundref="io_8c" startline="38" endline="46">inportByte</references>
        <references refid="fdc_8c_1a94483feb4903fca9643813faae8a76ee" compoundref="fdc_8c" startline="206" endline="211">motorOn</references>
        <references refid="gen__calls_8h_1a5eff3a25d417fafce7c4f211db219ca2" compoundref="gen__calls_8c" startline="100" endline="119">read</references>
        <referencedby refid="fdc_8c_1aa03242a5e44c4f2d10e15d296aca8c6b" compoundref="fdc_8c" startline="240" endline="249">readBlock</referencedby>
        <referencedby refid="fdc_8c_1aebbcd7bc8695e888491b97b5bf27bd9c" compoundref="fdc_8c" startline="251" endline="253">writeBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1acc9e5f35deea53f5b68798269b9be7c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fdcWrite</definition>
        <argsstring>(void *info, void *baseAddr, uInt32 startSector, uInt32 sectorCount)</argsstring>
        <name>fdcWrite</name>
        <param>
          <type>void *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>baseAddr</declname>
        </param>
        <param>
          <type><ref refid="objgfx30_8h_1ada085051a6d9a8e00a2cb256d1af14ba" kindref="member">uInt32</ref></type>
          <declname>startSector</declname>
        </param>
        <param>
          <type><ref refid="objgfx30_8h_1ada085051a6d9a8e00a2cb256d1af14ba" kindref="member">uInt32</ref></type>
          <declname>sectorCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="309" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="309" bodyend="312"/>
        <references refid="fdc_8c_1aebbcd7bc8695e888491b97b5bf27bd9c" compoundref="fdc_8c" startline="251" endline="253">writeBlock</references>
        <referencedby refid="fdc_8c_1a2fad92b12d9ff56bf300b7e53875c75d" compoundref="fdc_8c" startline="61" endline="75">fdc_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a5042dfaf2327990b6d1e1a7d3e01751c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void floppyIsrhndlr</definition>
        <argsstring>()</argsstring>
        <name>floppyIsrhndlr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="96" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1ae266cdb34b69c65cfc108bbc72a4e3ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getByte</definition>
        <argsstring>()</argsstring>
        <name>getByte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="114" column="5" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="114" bodyend="125"/>
        <references refid="fdc_8h_1a298d327024dc99847e9064de3aa4388a" compoundref="fdc_8h" startline="42">fdcData</references>
        <references refid="fdc_8h_1a8ede3d2b611c5ae0d74bac02a68f998a" compoundref="fdc_8h" startline="41">fdcMsr</references>
        <references refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" compoundref="io_8c" startline="38" endline="46">inportByte</references>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a044fc0dea0fb35e6fab7f3c0badea2c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void motorOff</definition>
        <argsstring>(void)</argsstring>
        <name>motorOff</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="213" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="213" bodyend="219"/>
        <referencedby refid="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" compoundref="fdc_8c" startline="280" endline="286">recalibrate</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a94483feb4903fca9643813faae8a76ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void motorOn</definition>
        <argsstring>(void)</argsstring>
        <name>motorOn</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="206" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="206" bodyend="211"/>
        <referencedby refid="fdc_8c_1a4b5fded251628524148377601d44377a" compoundref="fdc_8c" startline="127" endline="198">fdcRw</referencedby>
        <referencedby refid="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" compoundref="fdc_8c" startline="280" endline="286">recalibrate</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1aa03242a5e44c4f2d10e15d296aca8c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
        <definition>bool readBlock</definition>
        <argsstring>(int block, Int8 *blockBuffer, unsigned long numSectors)</argsstring>
        <name>readBlock</name>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref> *</type>
          <declname>blockBuffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>numSectors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="240" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="240" bodyend="249"/>
        <references refid="fdc_8c_1a4b5fded251628524148377601d44377a" compoundref="fdc_8c" startline="127" endline="198">fdcRw</references>
        <references refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" compoundref="include_2sys_2types_8h" startline="82">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void recalibrate</definition>
        <argsstring>(void)</argsstring>
        <name>recalibrate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="280" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="280" bodyend="286"/>
        <references refid="fdc_8h_1a8a2fef7d1ed07757e099b8c7b29bfb09" compoundref="fdc_8h" startline="52">cmdRecal</references>
        <references refid="fdc_8c_1a044fc0dea0fb35e6fab7f3c0badea2c9" compoundref="fdc_8c" startline="213" endline="219">motorOff</references>
        <references refid="fdc_8c_1a94483feb4903fca9643813faae8a76ee" compoundref="fdc_8c" startline="206" endline="211">motorOn</references>
        <references refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" compoundref="fdc_8c" startline="101" endline="112">sendByte</references>
        <references refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" compoundref="include_2sys_2types_8h" startline="82">TRUE</references>
        <references refid="fdc_8c_1af5b6e5123d27381ca120b7b4fea7b242" compoundref="fdc_8c" startline="255" endline="278">waitFdc</references>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a3aea9deb2a0bfea9ff05a898f4822e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset</definition>
        <argsstring>(void)</argsstring>
        <name>reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="288" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="288" bodyend="301"/>
        <references refid="fdc_8h_1ae3bc9df62f197b42804259efb8ba44ec" compoundref="fdc_8h" startline="45">fdcDor</references>
        <references refid="io_8h_1a8acc1a06073db2e7b92ffbd00fbd0cf1" compoundref="io_8c" startline="72" endline="78">outportByte</references>
        <referencedby refid="fdc_8c_1a2fad92b12d9ff56bf300b7e53875c75d" compoundref="fdc_8c" startline="61" endline="75">fdc_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1a5886a896e5f0361f36b40d007db6e683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
        <definition>bool seek</definition>
        <argsstring>(int track)</argsstring>
        <name>seek</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="221" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="221" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendByte</definition>
        <argsstring>(int Int8)</argsstring>
        <name>sendByte</name>
        <param>
          <type>int</type>
          <declname>Int8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="101" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="101" bodyend="112"/>
        <references refid="fdc_8h_1a298d327024dc99847e9064de3aa4388a" compoundref="fdc_8h" startline="42">fdcData</references>
        <references refid="fdc_8h_1a8ede3d2b611c5ae0d74bac02a68f998a" compoundref="fdc_8h" startline="41">fdcMsr</references>
        <references refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" compoundref="io_8c" startline="38" endline="46">inportByte</references>
        <references refid="io_8h_1a8acc1a06073db2e7b92ffbd00fbd0cf1" compoundref="io_8c" startline="72" endline="78">outportByte</references>
        <referencedby refid="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" compoundref="fdc_8c" startline="280" endline="286">recalibrate</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1af5b6e5123d27381ca120b7b4fea7b242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
        <definition>bool waitFdc</definition>
        <argsstring>(bool sensei)</argsstring>
        <name>waitFdc</name>
        <param>
          <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
          <declname>sensei</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="255" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="255" bodyend="278"/>
        <referencedby refid="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" compoundref="fdc_8c" startline="280" endline="286">recalibrate</referencedby>
      </memberdef>
      <memberdef kind="function" id="fdc_8c_1aebbcd7bc8695e888491b97b5bf27bd9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref></type>
        <definition>bool writeBlock</definition>
        <argsstring>(int block, Int8 *blockBuffer, unsigned long numSectors)</argsstring>
        <name>writeBlock</name>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref> *</type>
          <declname>blockBuffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>numSectors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c" line="251" column="6" bodyfile="C:/Dev/git/UbixOS/sys/isa/fdc.c" bodystart="251" bodyend="253"/>
        <references refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" compoundref="include_2sys_2types_8h" startline="82">FALSE</references>
        <references refid="fdc_8c_1a4b5fded251628524148377601d44377a" compoundref="fdc_8c" startline="127" endline="198">fdcRw</references>
        <referencedby refid="fdc_8c_1acc9e5f35deea53f5b68798269b9be7c0" compoundref="fdc_8c" startline="309" endline="312">fdcWrite</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2002-2018<sp/>The<sp/>UbixOS<sp/>Project.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>was<sp/>developed<sp/>by<sp/>Christopher<sp/>W.<sp/>Olsen<sp/>for<sp/>the<sp/>UbixOS<sp/>Project.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,<sp/>are<sp/>permitted</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>conditions,<sp/>the<sp/>following<sp/>disclaimer<sp/>and<sp/>the<sp/>list<sp/>of<sp/>authors.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>conditions,<sp/>the<sp/>following<sp/>disclaimer<sp/>and<sp/>the<sp/>list<sp/>of<sp/>authors<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>3)<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>UbixOS<sp/>Project<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>permission.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fdc_8h" kindref="compound">isa/fdc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="8259_8h" kindref="compound">isa/8259.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="video_8h" kindref="compound">sys/video.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gdt_8h" kindref="compound">sys/gdt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="idt_8h" kindref="compound">sys/idt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="spinlock_8h" kindref="compound">ubixos/spinlock.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="io_8h" kindref="compound">sys/io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dma_8h" kindref="compound">sys/dma.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2sys_2device_8h" kindref="compound">sys/device.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="kprintf_8h" kindref="compound">lib/kprintf.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="kmalloc_8h" kindref="compound">lib/kmalloc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="devfs_8h" kindref="compound">devfs/devfs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structspinLock" kindref="compound">spinLock</ref><sp/>fdcSpinLock<sp/>=<sp/><ref refid="spinlock_8h_1a0fe85a4f3642683148b25916d6c5eafd" kindref="member">SPIN_LOCK_INITIALIZER</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDrvGeom" kindref="compound">drvGeom</ref><sp/>geometry<sp/>=<sp/>{<sp/><ref refid="fdc_8h_1a603e1e0a278c07c7338444e750ab35f3" kindref="member">dg144Heads</ref>,<sp/><ref refid="fdc_8h_1ae502999ac4dc1f4ef9e0a9db76b11a9a" kindref="member">dg144Tracks</ref>,<sp/><ref refid="fdc_8h_1a874c835339ecb6a4a5fdd7aab7bfbe02" kindref="member">dg144Spt</ref><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>diskChange<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>motor<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref><sp/>fdcTrack<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref><sp/>sr0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeOut<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref><sp/>statSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref><sp/>status[7]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="fdc_8c_1a4235a63d122daa0852a95529c2f93498" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a4235a63d122daa0852a95529c2f93498" kindref="member">tbaddr</ref><sp/>=<sp/>0x80000<ref refid="include_2sys_2types_8h_1aa73214aa5f2f94f63d90bb4e3d99fe53" kindref="member">L</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="fdc_8c_1a62847307f237f6b4240d1eb4718b13e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a62847307f237f6b4240d1eb4718b13e7" kindref="member">fdcInit2</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice__node" kindref="compound">device_node</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>dev-&gt;<ref refid="structdevice__node_1a588d09d5dabf1c8866d359aaac799b1c" kindref="member">devInfo</ref>-&gt;<ref refid="structdevice__interface_1a82fda947114f5c8d53fb7acbd7eb0e21" kindref="member">size</ref><sp/>=<sp/>(1024<sp/>*<sp/>1450);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0x0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="fdc_8c_1a2fad92b12d9ff56bf300b7e53875c75d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a2fad92b12d9ff56bf300b7e53875c75d" kindref="member">fdc_init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice__interface" kindref="compound">device_interface</ref><sp/>*devInfo<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice__interface" kindref="compound">device_interface</ref><sp/>*)<sp/><ref refid="kmalloc_8h_1a150eab2ac4ce4553e21ca10e7f441762" kindref="member">kmalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice__interface" kindref="compound">device_interface</ref>));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="idt_8h_1a174a47ed653fc64fff6b5bb1b895c2cf" kindref="member">setVector</ref>(<ref refid="fdc_8h_1a2c2196dd9229105994bb3840347e6f05" kindref="member">floppyIsr</ref>,<sp/><ref refid="8259_8h_1a7d84962c1a1c225344a94545309f92fc" kindref="member">mVec</ref><sp/>+<sp/>6,<sp/>(<ref refid="gdt_8h_1a7eb6dc7004c613df58764da5df7d85d8" kindref="member">dInt</ref><sp/>+<sp/><ref refid="gdt_8h_1abe5eb76416aff1d9114e1cdb8b0797fe" kindref="member">dPresent</ref>));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="8259_8h_1a0ac079c4d770f02e505f4d8569a6960a" kindref="member">irqEnable</ref>(6);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1a3aea9deb2a0bfea9ff05a898f4822e31" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>devInfo-&gt;<ref refid="structdevice__interface_1a7eb42b0bb3e06dbc9183531a5e59ddb8" kindref="member">major</ref><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>devInfo-&gt;<ref refid="structdevice__interface_1a5a20c2397cc4ac3fbb9afe36bea1cfd1" kindref="member">init</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;<ref refid="fdc_8c_1a62847307f237f6b4240d1eb4718b13e7" kindref="member">fdcInit2</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>devInfo-&gt;<ref refid="structdevice__interface_1a876d3736a8df585bb06a82308724db6f" kindref="member">read</ref><sp/>=<sp/><ref refid="fdc_8c_1a1f2029ff3278c4b819c4420c168cc082" kindref="member">fdcRead</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>devInfo-&gt;<ref refid="structdevice__interface_1a9d8ffee6ef57616ca48d1f7cfc54e461" kindref="member">write</ref><sp/>=<sp/><ref refid="fdc_8c_1acc9e5f35deea53f5b68798269b9be7c0" kindref="member">fdcWrite</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>devInfo-&gt;<ref refid="structdevice__interface_1a816fbc5cd527e42d0a64a6d690062ed0" kindref="member">reset</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="fdc_8c_1a3aea9deb2a0bfea9ff05a898f4822e31" kindref="member">reset</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="include_2sys_2device_8h_1a256b750ab99e3be9b83a9bfd37a22388" kindref="member">device_add</ref>(0,<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>devInfo);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="devfs_8c_1ad568bae84bef3691539f1b1d0f6a54b4" kindref="member">devfs_makeNode</ref>(</highlight><highlight class="stringliteral">&quot;fd0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,<sp/>0x0,<sp/>0x0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0x0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">asm</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;.globl<sp/>floppyIsr<sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;floppyIsr:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pusha<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>push<sp/>%ss<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>push<sp/>%ds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>push<sp/>%es<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>push<sp/>%fs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>push<sp/>%gs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>call<sp/>floppyIsrhndlr<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pop<sp/>%gs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pop<sp/>%fs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pop<sp/>%es<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pop<sp/>%ds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>pop<sp/>%ss<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>popa<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>iret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="fdc_8c_1a5042dfaf2327990b6d1e1a7d3e01751c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a5042dfaf2327990b6d1e1a7d3e01751c" kindref="member">floppyIsrhndlr</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>done<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a8acc1a06073db2e7b92ffbd00fbd0cf1" kindref="member">outportByte</ref>(0x20,<sp/>0x20);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msr;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmo<sp/>=<sp/>0;<sp/>tmo<sp/>&lt;<sp/>128;<sp/>tmo++)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>msr<sp/>=<sp/><ref refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" kindref="member">inportByte</ref>(<ref refid="fdc_8h_1a8ede3d2b611c5ae0d74bac02a68f998a" kindref="member">fdcMsr</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((msr<sp/>&amp;<sp/>0xc0)<sp/>==<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8h_1a8acc1a06073db2e7b92ffbd00fbd0cf1" kindref="member">outportByte</ref>(<ref refid="fdc_8h_1a298d327024dc99847e9064de3aa4388a" kindref="member">fdcData</ref>,<sp/><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" kindref="member">inportByte</ref>(0x80);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="fdc_8c_1ae266cdb34b69c65cfc108bbc72a4e3ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1ae266cdb34b69c65cfc108bbc72a4e3ff" kindref="member">getByte</ref>()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msr;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmo<sp/>=<sp/>0;<sp/>tmo<sp/>&lt;<sp/>128;<sp/>tmo++)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>msr<sp/>=<sp/><ref refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" kindref="member">inportByte</ref>(<ref refid="fdc_8h_1a8ede3d2b611c5ae0d74bac02a68f998a" kindref="member">fdcMsr</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((msr<sp/>&amp;<sp/>0xd0)<sp/>==<sp/>0xd0)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" kindref="member">inportByte</ref>(<ref refid="fdc_8h_1a298d327024dc99847e9064de3aa4388a" kindref="member">fdcData</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" kindref="member">inportByte</ref>(0x80);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="fdc_8c_1a4b5fded251628524148377601d44377a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a4b5fded251628524148377601d44377a" kindref="member">fdcRw</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*blockBuffer,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="gen__calls_8h_1a5eff3a25d417fafce7c4f211db219ca2" kindref="member">read</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numSectors)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>head<sp/>=<sp/>0x0,<sp/>track<sp/>=<sp/>0x0,<sp/>sector<sp/>=<sp/>0x0,<sp/>tries<sp/>=<sp/>0x0,<sp/>copyCount<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_tbaddr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>0x80000;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_blockbuff<sp/>=<sp/>blockBuffer;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//kprintf(&quot;Block:<sp/>[%i]\n&quot;,block);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1aa0f8325f93de9409e403e620f914e69f" kindref="member">block2Hts</ref>(block,<sp/>&amp;head,<sp/>&amp;track,<sp/>&amp;sector);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1a94483feb4903fca9643813faae8a76ee" kindref="member">motorOn</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="gen__calls_8h_1a5eff3a25d417fafce7c4f211db219ca2" kindref="member">read</ref><sp/>&amp;&amp;<sp/>blockBuffer)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>data<sp/>from<sp/>data<sp/>buffer<sp/>into<sp/>track<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(copyCount<sp/>=<sp/>0;<sp/>copyCount<sp/>&lt;<sp/>(numSectors<sp/>*<sp/>512);<sp/>copyCount++)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p_tbaddr<sp/>=<sp/>*p_blockbuff;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_blockbuff++;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_tbaddr++;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tries<sp/>=<sp/>0;<sp/>tries<sp/>&lt;<sp/>3;<sp/>tries++)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" kindref="member">inportByte</ref>(<ref refid="fdc_8h_1a93ff9547b61a14618c87c5639a1252c5" kindref="member">fdcDir</ref>)<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diskChange<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1a5886a896e5f0361f36b40d007db6e683" kindref="member">seek</ref>(1);<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>&quot;disk<sp/>change&quot;<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" kindref="member">recalibrate</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1a044fc0dea0fb35e6fab7f3c0badea2c9" kindref="member">motorOff</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="video_8h_1a5429378b96a24fadfd2d1f8d777eb95a" kindref="member">kprint</ref>(</highlight><highlight class="stringliteral">&quot;FDC:<sp/>Disk<sp/>change<sp/>detected.<sp/>Trying<sp/>again.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a4b5fded251628524148377601d44377a" kindref="member">fdcRw</ref>(block,<sp/>blockBuffer,<sp/><ref refid="gen__calls_8h_1a5eff3a25d417fafce7c4f211db219ca2" kindref="member">read</ref>,<sp/>numSectors);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="fdc_8c_1a5886a896e5f0361f36b40d007db6e683" kindref="member">seek</ref>(track))<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1a044fc0dea0fb35e6fab7f3c0badea2c9" kindref="member">motorOff</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kprintf_8h_1a20b56810edb62a6fe59917015c30848f" kindref="member">kprintf</ref>(</highlight><highlight class="stringliteral">&quot;FDC:<sp/>Error<sp/>seeking<sp/>to<sp/>track<sp/>[%i]\n&quot;</highlight><highlight class="normal">,<sp/>block);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="io_8h_1a8acc1a06073db2e7b92ffbd00fbd0cf1" kindref="member">outportByte</ref>(<ref refid="fdc_8h_1abcb9230a76b72528226c49a520db19f0" kindref="member">fdcCcr</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="gen__calls_8h_1a5eff3a25d417fafce7c4f211db219ca2" kindref="member">read</ref>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dma_8h_1a7e2aa65e3e12777006ad192f7ff8bb5a" kindref="member">dmaXfer</ref>(2,<sp/><ref refid="fdc_8c_1a4235a63d122daa0852a95529c2f93498" kindref="member">tbaddr</ref>,<sp/>numSectors<sp/>*<sp/>512,<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(<ref refid="fdc_8h_1a6f35816c0b01ac39832de24459d82e27" kindref="member">cmdRead</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dma_8h_1a7e2aa65e3e12777006ad192f7ff8bb5a" kindref="member">dmaXfer</ref>(2,<sp/><ref refid="fdc_8c_1a4235a63d122daa0852a95529c2f93498" kindref="member">tbaddr</ref>,<sp/>numSectors<sp/>*<sp/>512,<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(<ref refid="fdc_8h_1afcfbcbee1143a2a689afc3a656646bad" kindref="member">cmdWrite</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(head<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(track);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(head);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(sector);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(2);<sp/></highlight><highlight class="comment">/*<sp/>512<sp/>Int8s/sector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(geometry.<ref refid="structDrvGeom_1aa8dd21b2e6459ec0fabd9fe49835646a" kindref="member">spt</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geometry.<ref refid="structDrvGeom_1aa8dd21b2e6459ec0fabd9fe49835646a" kindref="member">spt</ref><sp/>==<sp/><ref refid="fdc_8h_1a874c835339ecb6a4a5fdd7aab7bfbe02" kindref="member">dg144Spt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(<ref refid="fdc_8h_1a95339d9d677a8ac74a7a7459ad130739" kindref="member">dg144Gap3rw</ref>);<sp/></highlight><highlight class="comment">/*<sp/>gap<sp/>3<sp/>size<sp/>for<sp/>1.44M<sp/>read/write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(<ref refid="fdc_8h_1a51916e330bac103bdf860461ae359e1e" kindref="member">dg168Gap3rw</ref>);<sp/></highlight><highlight class="comment">/*<sp/>gap<sp/>3<sp/>size<sp/>for<sp/>1.68M<sp/>read/write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(0xff);<sp/></highlight><highlight class="comment">/*<sp/>DTL<sp/>=<sp/>unused<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="fdc_8c_1af5b6e5123d27381ca120b7b4fea7b242" kindref="member">waitFdc</ref>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="video_8h_1a5429378b96a24fadfd2d1f8d777eb95a" kindref="member">kprint</ref>(</highlight><highlight class="stringliteral">&quot;Timed<sp/>out,<sp/>trying<sp/>operation<sp/>again<sp/>after<sp/>reset()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1a3aea9deb2a0bfea9ff05a898f4822e31" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a4b5fded251628524148377601d44377a" kindref="member">fdcRw</ref>(block,<sp/>blockBuffer,<sp/><ref refid="gen__calls_8h_1a5eff3a25d417fafce7c4f211db219ca2" kindref="member">read</ref>,<sp/>numSectors);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status[0]<sp/>&amp;<sp/>0xc0)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>worked!<sp/>outta<sp/>here!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" kindref="member">recalibrate</ref>();<sp/></highlight><highlight class="comment">/*<sp/>oops,<sp/>try<sp/>again...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1a044fc0dea0fb35e6fab7f3c0badea2c9" kindref="member">motorOff</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="gen__calls_8h_1a5eff3a25d417fafce7c4f211db219ca2" kindref="member">read</ref><sp/>&amp;&amp;<sp/>blockBuffer)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>p_blockbuff<sp/>=<sp/>blockBuffer;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>p_tbaddr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>0x80000;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(copyCount<sp/>=<sp/>0x0;<sp/>copyCount<sp/>&lt;<sp/>(numSectors<sp/>*<sp/>512);<sp/>copyCount++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p_blockbuff<sp/>=<sp/>*p_tbaddr;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_blockbuff++;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_tbaddr++;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(tries<sp/>!=<sp/>3);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="fdc_8c_1aa0f8325f93de9409e403e620f914e69f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1aa0f8325f93de9409e403e620f914e69f" kindref="member">block2Hts</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*head,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*track,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sector)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>*head<sp/>=<sp/>(block<sp/>%<sp/>(geometry.<ref refid="structDrvGeom_1aa8dd21b2e6459ec0fabd9fe49835646a" kindref="member">spt</ref><sp/>*<sp/>geometry.<ref refid="structDrvGeom_1aedb24f8c9f3ae872be1cb104854dee1b" kindref="member">heads</ref>))<sp/>/<sp/>(geometry.<ref refid="structDrvGeom_1aa8dd21b2e6459ec0fabd9fe49835646a" kindref="member">spt</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>*track<sp/>=<sp/>block<sp/>/<sp/>(geometry.<ref refid="structDrvGeom_1aa8dd21b2e6459ec0fabd9fe49835646a" kindref="member">spt</ref><sp/>*<sp/>geometry.<ref refid="structDrvGeom_1aedb24f8c9f3ae872be1cb104854dee1b" kindref="member">heads</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>*sector<sp/>=<sp/>block<sp/>%<sp/>geometry.<ref refid="structDrvGeom_1aa8dd21b2e6459ec0fabd9fe49835646a" kindref="member">spt</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="fdc_8c_1a94483feb4903fca9643813faae8a76ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a94483feb4903fca9643813faae8a76ee" kindref="member">motorOn</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(motor<sp/>==<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="io_8h_1a8acc1a06073db2e7b92ffbd00fbd0cf1" kindref="member">outportByte</ref>(<ref refid="fdc_8h_1ae3bc9df62f197b42804259efb8ba44ec" kindref="member">fdcDor</ref>,<sp/>0x1c);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>motor<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="fdc_8c_1a044fc0dea0fb35e6fab7f3c0badea2c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a044fc0dea0fb35e6fab7f3c0badea2c9" kindref="member">motorOff</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(motor<sp/>==<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//outportByte(fdcDor,0x0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//outportByte(fdcDor,0x0C);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>motor<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="fdc_8c_1a5886a896e5f0361f36b40d007db6e683" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a5886a896e5f0361f36b40d007db6e683" kindref="member">seek</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>track)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdcTrack<sp/>==<sp/>track)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(<ref refid="fdc_8h_1ae2d2411a8ccdc868ab718da2b15348a9" kindref="member">cmdSeek</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(track);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="fdc_8c_1af5b6e5123d27381ca120b7b4fea7b242" kindref="member">waitFdc</ref>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="kprintf_8h_1a20b56810edb62a6fe59917015c30848f" kindref="member">kprintf</ref>(</highlight><highlight class="stringliteral">&quot;wait<sp/>fdc<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sr0<sp/>!=<sp/>0x20)<sp/>||<sp/>(fdcTrack<sp/>!=<sp/>track))<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="fdc_8c_1aa03242a5e44c4f2d10e15d296aca8c6b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1aa03242a5e44c4f2d10e15d296aca8c6b" kindref="member">readBlock</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,<sp/><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref><sp/>*blockBuffer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numSectors)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0x0,<sp/>loop<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numSectors<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(loop<sp/>=<sp/>0;<sp/>loop<sp/>&lt;<sp/>numSectors;<sp/>loop++)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="fdc_8c_1a4b5fded251628524148377601d44377a" kindref="member">fdcRw</ref>(block<sp/>+<sp/>loop,<sp/>blockBuffer<sp/>+<sp/>(loop<sp/>*<sp/>512),<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a4b5fded251628524148377601d44377a" kindref="member">fdcRw</ref>(block,<sp/>blockBuffer,<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>,<sp/>numSectors);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="fdc_8c_1aebbcd7bc8695e888491b97b5bf27bd9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1aebbcd7bc8695e888491b97b5bf27bd9c" kindref="member">writeBlock</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,<sp/><ref refid="objgfx30_8h_1a7e31ca7716b8d85dd473450a5c5e5a97" kindref="member">Int8</ref><sp/>*blockBuffer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numSectors)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a4b5fded251628524148377601d44377a" kindref="member">fdcRw</ref>(block,<sp/>blockBuffer,<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>,<sp/>numSectors);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="fdc_8c_1af5b6e5123d27381ca120b7b4fea7b242" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1af5b6e5123d27381ca120b7b4fea7b242" kindref="member">waitFdc</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sensei)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>timeOut<sp/>=<sp/>50000;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done<sp/>&amp;&amp;<sp/>timeOut)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>statSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((statSize<sp/>&lt;<sp/>7)<sp/>&amp;&amp;<sp/>(<ref refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" kindref="member">inportByte</ref>(<ref refid="fdc_8h_1a8ede3d2b611c5ae0d74bac02a68f998a" kindref="member">fdcMsr</ref>)<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>4)))<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>status[(int)<sp/>statSize++]<sp/>=<sp/><ref refid="fdc_8c_1ae266cdb34b69c65cfc108bbc72a4e3ff" kindref="member">getByte</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sensei)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(<ref refid="fdc_8h_1a6afd950ba65e51d77abf2158216f0284" kindref="member">cmdSensei</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>sr0<sp/>=<sp/><ref refid="fdc_8c_1ae266cdb34b69c65cfc108bbc72a4e3ff" kindref="member">getByte</ref>();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>fdcTrack<sp/>=<sp/><ref refid="fdc_8c_1ae266cdb34b69c65cfc108bbc72a4e3ff" kindref="member">getByte</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>done<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!timeOut)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="io_8h_1a77b934268de1b3ecdcf3f275413b3108" kindref="member">inportByte</ref>(<ref refid="fdc_8h_1a93ff9547b61a14618c87c5639a1252c5" kindref="member">fdcDir</ref>)<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diskChange<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" kindref="member">recalibrate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1a94483feb4903fca9643813faae8a76ee" kindref="member">motorOn</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(<ref refid="fdc_8h_1a8a2fef7d1ed07757e099b8c7b29bfb09" kindref="member">cmdRecal</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1af5b6e5123d27381ca120b7b4fea7b242" kindref="member">waitFdc</ref>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1a044fc0dea0fb35e6fab7f3c0badea2c9" kindref="member">motorOff</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="fdc_8c_1a3aea9deb2a0bfea9ff05a898f4822e31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a3aea9deb2a0bfea9ff05a898f4822e31" kindref="member">reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a8acc1a06073db2e7b92ffbd00fbd0cf1" kindref="member">outportByte</ref>(<ref refid="fdc_8h_1ae3bc9df62f197b42804259efb8ba44ec" kindref="member">fdcDor</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>motor<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="io_8h_1a8acc1a06073db2e7b92ffbd00fbd0cf1" kindref="member">outportByte</ref>(<ref refid="fdc_8h_1ae3bc9df62f197b42804259efb8ba44ec" kindref="member">fdcDor</ref>,<sp/>0x0c);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>done<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1af5b6e5123d27381ca120b7b4fea7b242" kindref="member">waitFdc</ref>(<ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(<ref refid="fdc_8h_1a6003c8e12dd1e4f765279854f016c0ae" kindref="member">cmdSpecify</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(0xdf);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1ae708fa84d19a72e77185b3a214e81573" kindref="member">sendByte</ref>(0x02);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1a5886a896e5f0361f36b40d007db6e683" kindref="member">seek</ref>(1);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1a2a16ea9e09b5f3dc2a559351afdc75f3" kindref="member">recalibrate</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>diskChange<sp/>=<sp/><ref refid="include_2sys_2types_8h_1af6a258d8f3ee5206d682d799316314b1aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="fdc_8c_1a1f2029ff3278c4b819c4420c168cc082" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1a1f2029ff3278c4b819c4420c168cc082" kindref="member">fdcRead</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structdevice__interface_1aeacb2f431b14ddd1e9fe34db278dfc9e" kindref="member">info</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*baseAddr,<sp/><ref refid="objgfx30_8h_1ada085051a6d9a8e00a2cb256d1af14ba" kindref="member">uInt32</ref><sp/>startSector,<sp/><ref refid="objgfx30_8h_1ada085051a6d9a8e00a2cb256d1af14ba" kindref="member">uInt32</ref><sp/>sectorCount)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="armv6_2spinlock_8c_1a71f03d2ba55111c715b6068254847a53" kindref="member">spinLock</ref>(&amp;fdcSpinLock);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1aa03242a5e44c4f2d10e15d296aca8c6b" kindref="member">readBlock</ref>(startSector,<sp/>baseAddr,<sp/>sectorCount);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="armv6_2spinlock_8c_1ae29ab191c93f9ead066cb462dd2e7247" kindref="member">spinUnlock</ref>(&amp;fdcSpinLock);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309" refid="fdc_8c_1acc9e5f35deea53f5b68798269b9be7c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fdc_8c_1acc9e5f35deea53f5b68798269b9be7c0" kindref="member">fdcWrite</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structdevice__interface_1aeacb2f431b14ddd1e9fe34db278dfc9e" kindref="member">info</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*baseAddr,<sp/><ref refid="objgfx30_8h_1ada085051a6d9a8e00a2cb256d1af14ba" kindref="member">uInt32</ref><sp/>startSector,<sp/><ref refid="objgfx30_8h_1ada085051a6d9a8e00a2cb256d1af14ba" kindref="member">uInt32</ref><sp/>sectorCount)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="fdc_8c_1aebbcd7bc8695e888491b97b5bf27bd9c" kindref="member">writeBlock</ref>(startSector,<sp/>baseAddr,<sp/>sectorCount);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">/***</highlight></codeline>
<codeline lineno="315"><highlight class="comment"></highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>$Log:<sp/>fdc.c,v<sp/>$</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>Revision<sp/>1.1.1.1<sp/><sp/>2006/06/01<sp/>12:46:12<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>ubix2</highlight></codeline>
<codeline lineno="319"><highlight class="comment"></highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>Revision<sp/>1.2<sp/><sp/>2005/10/12<sp/>00:13:37<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>Removed</highlight></codeline>
<codeline lineno="322"><highlight class="comment"></highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>Revision<sp/>1.1.1.1<sp/><sp/>2005/09/26<sp/>17:24:01<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>no<sp/>message</highlight></codeline>
<codeline lineno="325"><highlight class="comment"></highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>Revision<sp/>1.24<sp/><sp/>2004/09/07<sp/>21:54:38<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>ok<sp/>reverted<sp/>back<sp/>to<sp/>old<sp/>scheduling<sp/>for<sp/>now....</highlight></codeline>
<codeline lineno="328"><highlight class="comment"></highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>Revision<sp/>1.23<sp/><sp/>2004/09/06<sp/>15:13:25<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>Last<sp/>commit<sp/>before<sp/>FreeBSD<sp/>6.0</highlight></codeline>
<codeline lineno="331"><highlight class="comment"></highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>Revision<sp/>1.22<sp/><sp/>2004/08/21<sp/>20:06:28<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>ok<sp/>check<sp/>out<sp/>exec.c</highlight></codeline>
<codeline lineno="334"><highlight class="comment"></highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>Revision<sp/>1.21<sp/><sp/>2004/08/15<sp/>16:47:49<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>Fixed</highlight></codeline>
<codeline lineno="337"><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>Revision<sp/>1.20<sp/><sp/>2004/08/15<sp/>00:33:02<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>Wow<sp/>the<sp/>ide<sp/>driver<sp/>works<sp/>again</highlight></codeline>
<codeline lineno="340"><highlight class="comment"></highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>Revision<sp/>1.19<sp/><sp/>2004/08/01<sp/>20:40:45<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>Net<sp/>related<sp/>fixes</highlight></codeline>
<codeline lineno="343"><highlight class="comment"></highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>Revision<sp/>1.18<sp/><sp/>2004/07/29<sp/>21:32:16<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>My<sp/>quick<sp/>lunchs<sp/>breaks<sp/>worth<sp/>of<sp/>updates....</highlight></codeline>
<codeline lineno="346"><highlight class="comment"></highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>Revision<sp/>1.17<sp/><sp/>2004/07/27<sp/>08:03:36<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>chg:<sp/>stopped<sp/>push<sp/>all<sp/>these<sp/>extra<sp/>registers<sp/>I<sp/>can&apos;t<sp/>find<sp/>a<sp/>good<sp/>reason<sp/>as<sp/>to<sp/>why<sp/>I<sp/>was<sp/>doing<sp/>it</highlight></codeline>
<codeline lineno="349"><highlight class="comment"></highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>Revision<sp/>1.16<sp/><sp/>2004/07/22<sp/>17:32:25<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>I<sp/>broke<sp/>it<sp/>hopefully</highlight></codeline>
<codeline lineno="352"><highlight class="comment"></highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>Revision<sp/>1.15<sp/><sp/>2004/07/21<sp/>10:02:09<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>devfs:<sp/>renamed<sp/>functions</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>device<sp/>system:<sp/>renamed<sp/>functions</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>fdc:<sp/>fixed<sp/>a<sp/>few<sp/>potential<sp/>bugs<sp/>and<sp/>cleaned<sp/>up<sp/>some<sp/>unused<sp/>variables</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>strol:<sp/>fixed<sp/>definition</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>endtask:<sp/>made<sp/>it<sp/>print<sp/>out<sp/>freepage<sp/>debug<sp/>info</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>kmalloc:<sp/>fixed<sp/>a<sp/>huge<sp/>memory<sp/>leak<sp/>we<sp/>had<sp/>some<sp/>unhandled<sp/>descriptor<sp/>insertion<sp/>so<sp/>some<sp/>descriptors<sp/>were<sp/>lost</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>ld:<sp/>fixed<sp/>a<sp/>pointer<sp/>conversion</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>file:<sp/>cleaned<sp/>up<sp/>a<sp/>few<sp/>unused<sp/>variables</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>sched:<sp/>broke<sp/>task<sp/>deletion</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>kprintf:<sp/>fixed<sp/>ogPrintf<sp/>definition</highlight></codeline>
<codeline lineno="364"><highlight class="comment"></highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>Revision<sp/>1.14<sp/><sp/>2004/07/17<sp/>02:38:31<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>Fixed<sp/>a<sp/>few<sp/>problems</highlight></codeline>
<codeline lineno="367"><highlight class="comment"></highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>Revision<sp/>1.13<sp/><sp/>2004/07/14<sp/>12:42:46<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>fdc:<sp/>fdcInit<sp/>to<sp/>fdc_init</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>Changed<sp/>Startup<sp/>Routines</highlight></codeline>
<codeline lineno="371"><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>Revision<sp/>1.12<sp/><sp/>2004/06/04<sp/>10:19:42<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>notes:<sp/>we<sp/>compile<sp/>again,<sp/>thank<sp/>g-d<sp/>anyways<sp/>i<sp/>was<sp/>about<sp/>to<sp/>cry</highlight></codeline>
<codeline lineno="374"><highlight class="comment"></highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>Revision<sp/>1.11<sp/><sp/>2004/05/20<sp/>22:51:09<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>Cleaned<sp/>Up<sp/>Warnings</highlight></codeline>
<codeline lineno="377"><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>Revision<sp/>1.10<sp/><sp/>2004/05/19<sp/>23:36:52<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>Bug<sp/>Fixes</highlight></codeline>
<codeline lineno="380"><highlight class="comment"></highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>Revision<sp/>1.9<sp/><sp/>2004/05/19<sp/>15:31:27<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>Fixed<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>references</highlight></codeline>
<codeline lineno="383"><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>Revision<sp/>1.8<sp/><sp/>2004/05/19<sp/>15:26:33<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>Fixed<sp/>reference<sp/>issues<sp/>due<sp/>to<sp/>changes<sp/>in<sp/>driver<sp/>subsystem</highlight></codeline>
<codeline lineno="386"><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>Revision<sp/>1.7<sp/><sp/>2004/05/10<sp/>02:23:24<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>Minor<sp/>Changes<sp/>To<sp/>Source<sp/>Code<sp/>To<sp/>Prepare<sp/>It<sp/>For<sp/>Open<sp/>Source<sp/>Release</highlight></codeline>
<codeline lineno="389"><highlight class="comment"></highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>Revision<sp/>1.6<sp/><sp/>2004/04/30<sp/>14:16:04<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>Fixed<sp/>all<sp/>the<sp/>datatypes<sp/>to<sp/>be<sp/>consistant<sp/>uInt8,uInt16,uInt32,Int8,Int16,Int32</highlight></codeline>
<codeline lineno="392"><highlight class="comment"></highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>Revision<sp/>1.5<sp/><sp/>2004/04/29<sp/>15:29:20<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>Fixed<sp/>All<sp/>Running<sp/>Issues</highlight></codeline>
<codeline lineno="395"><highlight class="comment"></highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>Revision<sp/>1.4<sp/><sp/>2004/04/28<sp/>02:22:54<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>This<sp/>is<sp/>a<sp/>fiarly<sp/>large<sp/>commit<sp/>but<sp/>we<sp/>are<sp/>starting<sp/>to<sp/>use<sp/>new<sp/>driver<sp/>model</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>all<sp/>around</highlight></codeline>
<codeline lineno="399"><highlight class="comment"></highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>Revision<sp/>1.3<sp/><sp/>2004/04/26<sp/>22:22:33<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>DevFS<sp/>now<sp/>uses<sp/>correct<sp/>size<sp/>of<sp/>device</highlight></codeline>
<codeline lineno="402"><highlight class="comment"></highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>Revision<sp/>1.2<sp/><sp/>2004/04/22<sp/>21:20:05<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>FDC<sp/>now<sp/>adds<sp/>drives<sp/>to<sp/>the<sp/>devfs</highlight></codeline>
<codeline lineno="405"><highlight class="comment"></highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>Revision<sp/>1.1.1.1<sp/><sp/>2004/04/15<sp/>12:07:09<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>UbixOS<sp/>v1.0</highlight></codeline>
<codeline lineno="408"><highlight class="comment"></highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>Revision<sp/>1.6<sp/><sp/>2004/04/13<sp/>16:36:33<sp/><sp/>reddawg</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>Changed<sp/>our<sp/>copyright,<sp/>it<sp/>is<sp/>all<sp/>now<sp/>under<sp/>a<sp/>BSD-Style<sp/>license</highlight></codeline>
<codeline lineno="411"><highlight class="comment"></highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>END</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Dev/git/UbixOS/sys/isa/fdc.c"/>
  </compounddef>
</doxygen>
