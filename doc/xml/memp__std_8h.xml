<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="memp__std_8h" kind="file" language="C++">
    <compoundname>memp_std.h</compoundname>
    <includedby refid="memp_8h" local="no">C:/Dev/git/UbixOS/sys/include/net/memp.h</includedby>
    <includedby refid="memp_8c" local="yes">C:/Dev/git/UbixOS/sys/net/core/memp.c</includedby>
    <invincdepgraph>
      <node id="7">
        <label>C:/Dev/git/UbixOS/sys/net/core/ipv6/ip6_frag.c</label>
        <link refid="ip6__frag_8c"/>
      </node>
      <node id="8">
        <label>C:/Dev/git/UbixOS/sys/include/net/igmp.h</label>
        <link refid="igmp_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>C:/Dev/git/UbixOS/sys/lib/ogprintf.cc</label>
        <link refid="ogprintf_8cc"/>
      </node>
      <node id="34">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/block.c</label>
        <link refid="block_8c"/>
      </node>
      <node id="72">
        <label>C:/Dev/git/UbixOS/sys/net/net/bot.c</label>
        <link refid="bot_8c"/>
      </node>
      <node id="54">
        <label>C:/Dev/git/UbixOS/sys/sde/colours.cc</label>
        <link refid="colours_8cc"/>
      </node>
      <node id="19">
        <label>C:/Dev/git/UbixOS/sys/init/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="70">
        <label>C:/Dev/git/UbixOS/sys/net/core/mem.c</label>
        <link refid="mem_8c"/>
      </node>
      <node id="35">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/dirCache.c</label>
        <link refid="dirCache_8c"/>
      </node>
      <node id="41">
        <label>C:/Dev/git/UbixOS/sys/arch/armv6/fork.c</label>
        <link refid="armv6_2fork_8c"/>
      </node>
      <node id="56">
        <label>C:/Dev/git/UbixOS/sys/sde/sde.cc</label>
        <link refid="sde_8cc"/>
      </node>
      <node id="55">
        <label>C:/Dev/git/UbixOS/sys/sde/main.cc</label>
        <link refid="main_8cc"/>
      </node>
      <node id="28">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/inode.c</label>
        <link refid="inode_8c"/>
      </node>
      <node id="46">
        <label>C:/Dev/git/UbixOS/sys/isa/atkbd.c</label>
        <link refid="atkbd_8c"/>
      </node>
      <node id="15">
        <label>C:/Dev/git/UbixOS/sys/net/api/tcpip.c</label>
        <link refid="tcpip_8c"/>
      </node>
      <node id="69">
        <label>C:/Dev/git/UbixOS/sys/include/netif/slipif.h</label>
        <link refid="slipif_8h"/>
      </node>
      <node id="22">
        <label>C:/Dev/git/UbixOS/sys/fs/fat/fat.c</label>
        <link refid="fat_8c"/>
      </node>
      <node id="17">
        <label>C:/Dev/git/UbixOS/sys/include/net/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/file.c</label>
        <link refid="file_8c"/>
      </node>
      <node id="5">
        <label>C:/Dev/git/UbixOS/sys/include/net/icmp.h</label>
        <link refid="icmp_8h"/>
      </node>
      <node id="36">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/directory.c</label>
        <link refid="directory_8c"/>
      </node>
      <node id="6">
        <label>C:/Dev/git/UbixOS/sys/include/net/icmp6.h</label>
        <link refid="icmp6_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>C:/Dev/git/UbixOS/sys/net/net/sys_arch.c</label>
        <link refid="sys__arch_8c"/>
      </node>
      <node id="30">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/vfs.c</label>
        <link refid="vfs_8c"/>
      </node>
      <node id="48">
        <label>C:/Dev/git/UbixOS/sys/kernel/endtask.c</label>
        <link refid="endtask_8c"/>
      </node>
      <node id="62">
        <label>C:/Dev/git/UbixOS/sys/pci/lnc.c</label>
        <link refid="lnc_8c"/>
      </node>
      <node id="61">
        <label>C:/Dev/git/UbixOS/sys/kmods/kmod.c</label>
        <link refid="kmod_8c"/>
      </node>
      <node id="32">
        <label>C:/Dev/git/UbixOS/sys/include/ubixfs/ubixfs.h</label>
        <link refid="include_2ubixfs_2ubixfs_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>C:/Dev/git/UbixOS/sys/include/net/priv/tcpip_priv.h</label>
        <link refid="tcpip__priv_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>C:/Dev/git/UbixOS/sys/isa/ne2k.c</label>
        <link refid="ne2k_8c"/>
      </node>
      <node id="40">
        <label>C:/Dev/git/UbixOS/sys/include/ubixos/vitals.h</label>
        <link refid="vitals_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>C:/Dev/git/UbixOS/sys/fs/ufs/ufs.c</label>
        <link refid="ufs_8c"/>
      </node>
      <node id="3">
        <label>C:/Dev/git/UbixOS/sys/include/net/stats.h</label>
        <link refid="stats_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>C:/Dev/git/UbixOS/sys/arch/i386/fork.c</label>
        <link refid="i386_2fork_8c"/>
      </node>
      <node id="57">
        <label>C:/Dev/git/UbixOS/sys/vmm/paging.c</label>
        <link refid="paging_8c"/>
      </node>
      <node id="20">
        <label>C:/Dev/git/UbixOS/sys/include/vfs/vfs.h</label>
        <link refid="include_2vfs_2vfs_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>C:/Dev/git/UbixOS/sys/kernel/ld.c</label>
        <link refid="ld_8c"/>
      </node>
      <node id="44">
        <label>C:/Dev/git/UbixOS/sys/arch/i386/systemtask.c</label>
        <link refid="i386_2systemtask_8c"/>
      </node>
      <node id="31">
        <label>C:/Dev/git/UbixOS/sys/include/sys/buf.h</label>
        <link refid="buf_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/thread.c</label>
        <link refid="thread_8c"/>
      </node>
      <node id="73">
        <label>C:/Dev/git/UbixOS/sys/net/net/shell.c</label>
        <link refid="shell_8c"/>
      </node>
      <node id="63">
        <label>C:/Dev/git/UbixOS/sys/include/net/tcpip.h</label>
        <link refid="tcpip_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>C:/Dev/git/UbixOS/sys/net/core/init.c</label>
        <link refid="core_2init_8c"/>
      </node>
      <node id="66">
        <label>C:/Dev/git/UbixOS/sys/net/netif/ethernetif.c</label>
        <link refid="ethernetif_8c"/>
      </node>
      <node id="4">
        <label>C:/Dev/git/UbixOS/sys/include/net/netif.h</label>
        <link refid="netif_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>C:/Dev/git/UbixOS/sys/include/net/ip6_frag.h</label>
        <link refid="ip6__frag_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/namei.c</label>
        <link refid="namei_8c"/>
      </node>
      <node id="38">
        <label>C:/Dev/git/UbixOS/sys/fs/common/gpt.c</label>
        <link refid="gpt_8c"/>
      </node>
      <node id="21">
        <label>C:/Dev/git/UbixOS/sys/fs/devfs/devfs.c</label>
        <link refid="devfs_8c"/>
      </node>
      <node id="14">
        <label>C:/Dev/git/UbixOS/sys/include/net/ip4_frag.h</label>
        <link refid="ip4__frag_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>C:/Dev/git/UbixOS/sys/vmm/vmm_memory.c</label>
        <link refid="vmm__memory_8c"/>
      </node>
      <node id="11">
        <label>C:/Dev/git/UbixOS/sys/net/core/netif.c</label>
        <link refid="netif_8c"/>
      </node>
      <node id="10">
        <label>C:/Dev/git/UbixOS/sys/net/core/memp.c</label>
        <link refid="memp_8c"/>
      </node>
      <node id="12">
        <label>C:/Dev/git/UbixOS/sys/net/core/timeouts.c</label>
        <link refid="timeouts_8c"/>
      </node>
      <node id="49">
        <label>C:/Dev/git/UbixOS/sys/kernel/syscall.c</label>
        <link refid="kernel_2syscall_8c"/>
      </node>
      <node id="42">
        <label>C:/Dev/git/UbixOS/sys/arch/armv6/systemtask.c</label>
        <link refid="armv6_2systemtask_8c"/>
      </node>
      <node id="13">
        <label>C:/Dev/git/UbixOS/sys/include/net/ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/ubixfs.c</label>
        <link refid="ubixfs_8c"/>
      </node>
      <node id="33">
        <label>C:/Dev/git/UbixOS/sys/arch/armv6/syscall.c</label>
        <link refid="arch_2armv6_2syscall_8c"/>
      </node>
      <node id="25">
        <label>C:/Dev/git/UbixOS/sys/fs/ufs/ffs.c</label>
        <link refid="ffs_8c"/>
      </node>
      <node id="1">
        <label>C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h</label>
        <link refid="memp__std_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>C:/Dev/git/UbixOS/sys/include/ufs/ffs.h</label>
        <link refid="ffs_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>C:/Dev/git/UbixOS/sys/include/netif/ethernet.h</label>
        <link refid="f_2ethernet_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/mount.c</label>
        <link refid="mount_8c"/>
      </node>
      <node id="68">
        <label>C:/Dev/git/UbixOS/sys/include/netif/etharp.h</label>
        <link refid="f_2etharp_8h"/>
      </node>
      <node id="39">
        <label>C:/Dev/git/UbixOS/sys/pci/hd.c</label>
        <link refid="hd_8c"/>
      </node>
      <node id="71">
        <label>C:/Dev/git/UbixOS/sys/net/core/pbuf.c</label>
        <link refid="pbuf_8c"/>
      </node>
      <node id="65">
        <label>C:/Dev/git/UbixOS/sys/net/net/init.c</label>
        <link refid="net_2init_8c"/>
      </node>
      <node id="37">
        <label>C:/Dev/git/UbixOS/sys/include/pci/hd.h</label>
        <link refid="hd_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>C:/Dev/git/UbixOS/sys/include/ubixos/init.h</label>
        <link refid="ubixos_2init_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>C:/Dev/git/UbixOS/sys/kernel/vitals.c</label>
        <link refid="vitals_8c"/>
      </node>
      <node id="51">
        <label>C:/Dev/git/UbixOS/sys/kernel/ubthread.c</label>
        <link refid="ubthread_8c"/>
      </node>
      <node id="50">
        <label>C:/Dev/git/UbixOS/sys/kernel/time.c</label>
        <link refid="time_8c"/>
      </node>
      <node id="2">
        <label>C:/Dev/git/UbixOS/sys/include/net/memp.h</label>
        <link refid="memp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="memp__std_8h_1a2a2ee070ed2e841bdf67f9379780e03d" prot="public" static="no">
        <name>LWIP_MALLOC_MEMPOOL</name>
        <param><defname>num</defname></param>
        <param><defname>size</defname></param>
        <initializer><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(POOL_##size, num, (size + <ref refid="group__compiler__abstraction_1gaef204be511fd32f681b55abc08e9ae18" kindref="member">LWIP_MEM_ALIGN_SIZE</ref>(sizeof(struct memp_malloc_helper))), &quot;MALLOC_&quot;#size)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" line="23" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memp__std_8h_1aa28365e96383d5262b08f8113b7f7c6d" prot="public" static="no">
        <name>LWIP_MALLOC_MEMPOOL_END</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" line="25" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memp__std_8h_1a0bc6a0d68500481012310ae5e44f4735" prot="public" static="no">
        <name>LWIP_MALLOC_MEMPOOL_START</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" line="24" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memp__std_8h_1a4ed41263feeda39be71d3aa9440494ad" prot="public" static="no">
        <name>LWIP_PBUF_MEMPOOL</name>
        <param><defname>name</defname></param>
        <param><defname>num</defname></param>
        <param><defname>payload</defname></param>
        <param><defname>desc</defname></param>
        <initializer><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(<ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>, num, (<ref refid="memp__std_8h_1a561ce9de860eb47d034ceeb7eff3b20c" kindref="member">MEMP_ALIGN_SIZE</ref>(sizeof(struct <ref refid="structpbuf" kindref="compound">pbuf</ref>)) + <ref refid="memp__std_8h_1a561ce9de860eb47d034ceeb7eff3b20c" kindref="member">MEMP_ALIGN_SIZE</ref>(payload)), desc)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" line="31" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="memp__std_8h_1ac4764284e3c86a71b167c5cb76ef43c2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>PBUF_POOL_SIZE</definition>
        <argsstring></argsstring>
        <name>PBUF_POOL_SIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" line="127" column="5" bodyfile="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LWIP_MEMPOOL</definition>
        <argsstring>(PBUF, MEMP_NUM_PBUF,(MEMP_ALIGN_SIZE(sizeof(struct pbuf))+MEMP_ALIGN_SIZE(0)), &quot;PBUF_REF/ROM&quot;) LWIP_MEMPOOL(PBUF_POOL</argsstring>
        <name>LWIP_MEMPOOL</name>
        <param>
          <type>PBUF</type>
        </param>
        <param>
          <type><ref refid="group__lwip__opts__memp_1ga92b30aed958ec59334d936d4ca725418" kindref="member">MEMP_NUM_PBUF</ref></type>
        </param>
        <param>
          <type>(<ref refid="memp__std_8h_1a561ce9de860eb47d034ceeb7eff3b20c" kindref="member">MEMP_ALIGN_SIZE</ref>(sizeof(struct <ref refid="structpbuf" kindref="compound">pbuf</ref>))+<ref refid="memp__std_8h_1a561ce9de860eb47d034ceeb7eff3b20c" kindref="member">MEMP_ALIGN_SIZE</ref>(0))</type>
        </param>
        <param>
          <type>&quot;PBUF_REF/ROM&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="memp__std_8h_1a561ce9de860eb47d034ceeb7eff3b20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MEMP_ALIGN_SIZE</definition>
        <argsstring>(sizeof(struct pbuf))+MEMP_ALIGN_SIZE(PBUF_POOL_BUFSIZE))</argsstring>
        <name>MEMP_ALIGN_SIZE</name>
        <param>
          <type>sizeof(struct <ref refid="structpbuf" kindref="compound">pbuf</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h" line="127" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>lwIP internal memory pools (do not use in application code) This file is deliberately included multiple times: once with empty definition of <ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL()</ref> to handle all includes and multiple times to build up various lists of mem pools. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>SETUP:<sp/>Make<sp/>sure<sp/>we<sp/>define<sp/>everything<sp/>we<sp/>will<sp/>need.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>We<sp/>have<sp/>create<sp/>three<sp/>types<sp/>of<sp/>pools:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>1)<sp/>MEMPOOL<sp/>-<sp/>standard<sp/>pools</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>2)<sp/>MALLOC_MEMPOOL<sp/>-<sp/>to<sp/>be<sp/>used<sp/>by<sp/>mem_malloc<sp/>in<sp/>mem.c</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>3)<sp/>PBUF_MEMPOOL<sp/>-<sp/>a<sp/>mempool<sp/>of<sp/>pbuf&apos;s,<sp/>so<sp/>include<sp/>space<sp/>for<sp/>the<sp/>pbuf<sp/>struct</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>include&apos;r<sp/>doesn&apos;t<sp/>require<sp/>any<sp/>special<sp/>treatment<sp/>of<sp/>each<sp/>of<sp/>the<sp/>types</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>above,<sp/>then<sp/>will<sp/>declare<sp/>#2<sp/>&amp;<sp/>#3<sp/>to<sp/>be<sp/>just<sp/>standard<sp/>mempools.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LWIP_MALLOC_MEMPOOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>treats<sp/>&quot;malloc<sp/>pools&quot;<sp/>just<sp/>like<sp/>any<sp/>other<sp/>pool.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>The<sp/>pools<sp/>are<sp/>a<sp/>little<sp/>bigger<sp/>to<sp/>provide<sp/>&apos;size&apos;<sp/>as<sp/>the<sp/>amount<sp/>of<sp/>user<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="memp__std_8h_1a2a2ee070ed2e841bdf67f9379780e03d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_MALLOC_MEMPOOL(num,<sp/>size)<sp/>LWIP_MEMPOOL(POOL_##size,<sp/>num,<sp/>(size<sp/>+<sp/>LWIP_MEM_ALIGN_SIZE(sizeof(struct<sp/>memp_malloc_helper))),<sp/>&quot;MALLOC_&quot;#size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="memp__std_8h_1a0bc6a0d68500481012310ae5e44f4735" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_MALLOC_MEMPOOL_START</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="memp__std_8h_1aa28365e96383d5262b08f8113b7f7c6d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_MALLOC_MEMPOOL_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_MALLOC_MEMPOOL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LWIP_PBUF_MEMPOOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>treats<sp/>&quot;pbuf<sp/>pools&quot;<sp/>just<sp/>like<sp/>any<sp/>other<sp/>pool.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Allocates<sp/>buffers<sp/>for<sp/>a<sp/>pbuf<sp/>struct<sp/>AND<sp/>a<sp/>payload<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="memp__std_8h_1a4ed41263feeda39be71d3aa9440494ad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_PBUF_MEMPOOL(name,<sp/>num,<sp/>payload,<sp/>desc)<sp/>LWIP_MEMPOOL(name,<sp/>num,<sp/>(MEMP_ALIGN_SIZE(sizeof(struct<sp/>pbuf))<sp/>+<sp/>MEMP_ALIGN_SIZE(payload)),<sp/>desc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_PBUF_MEMPOOL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>A<sp/>list<sp/>of<sp/>internal<sp/>pools<sp/>used<sp/>by<sp/>LWIP.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>LWIP_MEMPOOL(pool_name,<sp/>number_elements,<sp/>element_size,<sp/>pool_description)</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>creates<sp/>a<sp/>pool<sp/>name<sp/>MEMP_pool_name.<sp/>description<sp/>is<sp/>used<sp/>in<sp/>stats.c</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_RAW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(RAW_PCB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a379bf92ed322cda54cb701337421e0d3" kindref="member">MEMP_NUM_RAW_PCB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>raw_pcb),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RAW_PCB&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_RAW<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_UDP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(UDP_PCB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a2c416da481ab09bd1ba257b75a0707eb" kindref="member">MEMP_NUM_UDP_PCB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>udp_pcb),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;UDP_PCB&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_UDP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_TCP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(TCP_PCB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a73beecc19cfbc3114768f9b32b2cd70e" kindref="member">MEMP_NUM_TCP_PCB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tcp_pcb),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TCP_PCB&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(TCP_PCB_LISTEN,<sp/><ref refid="lwipopts_8h_1a04fba6a249123513271dccb4ec26aa5a" kindref="member">MEMP_NUM_TCP_PCB_LISTEN</ref>,<sp/><sp/>sizeof(struct<sp/>tcp_pcb_listen),<sp/>&quot;TCP_PCB_LISTEN&quot;)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(TCP_SEG,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1aa35fb3a1a76661e3ffb9722a57092de3" kindref="member">MEMP_NUM_TCP_SEG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(struct<sp/>tcp_seg),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;TCP_SEG&quot;)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_TCP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_IPV4<sp/>&amp;&amp;<sp/>IP_REASSEMBLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(REASSDATA,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a169436c5860253b90e25bdba9fdcac86" kindref="member">MEMP_NUM_REASSDATA</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ip_reassdata),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;REASSDATA&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_IPV4<sp/>&amp;&amp;<sp/>IP_REASSEMBLY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(IP_FRAG<sp/>&amp;&amp;<sp/>!LWIP_NETIF_TX_SINGLE_PBUF)<sp/>||<sp/>(LWIP_IPV6<sp/>&amp;&amp;<sp/>LWIP_IPV6_FRAG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(FRAG_PBUF,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a1f66051a654dcd7a4e19bc6aff240630" kindref="member">MEMP_NUM_FRAG_PBUF</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pbuf_custom_ref),</highlight><highlight class="stringliteral">&quot;FRAG_PBUF&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>IP_FRAG<sp/>&amp;&amp;<sp/>!LWIP_NETIF_TX_SINGLE_PBUF<sp/>||<sp/>(LWIP_IPV6<sp/>&amp;&amp;<sp/>LWIP_IPV6_FRAG)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_NETCONN<sp/>||<sp/>LWIP_SOCKET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(NETBUF,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a5d99df65869ac101ed6a611fc85016be" kindref="member">MEMP_NUM_NETBUF</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>netbuf),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NETBUF&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(NETCONN,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1acb40bd726b7e15593b20a628d298f456" kindref="member">MEMP_NUM_NETCONN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(struct<sp/>netconn),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;NETCONN&quot;)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_NETCONN<sp/>||<sp/>LWIP_SOCKET<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NO_SYS==0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(<ref refid="tcpip__priv_8h_1a1e0cb5032a61055e3f4a3426ed548937a8665d0f2f1498c366e90d67a1e4c7f80" kindref="member">TCPIP_MSG_API</ref>,<sp/><sp/><ref refid="lwipopts_8h_1afbbfd6ce8536038cd00fa85bebae987c" kindref="member">MEMP_NUM_TCPIP_MSG_API</ref>,<sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtcpip__msg" kindref="compound">tcpip_msg</ref>),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TCPIP_MSG_API&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_MPU_COMPATIBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(API_MSG,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a5a95abf3610c56e7c23cb035eb9c3444" kindref="member">MEMP_NUM_API_MSG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>api_msg),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;API_MSG&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_DNS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(DNS_API_MSG,<sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a3b1f228c598529c62895ad04ff294980" kindref="member">MEMP_NUM_DNS_API_MSG</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dns_api_msg),<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DNS_API_MSG&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_SOCKET<sp/>&amp;&amp;<sp/>!LWIP_TCPIP_CORE_LOCKING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(SOCKET_SETGETSOCKOPT_DATA,<sp/><ref refid="lwipopts_8h_1acf9782dd26bf8a655044dc041a9de948" kindref="member">MEMP_NUM_SOCKET_SETGETSOCKOPT_DATA</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lwip_setgetsockopt_data),<sp/></highlight><highlight class="stringliteral">&quot;SOCKET_SETGETSOCKOPT_DATA&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_NETIF_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(NETIFAPI_MSG,<sp/><sp/><sp/><ref refid="lwipopts_8h_1add5a973b98068ce9318ea2f96b5fa14c" kindref="member">MEMP_NUM_NETIFAPI_MSG</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>netifapi_msg),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NETIFAPI_MSG&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_MPU_COMPATIBLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!LWIP_TCPIP_CORE_LOCKING_INPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(<ref refid="tcpip__priv_8h_1a1e0cb5032a61055e3f4a3426ed548937a64972ba60577a99b44f088e0b5150c8a" kindref="member">TCPIP_MSG_INPKT</ref>,<ref refid="lwipopts_8h_1ab089a7088439e726c3801ba9e249d831" kindref="member">MEMP_NUM_TCPIP_MSG_INPKT</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtcpip__msg" kindref="compound">tcpip_msg</ref>),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TCPIP_MSG_INPKT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!LWIP_TCPIP_CORE_LOCKING_INPUT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>NO_SYS==0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_IPV4<sp/>&amp;&amp;<sp/>LWIP_ARP<sp/>&amp;&amp;<sp/>ARP_QUEUEING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(ARP_QUEUE,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a087b00ea20a7edebcad33a1a1353a5d7" kindref="member">MEMP_NUM_ARP_QUEUE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>etharp_q_entry),<sp/></highlight><highlight class="stringliteral">&quot;ARP_QUEUE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_IPV4<sp/>&amp;&amp;<sp/>LWIP_ARP<sp/>&amp;&amp;<sp/>ARP_QUEUEING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_IGMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(IGMP_GROUP,<sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1ab648ff95d8ffa4216b95f82a568a5d9a" kindref="member">MEMP_NUM_IGMP_GROUP</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>igmp_group),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;IGMP_GROUP&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_IGMP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_TIMERS<sp/>&amp;&amp;<sp/>!LWIP_TIMERS_CUSTOM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(SYS_TIMEOUT,<sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a4afbdca581a58d57bc7a81118a95327e" kindref="member">MEMP_NUM_SYS_TIMEOUT</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sys_timeo),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYS_TIMEOUT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_TIMERS<sp/>&amp;&amp;<sp/>!LWIP_TIMERS_CUSTOM<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_DNS<sp/>&amp;&amp;<sp/>LWIP_SOCKET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(NETDB,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a293bc22b60bf3f8e2520f60a88370e7a" kindref="member">MEMP_NUM_NETDB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NETDB_ELEM_SIZE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NETDB&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_DNS<sp/>&amp;&amp;<sp/>LWIP_SOCKET<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_DNS<sp/>&amp;&amp;<sp/>DNS_LOCAL_HOSTLIST<sp/>&amp;&amp;<sp/>DNS_LOCAL_HOSTLIST_IS_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(LOCALHOSTLIST,<sp/><sp/><ref refid="lwipopts_8h_1aa9b0f949da12cbe8fe5f7aefc30290e0" kindref="member">MEMP_NUM_LOCALHOSTLIST</ref>,<sp/><sp/><sp/>LOCALHOSTLIST_ELEM_SIZE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LOCALHOSTLIST&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_DNS<sp/>&amp;&amp;<sp/>DNS_LOCAL_HOSTLIST<sp/>&amp;&amp;<sp/>DNS_LOCAL_HOSTLIST_IS_DYNAMIC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_IPV6<sp/>&amp;&amp;<sp/>LWIP_ND6_QUEUEING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(ND6_QUEUE,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1abfaf3d92d51e2a9d70c8360af2611fb2" kindref="member">MEMP_NUM_ND6_QUEUE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>nd6_q_entry),<sp/></highlight><highlight class="stringliteral">&quot;ND6_QUEUE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_IPV6<sp/>&amp;&amp;<sp/>LWIP_ND6_QUEUEING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_IPV6<sp/>&amp;&amp;<sp/>LWIP_IPV6_REASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(IP6_REASSDATA,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a169436c5860253b90e25bdba9fdcac86" kindref="member">MEMP_NUM_REASSDATA</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ip6_reassdata),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;IP6_REASSDATA&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_IPV6<sp/>&amp;&amp;<sp/>LWIP_IPV6_REASS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_IPV6<sp/>&amp;&amp;<sp/>LWIP_IPV6_MLD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="memp__std_8h_1a922d258cde897fffc15fb1b4b0623e97" kindref="member">LWIP_MEMPOOL</ref>(MLD6_GROUP,<sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a89e92d8de8898696e797f13fdd169494" kindref="member">MEMP_NUM_MLD6_GROUP</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>mld_group),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MLD6_GROUP&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_IPV6<sp/>&amp;&amp;<sp/>LWIP_IPV6_MLD<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>A<sp/>list<sp/>of<sp/>pools<sp/>of<sp/>pbuf&apos;s<sp/>used<sp/>by<sp/>LWIP.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>LWIP_PBUF_MEMPOOL(pool_name,<sp/>number_elements,<sp/>pbuf_payload_size,<sp/>pool_description)</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>creates<sp/>a<sp/>pool<sp/>name<sp/>MEMP_pool_name.<sp/>description<sp/>is<sp/>used<sp/>in<sp/>stats.c</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>This<sp/>allocates<sp/>enough<sp/>space<sp/>for<sp/>the<sp/>pbuf<sp/>struct<sp/>and<sp/>a<sp/>payload.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>(Example:<sp/>pbuf_payload_size=0<sp/>allocates<sp/>only<sp/>size<sp/>for<sp/>the<sp/>struct)</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="memp__std_8h_1a4ed41263feeda39be71d3aa9440494ad" kindref="member">LWIP_PBUF_MEMPOOL</ref>(PBUF,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1a92b30aed958ec59334d936d4ca725418" kindref="member">MEMP_NUM_PBUF</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PBUF_REF/ROM&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127" refid="memp__std_8h_1ac4764284e3c86a71b167c5cb76ef43c2" refkind="member"><highlight class="normal"><ref refid="memp__std_8h_1a4ed41263feeda39be71d3aa9440494ad" kindref="member">LWIP_PBUF_MEMPOOL</ref>(<ref refid="group__pbuf_1ggab7e0e32fcc292c0d7107721766ed92fbae969347127387b9b59a23ccd24b76d21" kindref="member">PBUF_POOL</ref>,<sp/><ref refid="memp__std_8h_1ac4764284e3c86a71b167c5cb76ef43c2" kindref="member">PBUF_POOL_SIZE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lwipopts_8h_1ae61f4491d56e805e79b79eb5d35a00e5" kindref="member">PBUF_POOL_BUFSIZE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<ref refid="group__pbuf_1ggab7e0e32fcc292c0d7107721766ed92fbae969347127387b9b59a23ccd24b76d21" kindref="member">PBUF_POOL</ref>&quot;)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>Allow<sp/>for<sp/>user-defined<sp/>pools;<sp/>this<sp/>must<sp/>be<sp/>explicitly<sp/>set<sp/>in<sp/>lwipopts.h</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>since<sp/>the<sp/>default<sp/>is<sp/>to<sp/>NOT<sp/>look<sp/>for<sp/>lwippools.h</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MEMP_USE_CUSTOM_POOLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lwippools.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MEMP_USE_CUSTOM_POOLS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>REQUIRED<sp/>CLEANUP:<sp/>Clear<sp/>up<sp/>so<sp/>we<sp/>don&apos;t<sp/>get<sp/>&quot;multiply<sp/>defined&quot;<sp/>error<sp/>later</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>(#undef<sp/>is<sp/>ignored<sp/>for<sp/>something<sp/>that<sp/>is<sp/>not<sp/>defined)</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>LWIP_MEMPOOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>LWIP_MALLOC_MEMPOOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>LWIP_MALLOC_MEMPOOL_START</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>LWIP_MALLOC_MEMPOOL_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>LWIP_PBUF_MEMPOOL</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/git/UbixOS/sys/include/net/priv/memp_std.h"/>
  </compounddef>
</doxygen>
