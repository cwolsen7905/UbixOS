<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="api_8h" kind="file">
    <compoundname>api.h</compoundname>
    <includes refid="opt_8h" local="yes">net/opt.h</includes>
    <includes refid="pbuf_8h" local="yes">net/pbuf.h</includes>
    <includes refid="sys_8h" local="yes">net/sys.h</includes>
    <includes refid="ipv4_2ip_8h" local="yes">net/ipv4/ip.h</includes>
    <includes refid="udp_8h" local="yes">net/udp.h</includes>
    <includes refid="tcp_8h" local="yes">net/tcp.h</includes>
    <includes refid="err_8h" local="yes">net/err.h</includes>
    <includedby refid="api__msg_8h" local="yes">src/sys/include/net/api_msg.h</includedby>
    <includedby refid="api__lib_8c" local="yes">src/sys/net/api/api_lib.c</includedby>
    <includedby refid="sockets_8c" local="yes">src/sys/net/api/sockets.c</includedby>
    <includedby refid="bot_8c" local="yes">src/sys/net/net/bot.c</includedby>
    <includedby refid="shell_8c" local="yes">src/sys/net/net/shell.c</includedby>
    <includedby refid="udpecho_8c" local="yes">src/sys/net/net/udpecho.c</includedby>
    <incdepgraph>
      <node id="319">
        <label>net/ipv4/ip.h</label>
        <link refid="ipv4_2ip_8h"/>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
      </node>
      <node id="321">
        <label>arch/lib.h</label>
        <link refid="lib_8h"/>
      </node>
      <node id="323">
        <label>net/netif.h</label>
        <link refid="netif_8h"/>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
      </node>
      <node id="328">
        <label>net/udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
      </node>
      <node id="315">
        <label>arch/cpu.h</label>
        <link refid="cpu_8h"/>
      </node>
      <node id="318">
        <label>arch/sys_arch.h</label>
        <link refid="sys__arch_8h"/>
      </node>
      <node id="329">
        <label>net/tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
      </node>
      <node id="325">
        <label>ubixos/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="326" relation="include">
        </childnode>
      </node>
      <node id="326">
        <label>sys/_types.h</label>
        <link refid="__types_8h"/>
      </node>
      <node id="314">
        <label>net/arch.h</label>
        <link refid="arch_8h"/>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
      </node>
      <node id="331">
        <label>net/ipv4/icmp.h</label>
        <link refid="ipv4_2icmp_8h"/>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
      </node>
      <node id="311">
        <label>net/lwipopts.h</label>
        <link refid="lwipopts_8h"/>
      </node>
      <node id="320">
        <label>net/def.h</label>
        <link refid="def_8h"/>
        <childnode refid="321" relation="include">
        </childnode>
      </node>
      <node id="330">
        <label>net/mem.h</label>
        <link refid="mem_8h"/>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
      </node>
      <node id="322">
        <label>net/ipv4/ip_addr.h</label>
        <link refid="ipv4_2ip__addr_8h"/>
        <childnode refid="314" relation="include">
        </childnode>
      </node>
      <node id="324">
        <label>net/err.h</label>
        <link refid="err_8h"/>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
      </node>
      <node id="309">
        <label>src/sys/include/net/api.h</label>
        <link refid="api.h"/>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
      </node>
      <node id="310">
        <label>net/opt.h</label>
        <link refid="opt_8h"/>
        <childnode refid="311" relation="include">
        </childnode>
      </node>
      <node id="317">
        <label>net/sys.h</label>
        <link refid="sys_8h"/>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
      </node>
      <node id="312">
        <label>net/pbuf.h</label>
        <link refid="pbuf_8h"/>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
      </node>
      <node id="313">
        <label>net/debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="327">
        <label>net/ipv4/inet.h</label>
        <link refid="ipv4_2inet_8h"/>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
      </node>
      <node id="316">
        <label>arch/cc.h</label>
        <link refid="cc_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="342">
        <label>src/sys/net/net/udpecho.c</label>
        <link refid="udpecho_8c"/>
      </node>
      <node id="340">
        <label>src/sys/net/net/bot.c</label>
        <link refid="bot_8c"/>
      </node>
      <node id="336">
        <label>src/sys/net/api/tcpip.c</label>
        <link refid="tcpip_8c"/>
      </node>
      <node id="334">
        <label>src/sys/include/net/tcpip.h</label>
        <link refid="tcpip_8h"/>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
      </node>
      <node id="333">
        <label>src/sys/include/net/api_msg.h</label>
        <link refid="api__msg_8h"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
      </node>
      <node id="341">
        <label>src/sys/net/net/shell.c</label>
        <link refid="shell_8c"/>
      </node>
      <node id="338">
        <label>src/sys/net/api/api_lib.c</label>
        <link refid="api__lib_8c"/>
      </node>
      <node id="337">
        <label>src/sys/net/net/init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="332">
        <label>src/sys/include/net/api.h</label>
        <link refid="api.h"/>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
      </node>
      <node id="339">
        <label>src/sys/net/api/sockets.c</label>
        <link refid="sockets_8c"/>
      </node>
      <node id="335">
        <label>src/sys/net/api/api_msg.c</label>
        <link refid="api__msg_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structnetbuf" prot="public">netbuf</innerclass>
    <innerclass refid="structnetconn" prot="public">netconn</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="api_8h_1482106705a409ffb01daa6b18c159e5f" prot="public" static="no">
        <name>NETCONN_COPY</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="50" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="sockets_8c_1cb3ba0c7f21116c629f116e15e40ce2b" compoundref="sockets_8c" startline="305" endline="351">lwip_send</referencedby>
        <referencedby refid="sockets_8c_1e3d92ccb1ddfafe7df89185dbc881ec2" compoundref="sockets_8c" startline="417" endline="445">lwip_write</referencedby>
      </memberdef>
      <memberdef kind="define" id="api_8h_17a469e67f62b0f7266c8526284bc38c9" prot="public" static="no">
        <name>NETCONN_NOCOPY</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="49" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="shell_8c_1b5fde1c96ac74a036a6d6a80f4a934ab" compoundref="shell_8c" startline="58" endline="60">sendstr</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="api_8h_12c6c9c1869f443c5ec7b31180a44fada" prot="public" static="no">
        <name>netconn_state</name>
        <enumvalue id="api_8h_12c6c9c1869f443c5ec7b31180a44fadabf6d2818cd3f8ac1abe824234fe8dfa0" prot="public">
          <name>NETCONN_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="api_8h_12c6c9c1869f443c5ec7b31180a44fada572747ecfd262085e0dace9156f60d2e" prot="public">
          <name>NETCONN_WRITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="api_8h_12c6c9c1869f443c5ec7b31180a44fadaad63efdb335451638794101ec7dd76bf" prot="public">
          <name>NETCONN_ACCEPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="api_8h_12c6c9c1869f443c5ec7b31180a44fada059737a641b0ef6204f674b8a99d8210" prot="public">
          <name>NETCONN_RECV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="api_8h_12c6c9c1869f443c5ec7b31180a44fadaad9b6e6fa43d632df8dc3b155c53cfff" prot="public">
          <name>NETCONN_CONNECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="api_8h_12c6c9c1869f443c5ec7b31180a44fada575b2bcec88c95abac43cb5e8cce2f17" prot="public">
          <name>NETCONN_CLOSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="59" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="enum" id="api_8h_1aba260d28d105fb4bce9185fd0300d91" prot="public" static="no">
        <name>netconn_type</name>
        <enumvalue id="api_8h_1aba260d28d105fb4bce9185fd0300d9175d14318b91af7a452230189f47e5e1a" prot="public">
          <name>NETCONN_TCP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="api_8h_1aba260d28d105fb4bce9185fd0300d916b8ec191d69f7e639f4ab40779069636" prot="public">
          <name>NETCONN_UDP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="api_8h_1aba260d28d105fb4bce9185fd0300d91655e1625cc7e6a93f1e3d2646f56a1e4" prot="public">
          <name>NETCONN_UDPLITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="api_8h_1aba260d28d105fb4bce9185fd0300d917e0c3f566b3d4321b36b711b6b1ad6de" prot="public">
          <name>NETCONN_UDPNOCHKSUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="52" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" bodystart="52" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="api_8h_17770b72b0ae9e741fbb81f222e334a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* netbuf_alloc</definition>
        <argsstring>(struct netbuf *buf, uInt16 size)</argsstring>
        <name>netbuf_alloc</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="92" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="78" bodyend="90"/>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="structpbuf_18d32dc3e964369d4eec638fc37fbc460" compoundref="pbuf_8h" startline="71">pbuf::payload</references>
        <references refid="pbuf_8h_1bb6c8efa7f7739e71cb286c6dd4a47ef">pbuf_alloc</references>
        <references refid="pbuf_8h_1334112aa2ac402c254d604c0dbbbb746">pbuf_free</references>
        <references refid="pbuf_8h_1b3c589840cc5a202e7278f41463f97e7c5e9f28455bca98944a030d4b84ecfab">PBUF_RAM</references>
        <references refid="pbuf_8h_1ee1baa59bb2f85ba575b5a8619ac1ebf2ded3594a3977f8bf9cf09552be327b5">PBUF_TRANSPORT</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
      </memberdef>
      <memberdef kind="function" id="api_8h_1631e8bddd99b2397cd0b26973c659602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void netbuf_chain</definition>
        <argsstring>(struct netbuf *head, struct netbuf *tail)</argsstring>
        <name>netbuf_chain</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="97" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="114" bodyend="119"/>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e57c0bb141248dc601c118d1ec36170a04e">MEMP_NETBUF</references>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="pbuf_8h_1831c9a72bda1d3bd4c7b96f5a0e3b891">pbuf_chain</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
      </memberdef>
      <memberdef kind="function" id="api_8h_17c70594658105835086ed6fe19aa8067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void netbuf_copy</definition>
        <argsstring>(struct netbuf *buf, void *dataptr, uInt16 len)</argsstring>
        <name>netbuf_copy</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="106" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="186" bodyend="189"/>
        <references refid="api_8h_19a5f4f669674daa2f3b7b303d7cea915" compoundref="api__lib_8c" startline="158" endline="183">netbuf_copy_partial</references>
        <referencedby refid="bot_8c_1ab86e03f8301aa7da6924fe6120e0d31" compoundref="bot_8c" startline="56" endline="81">bot_thread</referencedby>
        <referencedby refid="shell_8c_1ac82cf7e63df29786725f476f0fbbe1b" compoundref="shell_8c" startline="66" endline="92">shell_main</referencedby>
        <referencedby refid="udpecho_8c_1cd77ce4346d8d940f934ad6007214bf0" compoundref="udpecho_8c" startline="44" endline="75">udpecho_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_19a5f4f669674daa2f3b7b303d7cea915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void netbuf_copy_partial</definition>
        <argsstring>(struct netbuf *buf, void *dataptr, uInt16 len, uInt16 offset)</argsstring>
        <name>netbuf_copy_partial</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="138" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="158" bodyend="183"/>
        <references refid="structpbuf_1238f00a0024a32992599c9d1abf9bb44" compoundref="pbuf_8h" startline="76">pbuf::len</references>
        <references refid="structpbuf_15e5763c94fd18d78937b0b58ce7df341" compoundref="pbuf_8h" startline="67">pbuf::next</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="structpbuf_18d32dc3e964369d4eec638fc37fbc460" compoundref="pbuf_8h" startline="71">pbuf::payload</references>
        <referencedby refid="sockets_8c_1a433d1ebe9c87f57160c0d260e225705" compoundref="sockets_8c" startline="216" endline="290">lwip_recvfrom</referencedby>
        <referencedby refid="api__lib_8c_17c70594658105835086ed6fe19aa8067" compoundref="api__lib_8c" startline="186" endline="189">netbuf_copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1b47d915f31d9e5d1218ed238f0428386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netbuf_data</definition>
        <argsstring>(struct netbuf *buf, void **dataptr, uInt16 *len)</argsstring>
        <name>netbuf_data</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>dataptr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref> *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="101" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="128" bodyend="136"/>
        <references refid="err_8h_1e1dcf352601ec4d3b700910df24f863d" compoundref="err_8h" startline="50">ERR_BUF</references>
        <references refid="err_8h_198c763adfeea8e9831c46ec269e47ae9" compoundref="err_8h" startline="48">ERR_OK</references>
        <references refid="structpbuf_1238f00a0024a32992599c9d1abf9bb44" compoundref="pbuf_8h" startline="76">pbuf::len</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structpbuf_18d32dc3e964369d4eec638fc37fbc460" compoundref="pbuf_8h" startline="71">pbuf::payload</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
      </memberdef>
      <memberdef kind="function" id="api_8h_19dfd3ddfe0ec65009cb140c68404b09d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void netbuf_delete</definition>
        <argsstring>(struct netbuf *buf)</argsstring>
        <name>netbuf_delete</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="91" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="66" bodyend="75"/>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e57c0bb141248dc601c118d1ec36170a04e">MEMP_NETBUF</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="pbuf_8h_1334112aa2ac402c254d604c0dbbbb746">pbuf_free</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
        <referencedby refid="bot_8c_1ab86e03f8301aa7da6924fe6120e0d31" compoundref="bot_8c" startline="56" endline="81">bot_thread</referencedby>
        <referencedby refid="sockets_8c_1fd0897a2e23d99a5dffcc976c7e5d72c" compoundref="sockets_8c" startline="147" endline="166">lwip_close</referencedby>
        <referencedby refid="sockets_8c_1a433d1ebe9c87f57160c0d260e225705" compoundref="sockets_8c" startline="216" endline="290">lwip_recvfrom</referencedby>
        <referencedby refid="sockets_8c_1cb3ba0c7f21116c629f116e15e40ce2b" compoundref="sockets_8c" startline="305" endline="351">lwip_send</referencedby>
        <referencedby refid="api__lib_8c_1b411221f912a6d9e4c82ac3963989403" compoundref="api__lib_8c" startline="227" endline="278">netconn_delete</referencedby>
        <referencedby refid="shell_8c_1ac82cf7e63df29786725f476f0fbbe1b" compoundref="shell_8c" startline="66" endline="92">shell_main</referencedby>
        <referencedby refid="udpecho_8c_1cd77ce4346d8d940f934ad6007214bf0" compoundref="udpecho_8c" startline="44" endline="75">udpecho_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1222ad2a2eb871d603b216a87e9f9be51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void netbuf_first</definition>
        <argsstring>(struct netbuf *buf)</argsstring>
        <name>netbuf_first</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="103" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="152" bodyend="155"/>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
      </memberdef>
      <memberdef kind="function" id="api_8h_102f82348ac23431a4b1512feae25f26b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void netbuf_free</definition>
        <argsstring>(struct netbuf *buf)</argsstring>
        <name>netbuf_free</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="93" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="93" bodyend="99"/>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="pbuf_8h_1334112aa2ac402c254d604c0dbbbb746">pbuf_free</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
      </memberdef>
      <memberdef kind="function" id="api_8h_18dd3c0551aa79d162b224ea5cd815b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structip__addr" kindref="compound">ip_addr</ref> *</type>
        <definition>struct ip_addr* netbuf_fromaddr</definition>
        <argsstring>(struct netbuf *buf)</argsstring>
        <name>netbuf_fromaddr</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="107" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="192" bodyend="195"/>
        <references refid="structnetbuf_149224185e32ceccf52327cf1f97408d6" compoundref="api_8h" startline="70">netbuf::fromaddr</references>
        <referencedby refid="sockets_8c_1a433d1ebe9c87f57160c0d260e225705" compoundref="sockets_8c" startline="216" endline="290">lwip_recvfrom</referencedby>
        <referencedby refid="udpecho_8c_1cd77ce4346d8d940f934ad6007214bf0" compoundref="udpecho_8c" startline="44" endline="75">udpecho_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_16294b37d1aba1478329e1f084f39db5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
        <definition>uInt16 netbuf_fromport</definition>
        <argsstring>(struct netbuf *buf)</argsstring>
        <name>netbuf_fromport</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="108" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="198" bodyend="201"/>
        <references refid="structnetbuf_1e14783033660f4975f99dcd6c57e1c7b" compoundref="api_8h" startline="71">netbuf::fromport</references>
        <referencedby refid="sockets_8c_1a433d1ebe9c87f57160c0d260e225705" compoundref="sockets_8c" startline="216" endline="290">lwip_recvfrom</referencedby>
        <referencedby refid="udpecho_8c_1cd77ce4346d8d940f934ad6007214bf0" compoundref="udpecho_8c" startline="44" endline="75">udpecho_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_16d20eca8f0316e4e71980108c1563581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
        <definition>uInt16 netbuf_len</definition>
        <argsstring>(struct netbuf *buf)</argsstring>
        <name>netbuf_len</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="99" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="122" bodyend="125"/>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="structpbuf_13b42932c0b26c9ff2b8fe88bd25fb127" compoundref="pbuf_8h" startline="74">pbuf::tot_len</references>
        <referencedby refid="bot_8c_1ab86e03f8301aa7da6924fe6120e0d31" compoundref="bot_8c" startline="56" endline="81">bot_thread</referencedby>
        <referencedby refid="sockets_8c_1a433d1ebe9c87f57160c0d260e225705" compoundref="sockets_8c" startline="216" endline="290">lwip_recvfrom</referencedby>
        <referencedby refid="shell_8c_1ac82cf7e63df29786725f476f0fbbe1b" compoundref="shell_8c" startline="66" endline="92">shell_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1aba704cd963e35e71145de9f5112991d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
        <definition>struct netbuf* netbuf_new</definition>
        <argsstring>(void)</argsstring>
        <name>netbuf_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="90" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="51" bodyend="63"/>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e57c0bb141248dc601c118d1ec36170a04e">MEMP_NETBUF</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
        <referencedby refid="sockets_8c_1cb3ba0c7f21116c629f116e15e40ce2b" compoundref="sockets_8c" startline="305" endline="351">lwip_send</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_169b35485702388475866d2ee07b158cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_13832cc814f0e7129add9a1cf7201c7ca" kindref="member">Int8</ref></type>
        <definition>Int8 netbuf_next</definition>
        <argsstring>(struct netbuf *buf)</argsstring>
        <name>netbuf_next</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="102" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="139" bodyend="149"/>
        <references refid="structpbuf_15e5763c94fd18d78937b0b58ce7df341" compoundref="pbuf_8h" startline="67">pbuf::next</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
      </memberdef>
      <memberdef kind="function" id="api_8h_1f038b56dbdd67a6e48bf0125c8ef61ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void netbuf_ref</definition>
        <argsstring>(struct netbuf *buf, void *dataptr, uInt16 size)</argsstring>
        <name>netbuf_ref</name>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="95" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="102" bodyend="111"/>
        <references refid="structpbuf_1238f00a0024a32992599c9d1abf9bb44" compoundref="pbuf_8h" startline="76">pbuf::len</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="structpbuf_18d32dc3e964369d4eec638fc37fbc460" compoundref="pbuf_8h" startline="71">pbuf::payload</references>
        <references refid="pbuf_8h_1bb6c8efa7f7739e71cb286c6dd4a47ef">pbuf_alloc</references>
        <references refid="pbuf_8h_1334112aa2ac402c254d604c0dbbbb746">pbuf_free</references>
        <references refid="pbuf_8h_1b3c589840cc5a202e7278f41463f97e7c120b0fe39efe35bb682e4aa3b82e2c9">PBUF_ROM</references>
        <references refid="pbuf_8h_1ee1baa59bb2f85ba575b5a8619ac1ebf2ded3594a3977f8bf9cf09552be327b5">PBUF_TRANSPORT</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
        <references refid="structpbuf_13b42932c0b26c9ff2b8fe88bd25fb127" compoundref="pbuf_8h" startline="74">pbuf::tot_len</references>
        <referencedby refid="sockets_8c_1cb3ba0c7f21116c629f116e15e40ce2b" compoundref="sockets_8c" startline="305" endline="351">lwip_send</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1b1ef5f260ad8147a3b5b70b317b489d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
        <definition>struct netconn* netconn_accept</definition>
        <argsstring>(struct netconn *conn)</argsstring>
        <name>netconn_accept</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="127" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="416" bodyend="427"/>
        <references refid="structnetconn_19b59188f300828d2b5814e27ab27cad0" compoundref="api_8h" startline="85">netconn::acceptmbox</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa">sys_mbox_fetch</references>
        <referencedby refid="sockets_8c_1f32c7d1377562b7b35fdd0535f6fa952" compoundref="sockets_8c" startline="91" endline="118">lwip_accept</referencedby>
        <referencedby refid="shell_8c_1e3226909e3db2e0b07a909a852e8c8ab" compoundref="shell_8c" startline="94" endline="112">shell_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1fcf7f4195b699c039de37b4dd3f563b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_addr</definition>
        <argsstring>(struct netconn *conn, struct ip_addr **addr, uInt16 *port)</argsstring>
        <name>netconn_addr</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structip__addr" kindref="compound">ip_addr</ref> **</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="119" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="306" bodyend="322"/>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
        <references refid="err_8h_198c763adfeea8e9831c46ec269e47ae9" compoundref="err_8h" startline="48">ERR_OK</references>
        <references refid="structtcp__pcb_19f625ba7c954031759a87b09f9d3bf66" compoundref="tcp_8h" startline="185">tcp_pcb::local_ip</references>
        <references refid="structudp__pcb_1189bcb0abce9e46de6ec7115d11d439a" compoundref="udp_8h" startline="64">udp_pcb::local_port</references>
        <references refid="structtcp__pcb_1ea74c25566d8d5f965ec9458dc5a4f59" compoundref="tcp_8h" startline="186">tcp_pcb::local_port</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d9175d14318b91af7a452230189f47e5e1a">NETCONN_TCP</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d916b8ec191d69f7e639f4ab40779069636">NETCONN_UDP</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d91655e1625cc7e6a93f1e3d2646f56a1e4">NETCONN_UDPLITE</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d917e0c3f566b3d4321b36b711b6b1ad6de">NETCONN_UDPNOCHKSUM</references>
        <references refid="structnetconn_1182f4ff8950c8818ef67db1ff64e9c23">netconn::pcb</references>
        <references refid="structnetconn_1d0c827630fdb7e427170600b5f177c95" compoundref="api_8h" startline="79">netconn::tcp</references>
        <references refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" compoundref="api_8h" startline="76">netconn::type</references>
        <references refid="structnetconn_1ffb33f27be14689a2fc9aa04a9dfa016" compoundref="api_8h" startline="80">netconn::udp</references>
      </memberdef>
      <memberdef kind="function" id="api_8h_1dc842fc0f1de512895ef3cc9c657272a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_bind</definition>
        <argsstring>(struct netconn *conn, struct ip_addr *addr, uInt16 port)</argsstring>
        <name>netconn_bind</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structip__addr" kindref="compound">ip_addr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="122" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="325" bodyend="352"/>
        <references refid="api__msg_8h_1f578a5487f9a3b529ed4617e52cad76df07bc566f5626f8189745bca07e94a31">API_MSG_BIND</references>
        <references refid="api__msg_8h_1ee039fae0c665f1372f4a3ff8395ffeb" compoundref="api__msg_8c" startline="523" endline="526">api_msg_post</references>
        <references refid="structapi__msg__msg_197ea2d17aa6bc11e99cb6bd6b563e094">api_msg_msg::bc</references>
        <references refid="structapi__msg__msg_1c023c82b96e9db5e8ff36f25049618b7" compoundref="api__msg_8h" startline="69">api_msg_msg::conn</references>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
        <references refid="err_8h_16ab63185cc5dff3c50c61d99bdf98369" compoundref="err_8h" startline="49">ERR_MEM</references>
        <references refid="err_8h_1a803bb0b2c462e8b1f60459dd1f54bc9" compoundref="err_8h" startline="58">ERR_VAL</references>
        <references refid="structnetconn_1d54529e379763409dae48a191c401def" compoundref="api_8h" startline="83">netconn::mbox</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e572decda39458fdeaa1921df20aa15f0ea">MEMP_API_MSG</references>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="structapi__msg_11f51adb48728605e630ee4fa986a5ff4" compoundref="api__msg_8h" startline="89">api_msg::msg</references>
        <references refid="structapi__msg__msg_1005b17bdb25aec7db177517b29a4bf70">api_msg_msg::msg</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d9175d14318b91af7a452230189f47e5e1a">NETCONN_TCP</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetconn_19f2bf6a3865b6a22a8a71ec2f3e770da" compoundref="api_8h" startline="84">netconn::recvmbox</references>
        <references refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa">sys_mbox_fetch</references>
        <references refid="sys_8h_13b766e6df37d63d5f1144c5089c2af94" compoundref="sys__arch_8c" startline="204" endline="213">sys_mbox_new</references>
        <references refid="sys__arch_8h_1151f190d8a41cf6e2a02e0eec2b75355" compoundref="sys__arch_8h" startline="38">SYS_MBOX_NULL</references>
        <references refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" compoundref="api_8h" startline="76">netconn::type</references>
        <referencedby refid="sockets_8c_11675042812d3bc6d5f9eeaa28c8f37a7" compoundref="sockets_8c" startline="121" endline="144">lwip_bind</referencedby>
        <referencedby refid="shell_8c_1e3226909e3db2e0b07a909a852e8c8ab" compoundref="shell_8c" startline="94" endline="112">shell_thread</referencedby>
        <referencedby refid="udpecho_8c_1cd77ce4346d8d940f934ad6007214bf0" compoundref="udpecho_8c" startline="44" endline="75">udpecho_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_125bb1c1c9928f91f53149a026e2e2624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_close</definition>
        <argsstring>(struct netconn *conn)</argsstring>
        <name>netconn_close</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="134" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="612" bodyend="637"/>
        <references refid="api__msg_8h_1f578a5487f9a3b529ed4617e52cad76d69663c2a794daeda40e795407074d588">API_MSG_CLOSE</references>
        <references refid="api__msg_8h_1ee039fae0c665f1372f4a3ff8395ffeb" compoundref="api__msg_8c" startline="523" endline="526">api_msg_post</references>
        <references refid="structapi__msg__msg_1c023c82b96e9db5e8ff36f25049618b7" compoundref="api__msg_8h" startline="69">api_msg_msg::conn</references>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
        <references refid="err_8h_16ab63185cc5dff3c50c61d99bdf98369" compoundref="err_8h" startline="49">ERR_MEM</references>
        <references refid="err_8h_1a803bb0b2c462e8b1f60459dd1f54bc9" compoundref="err_8h" startline="58">ERR_VAL</references>
        <references refid="structnetconn_1d54529e379763409dae48a191c401def" compoundref="api_8h" startline="83">netconn::mbox</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e572decda39458fdeaa1921df20aa15f0ea">MEMP_API_MSG</references>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="structapi__msg_11f51adb48728605e630ee4fa986a5ff4" compoundref="api__msg_8h" startline="89">api_msg::msg</references>
        <references refid="structapi__msg__msg_1005b17bdb25aec7db177517b29a4bf70">api_msg_msg::msg</references>
        <references refid="api_8h_12c6c9c1869f443c5ec7b31180a44fada575b2bcec88c95abac43cb5e8cce2f17">NETCONN_CLOSE</references>
        <references refid="api_8h_12c6c9c1869f443c5ec7b31180a44fadabf6d2818cd3f8ac1abe824234fe8dfa0">NETCONN_NONE</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetconn_12524a19c868ae15196e6aab1141e8885" compoundref="api_8h" startline="86">netconn::sem</references>
        <references refid="structnetconn_1936c33090ec35e5e8c0011be5515a589" compoundref="api_8h" startline="77">netconn::state</references>
        <references refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa">sys_mbox_fetch</references>
        <references refid="sys__arch_8h_1c66fcad3bfe79589054eb31765031544" compoundref="sys__arch_8h" startline="39">SYS_SEM_NULL</references>
        <references refid="sys_8h_16c4530613bd616e719a295779b87ae5c">sys_sem_wait</references>
        <referencedby refid="shell_8c_1ac82cf7e63df29786725f476f0fbbe1b" compoundref="shell_8c" startline="66" endline="92">shell_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_140e08b372ad246ec7d2a7c9b1a2bd8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_connect</definition>
        <argsstring>(struct netconn *conn, struct ip_addr *addr, uInt16 port)</argsstring>
        <name>netconn_connect</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structip__addr" kindref="compound">ip_addr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="125" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="355" bodyend="386"/>
        <references refid="api__msg_8h_1f578a5487f9a3b529ed4617e52cad76d384f86fe3736b156b8d16df7e355e571">API_MSG_CONNECT</references>
        <references refid="api__msg_8h_1ee039fae0c665f1372f4a3ff8395ffeb" compoundref="api__msg_8c" startline="523" endline="526">api_msg_post</references>
        <references refid="structapi__msg__msg_197ea2d17aa6bc11e99cb6bd6b563e094">api_msg_msg::bc</references>
        <references refid="structapi__msg__msg_1c023c82b96e9db5e8ff36f25049618b7" compoundref="api__msg_8h" startline="69">api_msg_msg::conn</references>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
        <references refid="err_8h_16ab63185cc5dff3c50c61d99bdf98369" compoundref="err_8h" startline="49">ERR_MEM</references>
        <references refid="err_8h_1a803bb0b2c462e8b1f60459dd1f54bc9" compoundref="err_8h" startline="58">ERR_VAL</references>
        <references refid="kprint_8h_1b2761bdf0cca73ad0fb5880895210cd8" compoundref="kprintf_8c" startline="38" endline="49">kprintf</references>
        <references refid="structnetconn_1d54529e379763409dae48a191c401def" compoundref="api_8h" startline="83">netconn::mbox</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e572decda39458fdeaa1921df20aa15f0ea">MEMP_API_MSG</references>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="structapi__msg_11f51adb48728605e630ee4fa986a5ff4" compoundref="api__msg_8h" startline="89">api_msg::msg</references>
        <references refid="structapi__msg__msg_1005b17bdb25aec7db177517b29a4bf70">api_msg_msg::msg</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetconn_19f2bf6a3865b6a22a8a71ec2f3e770da" compoundref="api_8h" startline="84">netconn::recvmbox</references>
        <references refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa">sys_mbox_fetch</references>
        <references refid="sys_8h_13b766e6df37d63d5f1144c5089c2af94" compoundref="sys__arch_8c" startline="204" endline="213">sys_mbox_new</references>
        <references refid="sys__arch_8h_1151f190d8a41cf6e2a02e0eec2b75355" compoundref="sys__arch_8h" startline="38">SYS_MBOX_NULL</references>
        <referencedby refid="bot_8c_1ab86e03f8301aa7da6924fe6120e0d31" compoundref="bot_8c" startline="56" endline="81">bot_thread</referencedby>
        <referencedby refid="sockets_8c_19688d733f4d571cef85948fe74e0f6c7" compoundref="sockets_8c" startline="169" endline="192">lwip_connect</referencedby>
        <referencedby refid="sockets_8c_18dba95d254d6cb221ba4039ad8f3337b" compoundref="sockets_8c" startline="354" endline="380">lwip_sendto</referencedby>
        <referencedby refid="udpecho_8c_1cd77ce4346d8d940f934ad6007214bf0" compoundref="udpecho_8c" startline="44" endline="75">udpecho_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1b411221f912a6d9e4c82ac3963989403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_delete</definition>
        <argsstring>(struct netconn *conn)</argsstring>
        <name>netconn_delete</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="112" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="227" bodyend="278"/>
        <references refid="structnetconn_19b59188f300828d2b5814e27ab27cad0" compoundref="api_8h" startline="85">netconn::acceptmbox</references>
        <references refid="api__msg_8h_1f578a5487f9a3b529ed4617e52cad76dda53fbecc71f69bfd0b98622b20f0c58">API_MSG_DELCONN</references>
        <references refid="api__msg_8h_1ee039fae0c665f1372f4a3ff8395ffeb" compoundref="api__msg_8c" startline="523" endline="526">api_msg_post</references>
        <references refid="structapi__msg__msg_1c023c82b96e9db5e8ff36f25049618b7" compoundref="api__msg_8h" startline="69">api_msg_msg::conn</references>
        <references refid="err_8h_16ab63185cc5dff3c50c61d99bdf98369" compoundref="err_8h" startline="49">ERR_MEM</references>
        <references refid="err_8h_198c763adfeea8e9831c46ec269e47ae9" compoundref="err_8h" startline="48">ERR_OK</references>
        <references refid="structnetconn_1d54529e379763409dae48a191c401def" compoundref="api_8h" startline="83">netconn::mbox</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e572decda39458fdeaa1921df20aa15f0ea">MEMP_API_MSG</references>
        <references refid="memp_8h_1ecd94926b7c2a0e23ae195f4ae97581f">memp_free</references>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e57c734c3ec027353cbb98cd72fa986f5f1">MEMP_NETCONN</references>
        <references refid="structapi__msg_11f51adb48728605e630ee4fa986a5ff4" compoundref="api__msg_8h" startline="89">api_msg::msg</references>
        <references refid="structapi__msg__msg_1005b17bdb25aec7db177517b29a4bf70">api_msg_msg::msg</references>
        <references refid="api_8h_19dfd3ddfe0ec65009cb140c68404b09d" compoundref="api__lib_8c" startline="66" endline="75">netbuf_delete</references>
        <references refid="api_8h_1b411221f912a6d9e4c82ac3963989403" compoundref="api__lib_8c" startline="227" endline="278">netconn_delete</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d9175d14318b91af7a452230189f47e5e1a">NETCONN_TCP</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="pbuf_8h_1334112aa2ac402c254d604c0dbbbb746">pbuf_free</references>
        <references refid="structnetconn_19f2bf6a3865b6a22a8a71ec2f3e770da" compoundref="api_8h" startline="84">netconn::recvmbox</references>
        <references refid="structnetconn_12524a19c868ae15196e6aab1141e8885" compoundref="api_8h" startline="86">netconn::sem</references>
        <references refid="sys_8h_194ffa3f15cc0eda6dae85c6ccb88da6e">sys_arch_mbox_fetch</references>
        <references refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa">sys_mbox_fetch</references>
        <references refid="sys_8h_166160e039d0222f4dd8534cd3ab84699">sys_mbox_free</references>
        <references refid="sys__arch_8h_1151f190d8a41cf6e2a02e0eec2b75355" compoundref="sys__arch_8h" startline="38">SYS_MBOX_NULL</references>
        <references refid="sys_8h_1f36773453b6a4db5ae71afef8bb77184">sys_sem_free</references>
        <references refid="sys__arch_8h_1c66fcad3bfe79589054eb31765031544" compoundref="sys__arch_8h" startline="39">SYS_SEM_NULL</references>
        <references refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" compoundref="api_8h" startline="76">netconn::type</references>
        <referencedby refid="sockets_8c_1f32c7d1377562b7b35fdd0535f6fa952" compoundref="sockets_8c" startline="91" endline="118">lwip_accept</referencedby>
        <referencedby refid="sockets_8c_1fd0897a2e23d99a5dffcc976c7e5d72c" compoundref="sockets_8c" startline="147" endline="166">lwip_close</referencedby>
        <referencedby refid="sockets_8c_1d1afafec89b608d54649d7d02117d17c" compoundref="sockets_8c" startline="383" endline="414">lwip_socket</referencedby>
        <referencedby refid="api__lib_8c_1b411221f912a6d9e4c82ac3963989403" compoundref="api__lib_8c" startline="227" endline="278">netconn_delete</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1b9eccae90351eb6c3d2ca690068445d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_err</definition>
        <argsstring>(struct netconn *conn)</argsstring>
        <name>netconn_err</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="136" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="640" bodyend="643"/>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
      </memberdef>
      <memberdef kind="function" id="api_8h_1b917e0fc541447d966e5cf712ce24e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_listen</definition>
        <argsstring>(struct netconn *conn)</argsstring>
        <name>netconn_listen</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="126" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="389" bodyend="413"/>
        <references refid="structnetconn_19b59188f300828d2b5814e27ab27cad0" compoundref="api_8h" startline="85">netconn::acceptmbox</references>
        <references refid="api__msg_8h_1f578a5487f9a3b529ed4617e52cad76d46f2e21faec2f5d2773c8bb7db2d7aaa">API_MSG_LISTEN</references>
        <references refid="api__msg_8h_1ee039fae0c665f1372f4a3ff8395ffeb" compoundref="api__msg_8c" startline="523" endline="526">api_msg_post</references>
        <references refid="structapi__msg__msg_1c023c82b96e9db5e8ff36f25049618b7" compoundref="api__msg_8h" startline="69">api_msg_msg::conn</references>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
        <references refid="err_8h_16ab63185cc5dff3c50c61d99bdf98369" compoundref="err_8h" startline="49">ERR_MEM</references>
        <references refid="err_8h_1a803bb0b2c462e8b1f60459dd1f54bc9" compoundref="err_8h" startline="58">ERR_VAL</references>
        <references refid="structnetconn_1d54529e379763409dae48a191c401def" compoundref="api_8h" startline="83">netconn::mbox</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e572decda39458fdeaa1921df20aa15f0ea">MEMP_API_MSG</references>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="structapi__msg_11f51adb48728605e630ee4fa986a5ff4" compoundref="api__msg_8h" startline="89">api_msg::msg</references>
        <references refid="structapi__msg__msg_1005b17bdb25aec7db177517b29a4bf70">api_msg_msg::msg</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa">sys_mbox_fetch</references>
        <references refid="sys_8h_13b766e6df37d63d5f1144c5089c2af94" compoundref="sys__arch_8c" startline="204" endline="213">sys_mbox_new</references>
        <references refid="sys__arch_8h_1151f190d8a41cf6e2a02e0eec2b75355" compoundref="sys__arch_8h" startline="38">SYS_MBOX_NULL</references>
        <referencedby refid="sockets_8c_1bee6ee286147cf334a1ba19f19b2e08b" compoundref="sockets_8c" startline="195" endline="213">lwip_listen</referencedby>
        <referencedby refid="shell_8c_1e3226909e3db2e0b07a909a852e8c8ab" compoundref="shell_8c" startline="94" endline="112">shell_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1935860c5a91e85457369b6f558e638fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
        <definition>struct netconn* netconn_new</definition>
        <argsstring>(enum netconn_type type)</argsstring>
        <name>netconn_new</name>
        <param>
          <type>enum <ref refid="api_8h_1aba260d28d105fb4bce9185fd0300d91" kindref="member">netconn_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="111" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="204" bodyend="224"/>
        <references refid="structnetconn_19b59188f300828d2b5814e27ab27cad0" compoundref="api_8h" startline="85">netconn::acceptmbox</references>
        <references refid="structnetconn_1d54529e379763409dae48a191c401def" compoundref="api_8h" startline="83">netconn::mbox</references>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e57c734c3ec027353cbb98cd72fa986f5f1">MEMP_NETCONN</references>
        <references refid="api_8h_12c6c9c1869f443c5ec7b31180a44fadabf6d2818cd3f8ac1abe824234fe8dfa0">NETCONN_NONE</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetconn_1182f4ff8950c8818ef67db1ff64e9c23">netconn::pcb</references>
        <references refid="structnetconn_19f2bf6a3865b6a22a8a71ec2f3e770da" compoundref="api_8h" startline="84">netconn::recvmbox</references>
        <references refid="structnetconn_12524a19c868ae15196e6aab1141e8885" compoundref="api_8h" startline="86">netconn::sem</references>
        <references refid="structnetconn_1936c33090ec35e5e8c0011be5515a589" compoundref="api_8h" startline="77">netconn::state</references>
        <references refid="sys_8h_13b766e6df37d63d5f1144c5089c2af94" compoundref="sys__arch_8c" startline="204" endline="213">sys_mbox_new</references>
        <references refid="sys__arch_8h_1151f190d8a41cf6e2a02e0eec2b75355" compoundref="sys__arch_8h" startline="38">SYS_MBOX_NULL</references>
        <references refid="sys__arch_8h_1c66fcad3bfe79589054eb31765031544" compoundref="sys__arch_8h" startline="39">SYS_SEM_NULL</references>
        <references refid="structnetconn_1d0c827630fdb7e427170600b5f177c95" compoundref="api_8h" startline="79">netconn::tcp</references>
        <references refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" compoundref="api_8h" startline="76">netconn::type</references>
        <referencedby refid="bot_8c_1ab86e03f8301aa7da6924fe6120e0d31" compoundref="bot_8c" startline="56" endline="81">bot_thread</referencedby>
        <referencedby refid="sockets_8c_1d1afafec89b608d54649d7d02117d17c" compoundref="sockets_8c" startline="383" endline="414">lwip_socket</referencedby>
        <referencedby refid="shell_8c_1e3226909e3db2e0b07a909a852e8c8ab" compoundref="shell_8c" startline="94" endline="112">shell_thread</referencedby>
        <referencedby refid="udpecho_8c_1cd77ce4346d8d940f934ad6007214bf0" compoundref="udpecho_8c" startline="44" endline="75">udpecho_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1afa4042fd63fd78a440006eb4da36eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_peer</definition>
        <argsstring>(struct netconn *conn, struct ip_addr **addr, uInt16 *port)</argsstring>
        <name>netconn_peer</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structip__addr" kindref="compound">ip_addr</ref> **</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="116" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="287" bodyend="303"/>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
        <references refid="err_8h_198c763adfeea8e9831c46ec269e47ae9" compoundref="err_8h" startline="48">ERR_OK</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d9175d14318b91af7a452230189f47e5e1a">NETCONN_TCP</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d916b8ec191d69f7e639f4ab40779069636">NETCONN_UDP</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d91655e1625cc7e6a93f1e3d2646f56a1e4">NETCONN_UDPLITE</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d917e0c3f566b3d4321b36b711b6b1ad6de">NETCONN_UDPNOCHKSUM</references>
        <references refid="structnetconn_1182f4ff8950c8818ef67db1ff64e9c23">netconn::pcb</references>
        <references refid="structudp__pcb_1719ac802c8824c1f64bb0d337b590b58" compoundref="udp_8h" startline="63">udp_pcb::remote_ip</references>
        <references refid="structtcp__pcb_1104f8c50bb00edff11df71133ac76fd7" compoundref="tcp_8h" startline="188">tcp_pcb::remote_ip</references>
        <references refid="structudp__pcb_1c1831887907d6cb95e5784c87278136c" compoundref="udp_8h" startline="64">udp_pcb::remote_port</references>
        <references refid="structtcp__pcb_13f779fa78a77818fc8f6210a17c52e81" compoundref="tcp_8h" startline="189">tcp_pcb::remote_port</references>
        <references refid="structnetconn_1d0c827630fdb7e427170600b5f177c95" compoundref="api_8h" startline="79">netconn::tcp</references>
        <references refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" compoundref="api_8h" startline="76">netconn::type</references>
        <references refid="structnetconn_1ffb33f27be14689a2fc9aa04a9dfa016" compoundref="api_8h" startline="80">netconn::udp</references>
        <referencedby refid="sockets_8c_1f32c7d1377562b7b35fdd0535f6fa952" compoundref="sockets_8c" startline="91" endline="118">lwip_accept</referencedby>
        <referencedby refid="sockets_8c_18dba95d254d6cb221ba4039ad8f3337b" compoundref="sockets_8c" startline="354" endline="380">lwip_sendto</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1cbd0b5a0344c2c3fffe5a02445a2c2b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
        <definition>struct netbuf* netconn_recv</definition>
        <argsstring>(struct netconn *conn)</argsstring>
        <name>netconn_recv</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="128" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="430" bodyend="506"/>
        <references refid="debug_8h_1671009550216f7dc03e67ba5751e3160" compoundref="debug_8h" startline="105">API_LIB_DEBUG</references>
        <references refid="api__msg_8h_1ee039fae0c665f1372f4a3ff8395ffeb" compoundref="api__msg_8c" startline="523" endline="526">api_msg_post</references>
        <references refid="api__msg_8h_1f578a5487f9a3b529ed4617e52cad76d7d2d29f00e09ebb6212968006c259307">API_MSG_RECV</references>
        <references refid="structapi__msg__msg_1c023c82b96e9db5e8ff36f25049618b7" compoundref="api__msg_8h" startline="69">api_msg_msg::conn</references>
        <references refid="debug_8h_18b52c1fca5671ffbfe068c8d50ca0065" compoundref="debug_8h" startline="92">DEBUGF</references>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
        <references refid="err_8h_188c4da0bf5d6a4410f6cfb864a5f04ce" compoundref="err_8h" startline="56">ERR_CONN</references>
        <references refid="err_8h_16ab63185cc5dff3c50c61d99bdf98369" compoundref="err_8h" startline="49">ERR_MEM</references>
        <references refid="err_8h_198c763adfeea8e9831c46ec269e47ae9" compoundref="err_8h" startline="48">ERR_OK</references>
        <references refid="structnetbuf_149224185e32ceccf52327cf1f97408d6" compoundref="api_8h" startline="70">netbuf::fromaddr</references>
        <references refid="structnetbuf_1e14783033660f4975f99dcd6c57e1c7b" compoundref="api_8h" startline="71">netbuf::fromport</references>
        <references refid="structapi__msg__msg_1430df6234ff9e241deaa7a951cbf9e81" compoundref="api__msg_8h" startline="79">api_msg_msg::len</references>
        <references refid="tcp_8h_1aad63c28ec94587c99838bd52424d634331ec9878c0ed22e62de969d4b96b5bb">LISTEN</references>
        <references refid="structnetconn_1d54529e379763409dae48a191c401def" compoundref="api_8h" startline="83">netconn::mbox</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e572decda39458fdeaa1921df20aa15f0ea">MEMP_API_MSG</references>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e57c0bb141248dc601c118d1ec36170a04e">MEMP_NETBUF</references>
        <references refid="structapi__msg_11f51adb48728605e630ee4fa986a5ff4" compoundref="api__msg_8h" startline="89">api_msg::msg</references>
        <references refid="structapi__msg__msg_1005b17bdb25aec7db177517b29a4bf70">api_msg_msg::msg</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d9175d14318b91af7a452230189f47e5e1a">NETCONN_TCP</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="structnetconn_1182f4ff8950c8818ef67db1ff64e9c23">netconn::pcb</references>
        <references refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" compoundref="api_8h" startline="69">netbuf::ptr</references>
        <references refid="structnetconn_19f2bf6a3865b6a22a8a71ec2f3e770da" compoundref="api_8h" startline="84">netconn::recvmbox</references>
        <references refid="structtcp__pcb_1f5fed23770a314eabbad7225fbf09ade" compoundref="tcp_8h" startline="178">tcp_pcb::state</references>
        <references refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa">sys_mbox_fetch</references>
        <references refid="sys_8h_166160e039d0222f4dd8534cd3ab84699">sys_mbox_free</references>
        <references refid="sys__arch_8h_1151f190d8a41cf6e2a02e0eec2b75355" compoundref="sys__arch_8h" startline="38">SYS_MBOX_NULL</references>
        <references refid="structnetconn_1d0c827630fdb7e427170600b5f177c95" compoundref="api_8h" startline="79">netconn::tcp</references>
        <references refid="structpbuf_13b42932c0b26c9ff2b8fe88bd25fb127" compoundref="pbuf_8h" startline="74">pbuf::tot_len</references>
        <references refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" compoundref="api_8h" startline="76">netconn::type</references>
        <references refid="structapi__msg_14b35b792fdec3605f27155b9db84a0bc" compoundref="api__msg_8h" startline="88">api_msg::type</references>
        <referencedby refid="bot_8c_1ab86e03f8301aa7da6924fe6120e0d31" compoundref="bot_8c" startline="56" endline="81">bot_thread</referencedby>
        <referencedby refid="sockets_8c_1a433d1ebe9c87f57160c0d260e225705" compoundref="sockets_8c" startline="216" endline="290">lwip_recvfrom</referencedby>
        <referencedby refid="shell_8c_1ac82cf7e63df29786725f476f0fbbe1b" compoundref="shell_8c" startline="66" endline="92">shell_main</referencedby>
        <referencedby refid="udpecho_8c_1cd77ce4346d8d940f934ad6007214bf0" compoundref="udpecho_8c" startline="44" endline="75">udpecho_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_1c4d4d10153d47c80a783c34b27c66238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_send</definition>
        <argsstring>(struct netconn *conn, struct netbuf *buf)</argsstring>
        <name>netconn_send</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structnetbuf" kindref="compound">netbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="130" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="509" bodyend="534"/>
        <references refid="debug_8h_1671009550216f7dc03e67ba5751e3160" compoundref="debug_8h" startline="105">API_LIB_DEBUG</references>
        <references refid="api__msg_8h_1ee039fae0c665f1372f4a3ff8395ffeb" compoundref="api__msg_8c" startline="523" endline="526">api_msg_post</references>
        <references refid="api__msg_8h_1f578a5487f9a3b529ed4617e52cad76d951dbc12d5c7d0156077bd887fa7d36e">API_MSG_SEND</references>
        <references refid="structapi__msg__msg_1c023c82b96e9db5e8ff36f25049618b7" compoundref="api__msg_8h" startline="69">api_msg_msg::conn</references>
        <references refid="debug_8h_18b52c1fca5671ffbfe068c8d50ca0065" compoundref="debug_8h" startline="92">DEBUGF</references>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
        <references refid="err_8h_16ab63185cc5dff3c50c61d99bdf98369" compoundref="err_8h" startline="49">ERR_MEM</references>
        <references refid="err_8h_198c763adfeea8e9831c46ec269e47ae9" compoundref="err_8h" startline="48">ERR_OK</references>
        <references refid="err_8h_1a803bb0b2c462e8b1f60459dd1f54bc9" compoundref="err_8h" startline="58">ERR_VAL</references>
        <references refid="structnetconn_1d54529e379763409dae48a191c401def" compoundref="api_8h" startline="83">netconn::mbox</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e572decda39458fdeaa1921df20aa15f0ea">MEMP_API_MSG</references>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="structapi__msg_11f51adb48728605e630ee4fa986a5ff4" compoundref="api__msg_8h" startline="89">api_msg::msg</references>
        <references refid="structapi__msg__msg_1005b17bdb25aec7db177517b29a4bf70">api_msg_msg::msg</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" compoundref="api_8h" startline="69">netbuf::p</references>
        <references refid="structapi__msg__msg_14fc5229c85bb1b1928871733dfdf0f3d" compoundref="api__msg_8h" startline="72">api_msg_msg::p</references>
        <references refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa">sys_mbox_fetch</references>
        <references refid="structpbuf_13b42932c0b26c9ff2b8fe88bd25fb127" compoundref="pbuf_8h" startline="74">pbuf::tot_len</references>
        <referencedby refid="sockets_8c_1cb3ba0c7f21116c629f116e15e40ce2b" compoundref="sockets_8c" startline="305" endline="351">lwip_send</referencedby>
        <referencedby refid="udpecho_8c_1cd77ce4346d8d940f934ad6007214bf0" compoundref="udpecho_8c" startline="44" endline="75">udpecho_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_15ab1d6bb5e45b28125312f1b3c840853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="api_8h_1aba260d28d105fb4bce9185fd0300d91" kindref="member">netconn_type</ref></type>
        <definition>enum netconn_type netconn_type</definition>
        <argsstring>(struct netconn *conn)</argsstring>
        <name>netconn_type</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="113" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="281" bodyend="284"/>
        <references refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" compoundref="api_8h" startline="76">netconn::type</references>
        <referencedby refid="sockets_8c_1a433d1ebe9c87f57160c0d260e225705" compoundref="sockets_8c" startline="216" endline="290">lwip_recvfrom</referencedby>
        <referencedby refid="sockets_8c_1cb3ba0c7f21116c629f116e15e40ce2b" compoundref="sockets_8c" startline="305" endline="351">lwip_send</referencedby>
        <referencedby refid="sockets_8c_1e3d92ccb1ddfafe7df89185dbc881ec2" compoundref="sockets_8c" startline="417" endline="445">lwip_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="api_8h_19363929b6c680bc1dd3f302885128959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref></type>
        <definition>err_t netconn_write</definition>
        <argsstring>(struct netconn *conn, void *dataptr, uInt16 size, uInt8 copy)</argsstring>
        <name>netconn_write</name>
        <param>
          <type>struct <ref refid="structnetconn" kindref="compound">netconn</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a4e0f27a9aca905e340c06d2dcae843c" kindref="member">uInt8</ref></type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h" line="133" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/api/api_lib.c" bodystart="537" bodyend="609"/>
        <references refid="debug_8h_1671009550216f7dc03e67ba5751e3160" compoundref="debug_8h" startline="105">API_LIB_DEBUG</references>
        <references refid="api__msg_8h_1ee039fae0c665f1372f4a3ff8395ffeb" compoundref="api__msg_8c" startline="523" endline="526">api_msg_post</references>
        <references refid="api__msg_8h_1f578a5487f9a3b529ed4617e52cad76db61d9c706d0cd2be9779e238553c9755">API_MSG_WRITE</references>
        <references refid="structapi__msg__msg_1c023c82b96e9db5e8ff36f25049618b7" compoundref="api__msg_8h" startline="69">api_msg_msg::conn</references>
        <references refid="debug_8h_18b52c1fca5671ffbfe068c8d50ca0065" compoundref="debug_8h" startline="92">DEBUGF</references>
        <references refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" compoundref="api_8h" startline="82">netconn::err</references>
        <references refid="err_8h_16ab63185cc5dff3c50c61d99bdf98369" compoundref="err_8h" startline="49">ERR_MEM</references>
        <references refid="err_8h_198c763adfeea8e9831c46ec269e47ae9" compoundref="err_8h" startline="48">ERR_OK</references>
        <references refid="err_8h_1a803bb0b2c462e8b1f60459dd1f54bc9" compoundref="err_8h" startline="58">ERR_VAL</references>
        <references refid="structnetconn_1d54529e379763409dae48a191c401def" compoundref="api_8h" startline="83">netconn::mbox</references>
        <references refid="memp_8h_185a164b1f7764951cc685ea525114e572decda39458fdeaa1921df20aa15f0ea">MEMP_API_MSG</references>
        <references refid="memp_8h_1269bd926cd0413cf1948cf1992209451">memp_freep</references>
        <references refid="memp_8h_18fd5bd978dc56399e1649381cc2a1aeb">memp_mallocp</references>
        <references refid="structapi__msg_11f51adb48728605e630ee4fa986a5ff4" compoundref="api__msg_8h" startline="89">api_msg::msg</references>
        <references refid="structapi__msg__msg_1005b17bdb25aec7db177517b29a4bf70">api_msg_msg::msg</references>
        <references refid="api_8h_12c6c9c1869f443c5ec7b31180a44fadabf6d2818cd3f8ac1abe824234fe8dfa0">NETCONN_NONE</references>
        <references refid="api_8h_1aba260d28d105fb4bce9185fd0300d9175d14318b91af7a452230189f47e5e1a">NETCONN_TCP</references>
        <references refid="api_8h_12c6c9c1869f443c5ec7b31180a44fada572747ecfd262085e0dace9156f60d2e">NETCONN_WRITE</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="structnetconn_1182f4ff8950c8818ef67db1ff64e9c23">netconn::pcb</references>
        <references refid="structnetconn_12524a19c868ae15196e6aab1141e8885" compoundref="api_8h" startline="86">netconn::sem</references>
        <references refid="structnetconn_1936c33090ec35e5e8c0011be5515a589" compoundref="api_8h" startline="77">netconn::state</references>
        <references refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa">sys_mbox_fetch</references>
        <references refid="sys_8h_1f36773453b6a4db5ae71afef8bb77184">sys_sem_free</references>
        <references refid="sys_8h_1adf2563f342b33ff6033eaa12f642e9d" compoundref="sys__arch_8c" startline="295" endline="297">sys_sem_new</references>
        <references refid="sys__arch_8h_1c66fcad3bfe79589054eb31765031544" compoundref="sys__arch_8h" startline="39">SYS_SEM_NULL</references>
        <references refid="sys_8h_16c4530613bd616e719a295779b87ae5c">sys_sem_wait</references>
        <references refid="structnetconn_1d0c827630fdb7e427170600b5f177c95" compoundref="api_8h" startline="79">netconn::tcp</references>
        <references refid="tcp_8h_1d1a95f09deb49cd7341d35527d6d3e2f" compoundref="tcp_8h" startline="81">tcp_sndbuf</references>
        <references refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" compoundref="api_8h" startline="76">netconn::type</references>
        <references refid="structapi__msg__msg_14f071675ee5451c073396ee03a5bb78f">api_msg_msg::w</references>
        <referencedby refid="sockets_8c_1cb3ba0c7f21116c629f116e15e40ce2b" compoundref="sockets_8c" startline="305" endline="351">lwip_send</referencedby>
        <referencedby refid="sockets_8c_1e3d92ccb1ddfafe7df89185dbc881ec2" compoundref="sockets_8c" startline="417" endline="445">lwip_write</referencedby>
        <referencedby refid="shell_8c_1b5fde1c96ac74a036a6d6a80f4a934ab" compoundref="shell_8c" startline="58" endline="60">sendstr</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001,<sp/>Swedish<sp/>Institute<sp/>of<sp/>Computer<sp/>Science.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Institute<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>INSTITUTE<sp/>AND<sp/>CONTRIBUTORS<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>INSTITUTE<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>lwIP<sp/>TCP/IP<sp/>stack.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Adam<sp/>Dunkels<sp/>&lt;adam@sics.se&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>$Id: api_8h.xml 88 2016-01-12 00:11:29Z reddawg $</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__LWIP_API_H__</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__LWIP_API_H__</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="opt_8h" kindref="compound">net/opt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pbuf_8h" kindref="compound">net/pbuf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sys_8h" kindref="compound">net/sys.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ipv4_2ip_8h" kindref="compound">net/ipv4/ip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="udp_8h" kindref="compound">net/udp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tcp_8h" kindref="compound">net/tcp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="err_8h" kindref="compound">net/err.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="api_8h_17a469e67f62b0f7266c8526284bc38c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NETCONN_NOCOPY<sp/>0x00</highlight></codeline>
<codeline lineno="50" refid="api_8h_1482106705a409ffb01daa6b18c159e5f" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NETCONN_COPY<sp/><sp/><sp/>0x01</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="api_8h_1aba260d28d105fb4bce9185fd0300d91" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="api_8h_15ab1d6bb5e45b28125312f1b3c840853" kindref="member">netconn_type</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="api_8h_1aba260d28d105fb4bce9185fd0300d9175d14318b91af7a452230189f47e5e1a" kindref="member">NETCONN_TCP</ref>,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="api_8h_1aba260d28d105fb4bce9185fd0300d916b8ec191d69f7e639f4ab40779069636" kindref="member">NETCONN_UDP</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="api_8h_1aba260d28d105fb4bce9185fd0300d91655e1625cc7e6a93f1e3d2646f56a1e4" kindref="member">NETCONN_UDPLITE</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="api_8h_1aba260d28d105fb4bce9185fd0300d917e0c3f566b3d4321b36b711b6b1ad6de" kindref="member">NETCONN_UDPNOCHKSUM</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="api_8h_12c6c9c1869f443c5ec7b31180a44fada" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="api_8h_12c6c9c1869f443c5ec7b31180a44fada" kindref="member">netconn_state</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="api_8h_12c6c9c1869f443c5ec7b31180a44fadabf6d2818cd3f8ac1abe824234fe8dfa0" kindref="member">NETCONN_NONE</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="api_8h_12c6c9c1869f443c5ec7b31180a44fada572747ecfd262085e0dace9156f60d2e" kindref="member">NETCONN_WRITE</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="api_8h_12c6c9c1869f443c5ec7b31180a44fadaad63efdb335451638794101ec7dd76bf" kindref="member">NETCONN_ACCEPT</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="api_8h_12c6c9c1869f443c5ec7b31180a44fada059737a641b0ef6204f674b8a99d8210" kindref="member">NETCONN_RECV</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="api_8h_12c6c9c1869f443c5ec7b31180a44fadaad9b6e6fa43d632df8dc3b155c53cfff" kindref="member">NETCONN_CONNECT</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="api_8h_12c6c9c1869f443c5ec7b31180a44fada575b2bcec88c95abac43cb5e8cce2f17" kindref="member">NETCONN_CLOSE</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structnetbuf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>{</highlight></codeline>
<codeline lineno="69" refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpbuf" kindref="compound">pbuf</ref><sp/>*<ref refid="structnetbuf_1e0c3ba45f7e26a90585c8d79d59c41bd" kindref="member">p</ref>,<sp/>*<ref refid="structnetbuf_12301ad2b03edfb74049a2b0ef6cd2cd5" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="70" refid="structnetbuf_149224185e32ceccf52327cf1f97408d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structip__addr" kindref="compound">ip_addr</ref><sp/>*<ref refid="structnetbuf_149224185e32ceccf52327cf1f97408d6" kindref="member">fromaddr</ref>;</highlight></codeline>
<codeline lineno="71" refid="structnetbuf_1e14783033660f4975f99dcd6c57e1c7b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/><ref refid="structnetbuf_1e14783033660f4975f99dcd6c57e1c7b" kindref="member">fromport</ref>;</highlight></codeline>
<codeline lineno="72" refid="structnetbuf_1efd0b92792db1bdb3547d1f1d3212f67" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><ref refid="structnetbuf_1efd0b92792db1bdb3547d1f1d3212f67" kindref="member">err</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structnetconn" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>{</highlight></codeline>
<codeline lineno="76" refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="api_8h_15ab1d6bb5e45b28125312f1b3c840853" kindref="member">netconn_type</ref><sp/><ref refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="77" refid="structnetconn_1936c33090ec35e5e8c0011be5515a589" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="api_8h_12c6c9c1869f443c5ec7b31180a44fada" kindref="member">netconn_state</ref><sp/><ref refid="structnetconn_1936c33090ec35e5e8c0011be5515a589" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79" refid="structnetconn_1d0c827630fdb7e427170600b5f177c95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcp__pcb" kindref="compound">tcp_pcb</ref><sp/>*<ref refid="structnetconn_1d0c827630fdb7e427170600b5f177c95" kindref="member">tcp</ref>;</highlight></codeline>
<codeline lineno="80" refid="structnetconn_1ffb33f27be14689a2fc9aa04a9dfa016" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structudp__pcb" kindref="compound">udp_pcb</ref><sp/>*<ref refid="structnetconn_1ffb33f27be14689a2fc9aa04a9dfa016" kindref="member">udp</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structnetconn_1182f4ff8950c8818ef67db1ff64e9c23" kindref="member">pcb</ref>;</highlight></codeline>
<codeline lineno="82" refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><ref refid="structnetconn_15da7386a373d51b886f0f6e5bbe50adb" kindref="member">err</ref>;</highlight></codeline>
<codeline lineno="83" refid="structnetconn_1d54529e379763409dae48a191c401def" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref><sp/><ref refid="structnetconn_1d54529e379763409dae48a191c401def" kindref="member">mbox</ref>;</highlight></codeline>
<codeline lineno="84" refid="structnetconn_19f2bf6a3865b6a22a8a71ec2f3e770da" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref><sp/><ref refid="structnetconn_19f2bf6a3865b6a22a8a71ec2f3e770da" kindref="member">recvmbox</ref>;</highlight></codeline>
<codeline lineno="85" refid="structnetconn_19b59188f300828d2b5814e27ab27cad0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref><sp/><ref refid="structnetconn_19b59188f300828d2b5814e27ab27cad0" kindref="member">acceptmbox</ref>;</highlight></codeline>
<codeline lineno="86" refid="structnetconn_12524a19c868ae15196e6aab1141e8885" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsys__sem" kindref="compound">sys_sem_t</ref><sp/><ref refid="structnetconn_12524a19c868ae15196e6aab1141e8885" kindref="member">sem</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Network<sp/>buffer<sp/>functions:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<sp/><sp/><sp/><ref refid="api_8h_1aba704cd963e35e71145de9f5112991d" kindref="member">netbuf_new</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_19dfd3ddfe0ec65009cb140c68404b09d" kindref="member">netbuf_delete</ref><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_17770b72b0ae9e741fbb81f222e334a1a" kindref="member">netbuf_alloc</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,<sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>size);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_102f82348ac23431a4b1512feae25f26b" kindref="member">netbuf_free</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1f038b56dbdd67a6e48bf0125c8ef61ba" kindref="member">netbuf_ref</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataptr,<sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>size);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1631e8bddd99b2397cd0b26973c659602" kindref="member">netbuf_chain</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*head,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*tail);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_16d20eca8f0316e4e71980108c1563581" kindref="member">netbuf_len</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1b47d915f31d9e5d1218ed238f0428386" kindref="member">netbuf_data</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**dataptr,<sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>*len);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="types_8h_13832cc814f0e7129add9a1cf7201c7ca" kindref="member">Int8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_169b35485702388475866d2ee07b158cb" kindref="member">netbuf_next</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1222ad2a2eb871d603b216a87e9f9be51" kindref="member">netbuf_first</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_17c70594658105835086ed6fe19aa8067" kindref="member">netbuf_copy</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataptr,<sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>len);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structip__addr" kindref="compound">ip_addr</ref><sp/>*<sp/><sp/><ref refid="api_8h_18dd3c0551aa79d162b224ea5cd815b55" kindref="member">netbuf_fromaddr</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_16294b37d1aba1478329e1f084f39db5d" kindref="member">netbuf_fromport</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Network<sp/>connection<sp/>functions:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*<sp/><sp/><ref refid="api_8h_1935860c5a91e85457369b6f558e638fd" kindref="member">netconn_new</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="api_8h_15ab1d6bb5e45b28125312f1b3c840853" kindref="member">netconn_type</ref><sp/><ref refid="structnetconn_161af908d1d2e4e7345ac65d3b390d7b6" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1b411221f912a6d9e4c82ac3963989403" kindref="member">netconn_delete</ref><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="api_8h_15ab1d6bb5e45b28125312f1b3c840853" kindref="member">netconn_type</ref><sp/><ref refid="api_8h_15ab1d6bb5e45b28125312f1b3c840853" kindref="member">netconn_type</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1afa4042fd63fd78a440006eb4da36eeb" kindref="member">netconn_peer</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structip__addr" kindref="compound">ip_addr</ref><sp/>**addr,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>*port);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1fcf7f4195b699c039de37b4dd3f563b7" kindref="member">netconn_addr</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structip__addr" kindref="compound">ip_addr</ref><sp/>**addr,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>*port);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1dc842fc0f1de512895ef3cc9c657272a" kindref="member">netconn_bind</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structip__addr" kindref="compound">ip_addr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>port);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_140e08b372ad246ec7d2a7c9b1a2bd8fb" kindref="member">netconn_connect</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structip__addr" kindref="compound">ip_addr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>port);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1b917e0fc541447d966e5cf712ce24e58" kindref="member">netconn_listen</ref><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*<sp/><sp/><ref refid="api_8h_1b1ef5f260ad8147a3b5b70b317b489d2" kindref="member">netconn_accept</ref><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<sp/><sp/><sp/><ref refid="api_8h_1cbd0b5a0344c2c3fffe5a02445a2c2b3" kindref="member">netconn_recv</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1c4d4d10153d47c80a783c34b27c66238" kindref="member">netconn_send</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_19363929b6c680bc1dd3f302885128959" kindref="member">netconn_write</ref><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataptr,<sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>size,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a4e0f27a9aca905e340c06d2dcae843c" kindref="member">uInt8</ref><sp/>copy);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_125bb1c1c9928f91f53149a026e2e2624" kindref="member">netconn_close</ref><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="err_8h_1b7190f3da5c85931fc059e0312bc1407" kindref="member">err_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="api_8h_1b9eccae90351eb6c3d2ca690068445d4" kindref="member">netconn_err</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetconn" kindref="compound">netconn</ref><sp/>*conn);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="api_8h_19a5f4f669674daa2f3b7b303d7cea915" kindref="member">netbuf_copy_partial</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetbuf" kindref="compound">netbuf</ref><sp/>*<ref refid="structbuf" kindref="compound">buf</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataptr,<sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>len,<sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>offset);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__LWIP_API_H__<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/api.h"/>
  </compounddef>
</doxygen>
