<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="sys_8h" kind="file">
    <compoundname>sys.h</compoundname>
    <includes refid="cc_8h" local="yes">arch/cc.h</includes>
    <includes refid="sys__arch_8h" local="yes">arch/sys_arch.h</includes>
    <includedby refid="api_8h" local="yes">src/sys/include/net/api.h</includedby>
    <includedby refid="api__msg_8h" local="yes">src/sys/include/net/api_msg.h</includedby>
    <includedby refid="tcp_8h" local="yes">src/sys/include/net/tcp.h</includedby>
    <includedby refid="api__msg_8c" local="yes">src/sys/net/api/api_msg.c</includedby>
    <includedby refid="tcpip_8c" local="yes">src/sys/net/api/tcpip.c</includedby>
    <includedby refid="init_8c" local="no">src/sys/net/net/init.c</includedby>
    <includedby refid="sys__arch_8c" local="yes">src/sys/net/net/sys_arch.c</includedby>
    <includedby refid="udpecho_8c" local="yes">src/sys/net/net/udpecho.c</includedby>
    <includedby refid="ethernetif_8c" local="yes">src/sys/net/netif/ethernetif.c</includedby>
    <incdepgraph>
      <node id="1005">
        <label>arch/sys_arch.h</label>
        <link refid="sys__arch_8h"/>
      </node>
      <node id="1003">
        <label>src/sys/include/net/sys.h</label>
        <link refid="sys.h"/>
        <childnode refid="1004" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
      </node>
      <node id="1004">
        <label>arch/cc.h</label>
        <link refid="cc_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1017">
        <label>src/sys/net/net/udpecho.c</label>
        <link refid="udpecho_8c"/>
      </node>
      <node id="1020">
        <label>src/sys/net/netif/tcpdump.c</label>
        <link refid="tcpdump_8c"/>
      </node>
      <node id="1019">
        <label>src/sys/net/netif/loopif.c</label>
        <link refid="loopif_8c"/>
      </node>
      <node id="1021">
        <label>src/sys/net/net/sys_arch.c</label>
        <link refid="sys__arch_8c"/>
      </node>
      <node id="1018">
        <label>src/sys/include/net/tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1020" relation="include">
        </childnode>
      </node>
      <node id="1022">
        <label>src/sys/net/netif/ethernetif.c</label>
        <link refid="ethernetif_8c"/>
      </node>
      <node id="1015">
        <label>src/sys/net/net/bot.c</label>
        <link refid="bot_8c"/>
      </node>
      <node id="1011">
        <label>src/sys/net/api/tcpip.c</label>
        <link refid="tcpip_8c"/>
      </node>
      <node id="1009">
        <label>src/sys/include/net/tcpip.h</label>
        <link refid="tcpip_8h"/>
        <childnode refid="1010" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
      </node>
      <node id="1008">
        <label>src/sys/include/net/api_msg.h</label>
        <link refid="api__msg_8h"/>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
      </node>
      <node id="1016">
        <label>src/sys/net/net/shell.c</label>
        <link refid="shell_8c"/>
      </node>
      <node id="1013">
        <label>src/sys/net/api/api_lib.c</label>
        <link refid="api__lib_8c"/>
      </node>
      <node id="1012">
        <label>src/sys/net/net/init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="1007">
        <label>src/sys/include/net/api.h</label>
        <link refid="api_8h"/>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
      </node>
      <node id="1006">
        <label>src/sys/include/net/sys.h</label>
        <link refid="sys.h"/>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
      </node>
      <node id="1014">
        <label>src/sys/net/api/sockets.c</label>
        <link refid="sockets_8c"/>
      </node>
      <node id="1010">
        <label>src/sys/net/api/api_msg.c</label>
        <link refid="api__msg_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structsys__timeout" prot="public">sys_timeout</innerclass>
    <innerclass refid="structsys__timeouts" prot="public">sys_timeouts</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sys_8h_11aa9ee90811cc556b2011559ae4154a8" prot="public" static="no">
        <type>void(*)</type>
        <definition>typedef void(* ) sys_timeout_handler(void *arg)</definition>
        <argsstring>(void *arg)</argsstring>
        <name>sys_timeout_handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="41" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sys_8h_194ffa3f15cc0eda6dae85c6ccb88da6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
        <definition>uInt16 sys_arch_mbox_fetch</definition>
        <argsstring>(sys_mbox_t mbox, void **msg, uInt16 timeout)</argsstring>
        <name>sys_arch_mbox_fetch</name>
        <param>
          <type><ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref></type>
          <declname>mbox</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="80"/>
        <referencedby refid="api__lib_8c_1b411221f912a6d9e4c82ac3963989403" compoundref="api__lib_8c" startline="227" endline="278">netconn_delete</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_1bf9681f6dcec783b38693e9d0b7af937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
        <definition>uInt16 sys_arch_sem_wait</definition>
        <argsstring>(sys_sem_t sem, uInt16 timeout)</argsstring>
        <name>sys_arch_sem_wait</name>
        <param>
          <type><ref refid="structsys__sem" kindref="compound">sys_sem_t</ref></type>
          <declname>sem</declname>
        </param>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="72"/>
        <referencedby refid="sys__arch_8c_1d3bc5455ca12b164bfc78974ff0c1e3c" compoundref="sys__arch_8c" startline="254" endline="293">sys_arch_mbox_fetch</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_12ffdebd63f7a80c0233aa7460a816dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsys__timeouts" kindref="compound">sys_timeouts</ref> *</type>
        <definition>struct sys_timeouts* sys_arch_timeouts</definition>
        <argsstring>(void)</argsstring>
        <name>sys_arch_timeouts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="67" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/net/sys_arch.c" bodystart="409" bodyend="413"/>
        <references refid="sys__arch_8c_1c216bafdd6453f68ef27dc764b134e94" compoundref="sys__arch_8c" startline="135" endline="153">current_thread</references>
        <references refid="structsys__thread_1bf0a0f75b1958421416c879d8011413b" compoundref="sys__arch_8c" startline="123">sys_thread::timeouts</references>
      </memberdef>
      <memberdef kind="function" id="sys_8h_1f411a8bc6b7ed4b0af9114e10c959448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_init</definition>
        <argsstring>(void)</argsstring>
        <name>sys_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="55" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/net/sys_arch.c" bodystart="404" bodyend="407"/>
        <references refid="time_8h_1df30830f5265e55035171c301eb9c3fb" compoundref="time_8c" startline="110" endline="115">gettimeofday</references>
        <references refid="sys__arch_8c_1726d4f4e11d7b38233574938939e0db9" compoundref="sys__arch_8c" startline="128">starttime</references>
        <referencedby refid="init_8c_122b2914249628f6cba7d4e1f138c969f" compoundref="init_8c" startline="50" endline="63">net_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_mbox_fetch</definition>
        <argsstring>(sys_mbox_t mbox, void **msg)</argsstring>
        <name>sys_mbox_fetch</name>
        <param>
          <type><ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref></type>
          <declname>mbox</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="83"/>
        <referencedby refid="api__lib_8c_1b1ef5f260ad8147a3b5b70b317b489d2" compoundref="api__lib_8c" startline="416" endline="427">netconn_accept</referencedby>
        <referencedby refid="api__lib_8c_1dc842fc0f1de512895ef3cc9c657272a" compoundref="api__lib_8c" startline="325" endline="352">netconn_bind</referencedby>
        <referencedby refid="api__lib_8c_125bb1c1c9928f91f53149a026e2e2624" compoundref="api__lib_8c" startline="612" endline="637">netconn_close</referencedby>
        <referencedby refid="api__lib_8c_140e08b372ad246ec7d2a7c9b1a2bd8fb" compoundref="api__lib_8c" startline="355" endline="386">netconn_connect</referencedby>
        <referencedby refid="api__lib_8c_1b411221f912a6d9e4c82ac3963989403" compoundref="api__lib_8c" startline="227" endline="278">netconn_delete</referencedby>
        <referencedby refid="api__lib_8c_1b917e0fc541447d966e5cf712ce24e58" compoundref="api__lib_8c" startline="389" endline="413">netconn_listen</referencedby>
        <referencedby refid="api__lib_8c_1cbd0b5a0344c2c3fffe5a02445a2c2b3" compoundref="api__lib_8c" startline="430" endline="506">netconn_recv</referencedby>
        <referencedby refid="api__lib_8c_1c4d4d10153d47c80a783c34b27c66238" compoundref="api__lib_8c" startline="509" endline="534">netconn_send</referencedby>
        <referencedby refid="api__lib_8c_19363929b6c680bc1dd3f302885128959" compoundref="api__lib_8c" startline="537" endline="609">netconn_write</referencedby>
        <referencedby refid="tcpip_8c_161474ad2c2c25ba58cc774e2bcc4ef5f" compoundref="tcpip_8c" startline="68" endline="98">tcpip_thread</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_166160e039d0222f4dd8534cd3ab84699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_mbox_free</definition>
        <argsstring>(sys_mbox_t mbox)</argsstring>
        <name>sys_mbox_free</name>
        <param>
          <type><ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref></type>
          <declname>mbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="81"/>
        <referencedby refid="api__msg_8c_1c34376c05c2532858367dbdc2eec6ba0" compoundref="api__msg_8c" startline="160" endline="200">accept_function</referencedby>
        <referencedby refid="api__lib_8c_1b411221f912a6d9e4c82ac3963989403" compoundref="api__lib_8c" startline="227" endline="278">netconn_delete</referencedby>
        <referencedby refid="api__lib_8c_1cbd0b5a0344c2c3fffe5a02445a2c2b3" compoundref="api__lib_8c" startline="430" endline="506">netconn_recv</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_13b766e6df37d63d5f1144c5089c2af94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref></type>
        <definition>sys_mbox_t sys_mbox_new</definition>
        <argsstring>(void)</argsstring>
        <name>sys_mbox_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="78" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/net/sys_arch.c" bodystart="204" bodyend="213"/>
        <references refid="structsys__mbox_18db17d5a2fed5c240e46f2644f64fe6b" compoundref="sys__arch_8c" startline="109">sys_mbox::first</references>
        <references refid="kmalloc_8h_1150eab2ac4ce4553e21ca10e7f441762" compoundref="kmalloc_8c" startline="247" endline="339">kmalloc</references>
        <references refid="structsys__mbox_1e88d235ceab3354ef612e0be18456a01" compoundref="sys__arch_8c" startline="109">sys_mbox::last</references>
        <references refid="structsys__mbox_155a1a2b60ec2ffc998debbcdb68cb6fd" compoundref="sys__arch_8c" startline="111">sys_mbox::mail</references>
        <references refid="tcpip_8c_1189da3fa172ad9c1b0491dcb4857fee6" compoundref="tcpip_8c" startline="56">mbox</references>
        <references refid="structsys__mbox_14c3d45a63605eee5abf52b98914ad5c7" compoundref="sys__arch_8c" startline="112">sys_mbox::mutex</references>
        <references refid="sys__arch_8c_17e7a76cc67fb974dbc234d15f9b885fe" compoundref="sys__arch_8c" startline="299" endline="309">sys_sem_new_</references>
        <referencedby refid="api__msg_8c_1c34376c05c2532858367dbdc2eec6ba0" compoundref="api__msg_8c" startline="160" endline="200">accept_function</referencedby>
        <referencedby refid="api__msg_8c_1c5f93428ba9863cd9b438edfd8715626" compoundref="api__msg_8c" startline="368" endline="398">do_listen</referencedby>
        <referencedby refid="api__lib_8c_1dc842fc0f1de512895ef3cc9c657272a" compoundref="api__lib_8c" startline="325" endline="352">netconn_bind</referencedby>
        <referencedby refid="api__lib_8c_140e08b372ad246ec7d2a7c9b1a2bd8fb" compoundref="api__lib_8c" startline="355" endline="386">netconn_connect</referencedby>
        <referencedby refid="api__lib_8c_1b917e0fc541447d966e5cf712ce24e58" compoundref="api__lib_8c" startline="389" endline="413">netconn_listen</referencedby>
        <referencedby refid="api__lib_8c_1b30ead34944094913a666250896ae95e" compoundref="api__lib_8c" startline="204" endline="224">netconn_new</referencedby>
        <referencedby refid="tcpip_8c_1aa3df02b3de2b41fe4bf7b2194e5e8e0" compoundref="tcpip_8c" startline="135" endline="141">tcpip_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_1217a9af37c5dd7c3fc16daddaacb976f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_mbox_post</definition>
        <argsstring>(sys_mbox_t mbox, void *msg)</argsstring>
        <name>sys_mbox_post</name>
        <param>
          <type><ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref></type>
          <declname>mbox</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="79"/>
        <referencedby refid="api__msg_8c_1c34376c05c2532858367dbdc2eec6ba0" compoundref="api__msg_8c" startline="160" endline="200">accept_function</referencedby>
        <referencedby refid="api__msg_8c_1cab3f82cc16d96db0db1f17b872613a4" compoundref="api__msg_8c" startline="243" endline="281">do_bind</referencedby>
        <referencedby refid="api__msg_8c_19b56a6c9fb571348291027f09471890a" compoundref="api__msg_8c" startline="479" endline="501">do_close</referencedby>
        <referencedby refid="api__msg_8c_18ad3068b45627dbe48440d4d6e1607d1" compoundref="api__msg_8c" startline="305" endline="365">do_connect</referencedby>
        <referencedby refid="api__msg_8c_117dd70d363c3f70a12d629bfdae64f97" compoundref="api__msg_8c" startline="284" endline="302">do_connected</referencedby>
        <referencedby refid="api__msg_8c_1351ca82b3580d84ee0d70f7ab033a236" compoundref="api__msg_8c" startline="208" endline="240">do_delconn</referencedby>
        <referencedby refid="api__msg_8c_1c5f93428ba9863cd9b438edfd8715626" compoundref="api__msg_8c" startline="368" endline="398">do_listen</referencedby>
        <referencedby refid="api__msg_8c_1e2a8fddd0b0f2a2b50c6e52281d37a67" compoundref="api__msg_8c" startline="438" endline="446">do_recv</referencedby>
        <referencedby refid="api__msg_8c_1c47e25770a5c135b4ef043b8f9608d95" compoundref="api__msg_8c" startline="419" endline="435">do_send</referencedby>
        <referencedby refid="api__msg_8c_1ad9b6e185b705c42c144f849b54fbf0e" compoundref="api__msg_8c" startline="449" endline="476">do_write</referencedby>
        <referencedby refid="api__msg_8c_14d2f6663cc266c48f4de67e730d7ea32" compoundref="api__msg_8c" startline="122" endline="144">err_tcp</referencedby>
        <referencedby refid="api__msg_8c_15271a23a432de3322f8fa228a3f3a11f" compoundref="api__msg_8c" startline="47" endline="63">recv_tcp</referencedby>
        <referencedby refid="api__msg_8c_19920c045f07d61ccb1022a0af7feb0ed" compoundref="api__msg_8c" startline="66" endline="93">recv_udp</referencedby>
        <referencedby refid="tcpip_8c_1d72ca05f74e20244cd26a8828711e9f2" compoundref="tcpip_8c" startline="121" endline="132">tcpip_apimsg</referencedby>
        <referencedby refid="tcpip_8c_1e510f195171bed8499ae94e264a92717" compoundref="tcpip_8c" startline="101" endline="118">tcpip_input</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_17bf682e03264736e39a24472167d0bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long sys_now</definition>
        <argsstring>(void)</argsstring>
        <name>sys_now</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="sys_8h_1f36773453b6a4db5ae71afef8bb77184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_sem_free</definition>
        <argsstring>(sys_sem_t sem)</argsstring>
        <name>sys_sem_free</name>
        <param>
          <type><ref refid="structsys__sem" kindref="compound">sys_sem_t</ref></type>
          <declname>sem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="73"/>
        <referencedby refid="api__lib_8c_1b411221f912a6d9e4c82ac3963989403" compoundref="api__lib_8c" startline="227" endline="278">netconn_delete</referencedby>
        <referencedby refid="api__lib_8c_19363929b6c680bc1dd3f302885128959" compoundref="api__lib_8c" startline="537" endline="609">netconn_write</referencedby>
        <referencedby refid="init_8c_1ced8bfa512e574c34b87586a3de7a94a" compoundref="init_8c" startline="66" endline="92">netMainThread</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_1adf2563f342b33ff6033eaa12f642e9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsys__sem" kindref="compound">sys_sem_t</ref></type>
        <definition>sys_sem_t sys_sem_new</definition>
        <argsstring>(uInt8 count)</argsstring>
        <name>sys_sem_new</name>
        <param>
          <type><ref refid="types_8h_1a4e0f27a9aca905e340c06d2dcae843c" kindref="member">uInt8</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="70" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/net/sys_arch.c" bodystart="295" bodyend="297"/>
        <references refid="sys__arch_8c_17e7a76cc67fb974dbc234d15f9b885fe" compoundref="sys__arch_8c" startline="299" endline="309">sys_sem_new_</references>
        <referencedby refid="api__msg_8c_1c34376c05c2532858367dbdc2eec6ba0" compoundref="api__msg_8c" startline="160" endline="200">accept_function</referencedby>
        <referencedby refid="api__lib_8c_19363929b6c680bc1dd3f302885128959" compoundref="api__lib_8c" startline="537" endline="609">netconn_write</referencedby>
        <referencedby refid="init_8c_1ced8bfa512e574c34b87586a3de7a94a" compoundref="init_8c" startline="66" endline="92">netMainThread</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_1dcdd78b22487e983e7636c636292fbfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_sem_signal</definition>
        <argsstring>(sys_sem_t sem)</argsstring>
        <name>sys_sem_signal</name>
        <param>
          <type><ref refid="structsys__sem" kindref="compound">sys_sem_t</ref></type>
          <declname>sem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="71"/>
        <referencedby refid="api__msg_8c_14d2f6663cc266c48f4de67e730d7ea32" compoundref="api__msg_8c" startline="122" endline="144">err_tcp</referencedby>
        <referencedby refid="api__msg_8c_1cfa8c3089ec7810a74fea8d004197343" compoundref="api__msg_8c" startline="96" endline="107">poll_tcp</referencedby>
        <referencedby refid="api__msg_8c_1603b715a121557dc45c821caab18efc2" compoundref="api__msg_8c" startline="110" endline="119">sent_tcp</referencedby>
        <referencedby refid="sys__arch_8c_1d3bc5455ca12b164bfc78974ff0c1e3c" compoundref="sys__arch_8c" startline="254" endline="293">sys_arch_mbox_fetch</referencedby>
        <referencedby refid="sys__arch_8c_11e7a0edf077b67162d80fefffc8805fb" compoundref="sys__arch_8c" startline="227" endline="252">sys_mbox_post</referencedby>
        <referencedby refid="init_8c_17e611c367a5df004912ea29854b871ec" compoundref="init_8c" startline="95" endline="99">tcpip_init_done</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_16c4530613bd616e719a295779b87ae5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_sem_wait</definition>
        <argsstring>(sys_sem_t sem)</argsstring>
        <name>sys_sem_wait</name>
        <param>
          <type><ref refid="structsys__sem" kindref="compound">sys_sem_t</ref></type>
          <declname>sem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="75"/>
        <referencedby refid="api__lib_8c_125bb1c1c9928f91f53149a026e2e2624" compoundref="api__lib_8c" startline="612" endline="637">netconn_close</referencedby>
        <referencedby refid="api__lib_8c_19363929b6c680bc1dd3f302885128959" compoundref="api__lib_8c" startline="537" endline="609">netconn_write</referencedby>
        <referencedby refid="init_8c_1ced8bfa512e574c34b87586a3de7a94a" compoundref="init_8c" startline="66" endline="92">netMainThread</referencedby>
        <referencedby refid="sys__arch_8c_15f93e13777922e6745f5aeb6bb27ee0b" compoundref="sys__arch_8c" startline="215" endline="225">sys_mbox_free</referencedby>
        <referencedby refid="sys__arch_8c_11e7a0edf077b67162d80fefffc8805fb" compoundref="sys__arch_8c" startline="227" endline="252">sys_mbox_post</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_1eb9b7d7cea295be85b0b0ddb7c9fe566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_thread_new</definition>
        <argsstring>(void(*function)(void), void *arg)</argsstring>
        <name>sys_thread_new</name>
        <param>
          <type>void(*)(void)</type>
          <declname>function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="87" bodyfile="/usr/home/reddawg/source/ubix2/src/sys/net/net/sys_arch.c" bodystart="172" bodyend="202"/>
        <references refid="kmalloc_8h_1150eab2ac4ce4553e21ca10e7f441762" compoundref="kmalloc_8c" startline="247" endline="339">kmalloc</references>
        <references refid="kpanic_8h_1db9a182aa071791a306163d50d653deb" compoundref="kpanic_8c" startline="44" endline="62">kpanic</references>
        <references refid="kprint_8h_1b2761bdf0cca73ad0fb5880895210cd8" compoundref="kprintf_8c" startline="38" endline="49">kprintf</references>
        <references refid="sys__arch_8c_1ca0303cc326b3efc7d32b4a794ddeb61" compoundref="sys__arch_8c" startline="99">netThreadSpinlock</references>
        <references refid="structsys__thread_130bbf3f21718b4c9579777d2ba4d6528" compoundref="sys__arch_8c" startline="122">sys_thread::next</references>
        <references refid="structsys__timeouts_180922134cf5f7db06829b6ee49b4954c" compoundref="sys_8h" startline="51">sys_timeouts::next</references>
        <references refid="def_8h_1070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="41">NULL</references>
        <references refid="spinlock_8h_12cd9a4502680fb8e7f0fe6b029e558b1" compoundref="spinlock_8c" startline="56" endline="62">spinLock</references>
        <references refid="spinlock_8h_1dd996cbbb3b9826dd9c8cf02b66a4c65" compoundref="spinlock_8c" startline="37" endline="46">spinUnlock</references>
        <references refid="sys__arch_8c_115905349139e42ffd3f853e8daae250f" compoundref="sys__arch_8c" startline="98">threads</references>
        <references refid="structsys__thread_1bf0a0f75b1958421416c879d8011413b" compoundref="sys__arch_8c" startline="123">sys_thread::timeouts</references>
        <references refid="structsys__thread_1109a6dc4db2e0d62aa546ce36f3fbc1b" compoundref="sys__arch_8c" startline="124">sys_thread::ubthread</references>
        <references refid="ubthread_8h_1a0af177ef44888f3c93883294207328e" compoundref="ubthread_8c" startline="76" endline="79">ubthread_create</references>
        <referencedby refid="bot_8c_1e5e17afd28772b096c68d413334b257a" compoundref="bot_8c" startline="83" endline="85">bot_init</referencedby>
        <referencedby refid="ethernetif_8c_115915c49a70d85ff1c6af793cda34419" compoundref="ethernetif_8c" startline="81" endline="101">low_level_init</referencedby>
        <referencedby refid="init_8c_122b2914249628f6cba7d4e1f138c969f" compoundref="init_8c" startline="50" endline="63">net_init</referencedby>
        <referencedby refid="shell_8h_169b075ef7e4d7bcf5a903d3d75baac02" compoundref="shell_8c" startline="114" endline="116">shell_init</referencedby>
        <referencedby refid="tcpip_8c_1aa3df02b3de2b41fe4bf7b2194e5e8e0" compoundref="tcpip_8c" startline="135" endline="141">tcpip_init</referencedby>
        <referencedby refid="udpecho_8h_1b288cc2f0b684d8cffe7f074724127e2" compoundref="udpecho_8c" startline="78" endline="81">udpecho_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="sys_8h_1eb917c25d96a51e1998478b9e6e78a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_timeout</definition>
        <argsstring>(uInt16 msecs, sys_timeout_handler h, void *arg)</argsstring>
        <name>sys_timeout</name>
        <param>
          <type><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>msecs</declname>
        </param>
        <param>
          <type><ref refid="sys_8h_11aa9ee90811cc556b2011559ae4154a8" kindref="member">sys_timeout_handler</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h" line="66"/>
        <referencedby refid="ethernetif_8c_1c94d6bae5aaeab8f812a6809ba4a6367" compoundref="ethernetif_8c" startline="309" endline="313">arp_timer</referencedby>
        <referencedby refid="ethernetif_8c_164753cb7324510825069062660f10926" compoundref="ethernetif_8c" startline="325" endline="341">ethernetif_init</referencedby>
        <referencedby refid="tcpip_8c_137e1880ffdc8a50daa4e9876bc894a8f" compoundref="tcpip_8c" startline="60" endline="64">tcpip_tcp_timer</referencedby>
        <referencedby refid="tcpip_8c_161474ad2c2c25ba58cc774e2bcc4ef5f" compoundref="tcpip_8c" startline="68" endline="98">tcpip_thread</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001,<sp/>Swedish<sp/>Institute<sp/>of<sp/>Computer<sp/>Science.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Institute<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>INSTITUTE<sp/>AND<sp/>CONTRIBUTORS<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>INSTITUTE<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>lwIP<sp/>TCP/IP<sp/>stack.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Adam<sp/>Dunkels<sp/>&lt;adam@sics.se&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>$Id: sys_8h.xml 88 2016-01-12 00:11:29Z reddawg $</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__LWIP_SYS_H__</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__LWIP_SYS_H__</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cc_8h" kindref="compound">arch/cc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sys__arch_8h" kindref="compound">arch/sys_arch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="sys_8h_11aa9ee90811cc556b2011559ae4154a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="sys_8h_11aa9ee90811cc556b2011559ae4154a8" kindref="member">sys_timeout_handler</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structsys__timeout" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__timeout" kindref="compound">sys_timeout</ref><sp/>{</highlight></codeline>
<codeline lineno="44" refid="structsys__timeout_1dc3659bd760019a94f216809e2eb8271" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__timeout" kindref="compound">sys_timeout</ref><sp/>*<ref refid="structsys__timeout_1dc3659bd760019a94f216809e2eb8271" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="45" refid="structsys__timeout_15f858b7e108ef28f4da55f062ebc9bb6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/><ref refid="structsys__timeout_15f858b7e108ef28f4da55f062ebc9bb6" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="46" refid="structsys__timeout_1dc2f8654aef6eae6d4f8818681de92f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="sys_8h_11aa9ee90811cc556b2011559ae4154a8" kindref="member">sys_timeout_handler</ref><sp/><ref refid="structsys__timeout_1dc2f8654aef6eae6d4f8818681de92f4" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="47" refid="structsys__timeout_108ef2543fa6f102c1e2b5ea3fed3cc36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structsys__timeout_108ef2543fa6f102c1e2b5ea3fed3cc36" kindref="member">arg</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structsys__timeouts" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__timeouts" kindref="compound">sys_timeouts</ref><sp/>{</highlight></codeline>
<codeline lineno="51" refid="structsys__timeouts_180922134cf5f7db06829b6ee49b4954c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__timeout" kindref="compound">sys_timeout</ref><sp/>*<ref refid="structsys__timeouts_180922134cf5f7db06829b6ee49b4954c" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sys_init()<sp/>must<sp/>be<sp/>called<sp/>before<sp/>anthing<sp/>else.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_8h_1f411a8bc6b7ed4b0af9114e10c959448" kindref="member">sys_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>sys_timeout():</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>Schedule<sp/>a<sp/>timeout<sp/>a<sp/>specified<sp/>amount<sp/>of<sp/>milliseconds<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>future.<sp/>When<sp/>the<sp/>timeout<sp/>occurs,<sp/>the<sp/>specified<sp/>timeout<sp/>handler<sp/>will</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>be<sp/>called.<sp/>The<sp/>handler<sp/>will<sp/>be<sp/>passed<sp/>the<sp/>&quot;arg&quot;<sp/>argument<sp/>when</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>called.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_8h_1eb917c25d96a51e1998478b9e6e78a44" kindref="member">sys_timeout</ref>(<ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>msecs,<sp/><ref refid="sys_8h_11aa9ee90811cc556b2011559ae4154a8" kindref="member">sys_timeout_handler</ref><sp/><ref refid="structsys__timeout_1dc2f8654aef6eae6d4f8818681de92f4" kindref="member">h</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structsys__timeout_108ef2543fa6f102c1e2b5ea3fed3cc36" kindref="member">arg</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__timeouts" kindref="compound">sys_timeouts</ref><sp/>*<ref refid="sys_8h_12ffdebd63f7a80c0233aa7460a816dff" kindref="member">sys_arch_timeouts</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Semaphore<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="structsys__sem" kindref="compound">sys_sem_t</ref><sp/><ref refid="sys_8h_1adf2563f342b33ff6033eaa12f642e9d" kindref="member">sys_sem_new</ref>(<ref refid="types_8h_1a4e0f27a9aca905e340c06d2dcae843c" kindref="member">uInt8</ref><sp/>count);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_8h_1dcdd78b22487e983e7636c636292fbfa" kindref="member">sys_sem_signal</ref>(<ref refid="structsys__sem" kindref="compound">sys_sem_t</ref><sp/>sem);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/><ref refid="sys_8h_1bf9681f6dcec783b38693e9d0b7af937" kindref="member">sys_arch_sem_wait</ref>(<ref refid="structsys__sem" kindref="compound">sys_sem_t</ref><sp/>sem,<sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>timeout);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_8h_1f36773453b6a4db5ae71afef8bb77184" kindref="member">sys_sem_free</ref>(<ref refid="structsys__sem" kindref="compound">sys_sem_t</ref><sp/>sem);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_8h_16c4530613bd616e719a295779b87ae5c" kindref="member">sys_sem_wait</ref>(<ref refid="structsys__sem" kindref="compound">sys_sem_t</ref><sp/>sem);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Mailbox<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref><sp/><ref refid="sys_8h_13b766e6df37d63d5f1144c5089c2af94" kindref="member">sys_mbox_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_8h_1217a9af37c5dd7c3fc16daddaacb976f" kindref="member">sys_mbox_post</ref>(<ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref><sp/><ref refid="tcpip_8c_1189da3fa172ad9c1b0491dcb4857fee6" kindref="member">mbox</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/><ref refid="sys_8h_194ffa3f15cc0eda6dae85c6ccb88da6e" kindref="member">sys_arch_mbox_fetch</ref>(<ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref><sp/><ref refid="tcpip_8c_1189da3fa172ad9c1b0491dcb4857fee6" kindref="member">mbox</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**msg,<sp/><ref refid="types_8h_13b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>timeout);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_8h_166160e039d0222f4dd8534cd3ab84699" kindref="member">sys_mbox_free</ref>(<ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref><sp/><ref refid="tcpip_8c_1189da3fa172ad9c1b0491dcb4857fee6" kindref="member">mbox</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_8h_1afce1f71c38e3d7d08ebf0654ec97dfa" kindref="member">sys_mbox_fetch</ref>(<ref refid="structsys__mbox" kindref="compound">sys_mbox_t</ref><sp/><ref refid="tcpip_8c_1189da3fa172ad9c1b0491dcb4857fee6" kindref="member">mbox</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**msg);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Thread<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>sys_thread_new(void<sp/>(*<sp/>thread)(void<sp/>*arg),<sp/>void<sp/>*arg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sys_8h_1eb9b7d7cea295be85b0b0ddb7c9fe566" kindref="member">sys_thread_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*<sp/>function)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>functions<sp/>are<sp/>used<sp/>only<sp/>in<sp/>Unix<sp/>code,<sp/>and</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/>can<sp/>be<sp/>omitted<sp/>when<sp/>porting<sp/>the<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>the<sp/>current<sp/>time<sp/>in<sp/>microseconds.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sys_8h_17bf682e03264736e39a24472167d0bca" kindref="member">sys_now</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__LWIP_SYS_H__<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/home/reddawg/source/ubix2/src/sys/include/net/sys.h"/>
  </compounddef>
</doxygen>
