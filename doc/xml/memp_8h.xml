<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="memp_8h" kind="file" language="C++">
    <compoundname>memp.h</compoundname>
    <includes refid="opt_8h" local="no">net/opt.h</includes>
    <includes refid="memp__std_8h" local="no">net/priv/memp_std.h</includes>
    <includes refid="memp__priv_8h" local="no">net/priv/memp_priv.h</includes>
    <includes refid="stats_8h" local="no">net/stats.h</includes>
    <includedby refid="stats_8h" local="no">C:/Dev/git/UbixOS/sys/include/net/stats.h</includedby>
    <includedby refid="tcpip_8c" local="no">C:/Dev/git/UbixOS/sys/net/api/tcpip.c</includedby>
    <includedby refid="core_2init_8c" local="yes">C:/Dev/git/UbixOS/sys/net/core/init.c</includedby>
    <includedby refid="ip6__frag_8c" local="yes">C:/Dev/git/UbixOS/sys/net/core/ipv6/ip6_frag.c</includedby>
    <includedby refid="memp_8c" local="yes">C:/Dev/git/UbixOS/sys/net/core/memp.c</includedby>
    <includedby refid="pbuf_8c" local="yes">C:/Dev/git/UbixOS/sys/net/core/pbuf.c</includedby>
    <includedby refid="timeouts_8c" local="yes">C:/Dev/git/UbixOS/sys/net/core/timeouts.c</includedby>
    <includedby refid="net_2init_8c" local="no">C:/Dev/git/UbixOS/sys/net/net/init.c</includedby>
    <incdepgraph>
      <node id="17">
        <label>stdarg.h</label>
        <link refid="stdarg_8h"/>
      </node>
      <node id="18">
        <label>ubixos/kpanic.h</label>
        <link refid="kpanic_8h"/>
      </node>
      <node id="15">
        <label>sys/io.h</label>
        <link refid="io_8h"/>
      </node>
      <node id="20">
        <label>net/priv/memp_priv.h</label>
        <link refid="memp__priv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sys/select.h</label>
        <link refid="select_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>net/arch/cc.h</label>
        <link refid="cc_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/_sigset.h</label>
        <link refid="__sigset_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>net/stats.h</label>
        <link refid="stats_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>net/mem.h</label>
        <link refid="mem_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>net/lwipopts.h</label>
        <link refid="lwipopts_8h"/>
      </node>
      <node id="6">
        <label>sys/types.h</label>
        <link refid="include_2sys_2types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>net/arch.h</label>
        <link refid="arch_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>net/opt.h</label>
        <link refid="opt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>lib/kprintf.h</label>
        <link refid="kprintf_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>net/debug.h</label>
        <link refid="debug_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>net/priv/memp_std.h</label>
        <link refid="memp__std_8h"/>
      </node>
      <node id="9">
        <label>sys/cdefs.h</label>
        <link refid="cdefs_8h"/>
      </node>
      <node id="14">
        <label>ubixos/time.h</label>
        <link refid="time_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/_types.h</label>
        <link refid="__types_8h"/>
      </node>
      <node id="10">
        <label>sys/_timespec.h</label>
        <link refid="__timespec_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/_timeval.h</label>
        <link refid="__timeval_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Dev/git/UbixOS/sys/include/net/memp.h</label>
        <link refid="memp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>C:/Dev/git/UbixOS/sys/net/core/ipv6/ip6_frag.c</label>
        <link refid="ip6__frag_8c"/>
      </node>
      <node id="7">
        <label>C:/Dev/git/UbixOS/sys/include/net/igmp.h</label>
        <link refid="igmp_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>C:/Dev/git/UbixOS/sys/lib/ogprintf.cc</label>
        <link refid="ogprintf_8cc"/>
      </node>
      <node id="33">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/block.c</label>
        <link refid="block_8c"/>
      </node>
      <node id="71">
        <label>C:/Dev/git/UbixOS/sys/net/net/bot.c</label>
        <link refid="bot_8c"/>
      </node>
      <node id="53">
        <label>C:/Dev/git/UbixOS/sys/sde/colours.cc</label>
        <link refid="colours_8cc"/>
      </node>
      <node id="18">
        <label>C:/Dev/git/UbixOS/sys/init/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="69">
        <label>C:/Dev/git/UbixOS/sys/net/core/mem.c</label>
        <link refid="mem_8c"/>
      </node>
      <node id="34">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/dirCache.c</label>
        <link refid="dirCache_8c"/>
      </node>
      <node id="40">
        <label>C:/Dev/git/UbixOS/sys/arch/armv6/fork.c</label>
        <link refid="armv6_2fork_8c"/>
      </node>
      <node id="55">
        <label>C:/Dev/git/UbixOS/sys/sde/sde.cc</label>
        <link refid="sde_8cc"/>
      </node>
      <node id="54">
        <label>C:/Dev/git/UbixOS/sys/sde/main.cc</label>
        <link refid="main_8cc"/>
      </node>
      <node id="27">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/inode.c</label>
        <link refid="inode_8c"/>
      </node>
      <node id="45">
        <label>C:/Dev/git/UbixOS/sys/isa/atkbd.c</label>
        <link refid="atkbd_8c"/>
      </node>
      <node id="14">
        <label>C:/Dev/git/UbixOS/sys/net/api/tcpip.c</label>
        <link refid="tcpip_8c"/>
      </node>
      <node id="68">
        <label>C:/Dev/git/UbixOS/sys/include/netif/slipif.h</label>
        <link refid="slipif_8h"/>
      </node>
      <node id="21">
        <label>C:/Dev/git/UbixOS/sys/fs/fat/fat.c</label>
        <link refid="fat_8c"/>
      </node>
      <node id="16">
        <label>C:/Dev/git/UbixOS/sys/include/net/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/file.c</label>
        <link refid="file_8c"/>
      </node>
      <node id="4">
        <label>C:/Dev/git/UbixOS/sys/include/net/icmp.h</label>
        <link refid="icmp_8h"/>
      </node>
      <node id="35">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/directory.c</label>
        <link refid="directory_8c"/>
      </node>
      <node id="5">
        <label>C:/Dev/git/UbixOS/sys/include/net/icmp6.h</label>
        <link refid="icmp6_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>C:/Dev/git/UbixOS/sys/net/net/sys_arch.c</label>
        <link refid="sys__arch_8c"/>
      </node>
      <node id="29">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/vfs.c</label>
        <link refid="vfs_8c"/>
      </node>
      <node id="47">
        <label>C:/Dev/git/UbixOS/sys/kernel/endtask.c</label>
        <link refid="endtask_8c"/>
      </node>
      <node id="61">
        <label>C:/Dev/git/UbixOS/sys/pci/lnc.c</label>
        <link refid="lnc_8c"/>
      </node>
      <node id="60">
        <label>C:/Dev/git/UbixOS/sys/kmods/kmod.c</label>
        <link refid="kmod_8c"/>
      </node>
      <node id="31">
        <label>C:/Dev/git/UbixOS/sys/include/ubixfs/ubixfs.h</label>
        <link refid="include_2ubixfs_2ubixfs_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>C:/Dev/git/UbixOS/sys/include/net/priv/tcpip_priv.h</label>
        <link refid="tcpip__priv_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>C:/Dev/git/UbixOS/sys/isa/ne2k.c</label>
        <link refid="ne2k_8c"/>
      </node>
      <node id="39">
        <label>C:/Dev/git/UbixOS/sys/include/ubixos/vitals.h</label>
        <link refid="vitals_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>C:/Dev/git/UbixOS/sys/fs/ufs/ufs.c</label>
        <link refid="ufs_8c"/>
      </node>
      <node id="2">
        <label>C:/Dev/git/UbixOS/sys/include/net/stats.h</label>
        <link refid="stats_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>C:/Dev/git/UbixOS/sys/arch/i386/fork.c</label>
        <link refid="i386_2fork_8c"/>
      </node>
      <node id="56">
        <label>C:/Dev/git/UbixOS/sys/vmm/paging.c</label>
        <link refid="paging_8c"/>
      </node>
      <node id="19">
        <label>C:/Dev/git/UbixOS/sys/include/vfs/vfs.h</label>
        <link refid="include_2vfs_2vfs_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>C:/Dev/git/UbixOS/sys/kernel/ld.c</label>
        <link refid="ld_8c"/>
      </node>
      <node id="43">
        <label>C:/Dev/git/UbixOS/sys/arch/i386/systemtask.c</label>
        <link refid="i386_2systemtask_8c"/>
      </node>
      <node id="30">
        <label>C:/Dev/git/UbixOS/sys/include/sys/buf.h</label>
        <link refid="buf_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/thread.c</label>
        <link refid="thread_8c"/>
      </node>
      <node id="72">
        <label>C:/Dev/git/UbixOS/sys/net/net/shell.c</label>
        <link refid="shell_8c"/>
      </node>
      <node id="62">
        <label>C:/Dev/git/UbixOS/sys/include/net/tcpip.h</label>
        <link refid="tcpip_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>C:/Dev/git/UbixOS/sys/net/core/init.c</label>
        <link refid="core_2init_8c"/>
      </node>
      <node id="65">
        <label>C:/Dev/git/UbixOS/sys/net/netif/ethernetif.c</label>
        <link refid="ethernetif_8c"/>
      </node>
      <node id="3">
        <label>C:/Dev/git/UbixOS/sys/include/net/netif.h</label>
        <link refid="netif_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>C:/Dev/git/UbixOS/sys/include/net/ip6_frag.h</label>
        <link refid="ip6__frag_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/namei.c</label>
        <link refid="namei_8c"/>
      </node>
      <node id="37">
        <label>C:/Dev/git/UbixOS/sys/fs/common/gpt.c</label>
        <link refid="gpt_8c"/>
      </node>
      <node id="20">
        <label>C:/Dev/git/UbixOS/sys/fs/devfs/devfs.c</label>
        <link refid="devfs_8c"/>
      </node>
      <node id="13">
        <label>C:/Dev/git/UbixOS/sys/include/net/ip4_frag.h</label>
        <link refid="ip4__frag_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>C:/Dev/git/UbixOS/sys/vmm/vmm_memory.c</label>
        <link refid="vmm__memory_8c"/>
      </node>
      <node id="10">
        <label>C:/Dev/git/UbixOS/sys/net/core/netif.c</label>
        <link refid="netif_8c"/>
      </node>
      <node id="9">
        <label>C:/Dev/git/UbixOS/sys/net/core/memp.c</label>
        <link refid="memp_8c"/>
      </node>
      <node id="11">
        <label>C:/Dev/git/UbixOS/sys/net/core/timeouts.c</label>
        <link refid="timeouts_8c"/>
      </node>
      <node id="48">
        <label>C:/Dev/git/UbixOS/sys/kernel/syscall.c</label>
        <link refid="kernel_2syscall_8c"/>
      </node>
      <node id="41">
        <label>C:/Dev/git/UbixOS/sys/arch/armv6/systemtask.c</label>
        <link refid="armv6_2systemtask_8c"/>
      </node>
      <node id="12">
        <label>C:/Dev/git/UbixOS/sys/include/net/ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>C:/Dev/git/UbixOS/sys/fs/ubixfs/ubixfs.c</label>
        <link refid="ubixfs_8c"/>
      </node>
      <node id="32">
        <label>C:/Dev/git/UbixOS/sys/arch/armv6/syscall.c</label>
        <link refid="arch_2armv6_2syscall_8c"/>
      </node>
      <node id="24">
        <label>C:/Dev/git/UbixOS/sys/fs/ufs/ffs.c</label>
        <link refid="ffs_8c"/>
      </node>
      <node id="58">
        <label>C:/Dev/git/UbixOS/sys/include/ufs/ffs.h</label>
        <link refid="ffs_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>C:/Dev/git/UbixOS/sys/include/netif/ethernet.h</label>
        <link refid="f_2ethernet_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>C:/Dev/git/UbixOS/sys/fs/vfs/mount.c</label>
        <link refid="mount_8c"/>
      </node>
      <node id="67">
        <label>C:/Dev/git/UbixOS/sys/include/netif/etharp.h</label>
        <link refid="f_2etharp_8h"/>
      </node>
      <node id="38">
        <label>C:/Dev/git/UbixOS/sys/pci/hd.c</label>
        <link refid="hd_8c"/>
      </node>
      <node id="70">
        <label>C:/Dev/git/UbixOS/sys/net/core/pbuf.c</label>
        <link refid="pbuf_8c"/>
      </node>
      <node id="64">
        <label>C:/Dev/git/UbixOS/sys/net/net/init.c</label>
        <link refid="net_2init_8c"/>
      </node>
      <node id="36">
        <label>C:/Dev/git/UbixOS/sys/include/pci/hd.h</label>
        <link refid="hd_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>C:/Dev/git/UbixOS/sys/include/ubixos/init.h</label>
        <link refid="ubixos_2init_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>C:/Dev/git/UbixOS/sys/kernel/vitals.c</label>
        <link refid="vitals_8c"/>
      </node>
      <node id="50">
        <label>C:/Dev/git/UbixOS/sys/kernel/ubthread.c</label>
        <link refid="ubthread_8c"/>
      </node>
      <node id="49">
        <label>C:/Dev/git/UbixOS/sys/kernel/time.c</label>
        <link refid="time_8c"/>
      </node>
      <node id="1">
        <label>C:/Dev/git/UbixOS/sys/include/net/memp.h</label>
        <link refid="memp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="memp_8h_1a5f75b6e9cf0c6df9e70b08b8e05a1835" prot="public" static="no">
        <name>LWIP_MEMPOOL</name>
        <param><defname>name</defname></param>
        <param><defname>num</defname></param>
        <param><defname>size</defname></param>
        <param><defname>desc</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="48" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memp_8h_1a5f75b6e9cf0c6df9e70b08b8e05a1835" prot="public" static="no">
        <name>LWIP_MEMPOOL</name>
        <param><defname>name</defname></param>
        <param><defname>num</defname></param>
        <param><defname>size</defname></param>
        <param><defname>desc</defname></param>
        <initializer>MEMP_##<ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="53" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mempool_1ga5e2498f6c17746c1fe7153de5f7f275a" prot="public" static="no">
        <name>LWIP_MEMPOOL_ALLOC</name>
        <param><defname>name</defname></param>
        <initializer><ref refid="memp_8c_1a348c83ee972f1edf7296a1cdf1d75f22" kindref="member">memp_malloc_pool</ref>(&amp;memp_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate from a private memory pool </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="122" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mempool_1ga5b1fb3ce7942432d87cc948b1c5ed6cb" prot="public" static="no">
        <name>LWIP_MEMPOOL_DECLARE</name>
        <param><defname>name</defname></param>
        <param><defname>num</defname></param>
        <param><defname>size</defname></param>
        <param><defname>desc</defname></param>
        <initializer><ref refid="mem_8c_1aa33f9b7cf221a9cde8fa715a51d3bfc7" kindref="member">LWIP_DECLARE_MEMORY_ALIGNED</ref>(memp_memory_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref> ## _base, ((num) * (<ref refid="memp__priv_8h_1a7f8c378e0581aa2dc491cff52ae4fce2" kindref="member">MEMP_SIZE</ref> + <ref refid="memp__std_8h_1a561ce9de860eb47d034ceeb7eff3b20c" kindref="member">MEMP_ALIGN_SIZE</ref>(size)))); \
    \
  <ref refid="memp__priv_8h_1a9373cb7cc6e658a60cec6ca57173a72d" kindref="member">LWIP_MEMPOOL_DECLARE_STATS_INSTANCE</ref>(memp_stats_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>) \
    \
  static struct <ref refid="structmemp" kindref="compound">memp</ref> *memp_tab_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>; \
    \
  <ref refid="cdefs_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> struct <ref refid="structmemp__desc" kindref="compound">memp_desc</ref> memp_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref> = { \
    <ref refid="memp__priv_8h_1aabec8ab3418486aed704fb8bb933da42" kindref="member">DECLARE_LWIP_MEMPOOL_DESC</ref>(desc) \
    <ref refid="memp__priv_8h_1a46723c1d1d900d5f23e5bde91d22d8be" kindref="member">LWIP_MEMPOOL_DECLARE_STATS_REFERENCE</ref>(memp_stats_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>) \
    <ref refid="group__compiler__abstraction_1gaef204be511fd32f681b55abc08e9ae18" kindref="member">LWIP_MEM_ALIGN_SIZE</ref>(size), \
    (num), \
    memp_memory_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref> ## _base, \
    &amp;memp_tab_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref> \
  };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Declare a private memory pool Private mempools example: .h: only when pool is used in multiple .c files: <ref refid="group__mempool_1ga92fc8c29d0e2654f2a2ecc43b2b7fb13" kindref="member">LWIP_MEMPOOL_PROTOTYPE(my_private_pool)</ref>; .c:<itemizedlist>
<listitem><para>in global variables section: LWIP_MEMPOOL_DECLARE(my_private_pool, 10, sizeof(foo), &quot;Some description&quot;)</para>
</listitem><listitem><para>call ONCE before using pool (e.g. in some init() function): <ref refid="group__mempool_1ga60b51c06d276f525b35d8b7abd4dcb41" kindref="member">LWIP_MEMPOOL_INIT(my_private_pool)</ref>;</para>
</listitem><listitem><para>allocate: void* my_new_mem = <ref refid="group__mempool_1ga5e2498f6c17746c1fe7153de5f7f275a" kindref="member">LWIP_MEMPOOL_ALLOC(my_private_pool)</ref>;</para>
</listitem><listitem><para>free: <ref refid="group__mempool_1gaa43d114dd702fbd8f1db18474ea93a04" kindref="member">LWIP_MEMPOOL_FREE(my_private_pool, my_new_mem)</ref>;</para>
</listitem></itemizedlist>
</para>
<para>To relocate a pool, declare it as extern in <ref refid="cc_8h" kindref="compound">cc.h</ref>. Example for GCC: extern u8_t <bold>attribute</bold>((section(&quot;.onchip_mem&quot;))) memp_memory_my_private_pool[]; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="95" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mempool_1gaa43d114dd702fbd8f1db18474ea93a04" prot="public" static="no">
        <name>LWIP_MEMPOOL_FREE</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <initializer><ref refid="memp_8c_1a62f8c3c907743e34eee3cdac7fa1eaa5" kindref="member">memp_free_pool</ref>(&amp;memp_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>, (x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free element from a private memory pool </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="127" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mempool_1ga60b51c06d276f525b35d8b7abd4dcb41" prot="public" static="no">
        <name>LWIP_MEMPOOL_INIT</name>
        <param><defname>name</defname></param>
        <initializer><ref refid="memp_8c_1a6416303426d05526bed33f241fa6ecd7" kindref="member">memp_init_pool</ref>(&amp;memp_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize a private memory pool </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="117" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__mempool_1ga92fc8c29d0e2654f2a2ecc43b2b7fb13" prot="public" static="no">
        <name>LWIP_MEMPOOL_PROTOTYPE</name>
        <param><defname>name</defname></param>
        <initializer>extern <ref refid="cdefs_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> struct <ref refid="structmemp__desc" kindref="compound">memp_desc</ref> memp_ ## <ref refid="pci_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Declare prototype for private memory pool if it is used in multiple files </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="67" column="9" bodyfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="memp_8h_1a85a164b1f7764951cc685ea525114e57" prot="public" static="no" strong="no">
        <type></type>
        <name>memp_t</name>
        <enumvalue id="memp_8h_1a85a164b1f7764951cc685ea525114e57a3387042084427642949f3223c7ddd321" prot="public">
          <name>MEMP_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create the list of all memory pools managed by memp. MEMP_MAX represents a NULL pool at the end </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="52" column="14" bodyfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" bodystart="52" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="memp_8h_1ad78a1f656a766f2c6341aa466762b883" prot="public" static="no" mutable="no">
        <type><ref refid="cdefs_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> struct <ref refid="structmemp__desc" kindref="compound">memp_desc</ref> *<ref refid="cdefs_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
        <definition>const struct memp_desc* const memp_pools[MEMP_MAX]</definition>
        <argsstring>[MEMP_MAX]</argsstring>
        <name>memp_pools</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="61" column="36" bodyfile="C:/Dev/git/UbixOS/sys/net/core/memp.c" bodystart="81" bodyend="-1" declfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" declline="61" declcolumn="36"/>
        <referencedby refid="memp_8c_1aecd94926b7c2a0e23ae195f4ae97581f" compoundref="memp_8c" startline="469" endline="496">memp_free</referencedby>
        <referencedby refid="memp_8c_1a9693e5b1ac2c6b9c0e7870522d45efa2" compoundref="memp_8c" startline="271" endline="288">memp_init</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="memp_8h_1aecd94926b7c2a0e23ae195f4ae97581f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void memp_free</definition>
        <argsstring>(memp_t type, void *mem)</argsstring>
        <name>memp_free</name>
        <param>
          <type><ref refid="memp_8h_1a85a164b1f7764951cc685ea525114e57" kindref="member">memp_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Put an element back into its pool.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the pool where to put mem </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mem</parametername>
</parameternamelist>
<parameterdescription>
<para>the memp element to free </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="149" column="7" bodyfile="C:/Dev/git/UbixOS/sys/net/core/memp.c" bodystart="469" bodyend="496" declfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" declline="149" declcolumn="7"/>
        <references refid="debug_8h_1a827bc03cd7889e7c007df39d33b33d18" compoundref="debug_8h" startline="135">LWIP_ERROR</references>
        <references refid="memp_8h_1a85a164b1f7764951cc685ea525114e57a3387042084427642949f3223c7ddd321" compoundref="memp_8h" startline="55">MEMP_MAX</references>
        <references refid="memp_8c_1ad78a1f656a766f2c6341aa466762b883" compoundref="memp_8c" startline="81">memp_pools</references>
        <references refid="fat__string_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="fat__string_8h" startline="17">NULL</references>
        <references refid="structmemp__desc_1a9d6b758ce5c3b47a67a7568d38fb3926" compoundref="memp__priv_8h" startline="151">memp_desc::tab</references>
        <referencedby refid="group__pbuf_1gab0dd696fb4b6bc65e548944584f1738b" compoundref="pbuf_8c" startline="715" endline="792">pbuf_free</referencedby>
        <referencedby refid="tcpip_8c_1ac5b7a59f4c3f5f721ab9ee81f231c9fd" compoundref="tcpip_8c" startline="421" endline="423">tcpip_callbackmsg_delete</referencedby>
      </memberdef>
      <memberdef kind="function" id="memp_8h_1a9693e5b1ac2c6b9c0e7870522d45efa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void memp_init</definition>
        <argsstring>(void)</argsstring>
        <name>memp_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes lwIP built-in pools. Related functions: memp_malloc, memp_free</para>
<para>Carves out memp_memory into linked lists for each pool-type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="141" column="7" bodyfile="C:/Dev/git/UbixOS/sys/net/core/memp.c" bodystart="271" bodyend="288" declfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" declline="141" declcolumn="7"/>
        <references refid="def_8h_1a4abb61f4c9339d8a0a0c63b4fbfe6a37" compoundref="def_8h" startline="58">LWIP_ARRAYSIZE</references>
        <references refid="memp_8c_1a6416303426d05526bed33f241fa6ecd7" compoundref="memp_8c" startline="230" endline="262">memp_init_pool</references>
        <references refid="memp_8c_1ad78a1f656a766f2c6341aa466762b883" compoundref="memp_8c" startline="81">memp_pools</references>
        <referencedby refid="core_2init_8c_1a0c1a18439524d2f4a5e51d25c0ca2ce9" compoundref="core_2init_8c" startline="333" endline="381">lwip_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="memp_8h_1a2b00593d086313c267b54a976bf67aa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* memp_malloc</definition>
        <argsstring>(memp_t type)</argsstring>
        <name>memp_malloc</name>
        <param>
          <type><ref refid="memp_8h_1a85a164b1f7764951cc685ea525114e57" kindref="member">memp_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an element from a specific pool.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the pool to get an element from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the allocated memory or a NULL pointer on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h" line="147" column="6" bodyfile="C:/Dev/git/UbixOS/sys/net/core/memp.c" bodystart="385" bodyend="404" declfile="C:/Dev/git/UbixOS/sys/include/net/memp.h" declline="147" declcolumn="6"/>
        <references refid="debug_8h_1a827bc03cd7889e7c007df39d33b33d18" compoundref="debug_8h" startline="135">LWIP_ERROR</references>
        <references refid="memp_8h_1a85a164b1f7764951cc685ea525114e57a3387042084427642949f3223c7ddd321" compoundref="memp_8h" startline="55">MEMP_MAX</references>
        <references refid="fat__string_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="fat__string_8h" startline="17">NULL</references>
        <referencedby refid="group__pbuf_1gacfcb0a2af918658ba0afe36499c65f47" compoundref="pbuf_8c" startline="248" endline="405">pbuf_alloc</referencedby>
        <referencedby refid="tcpip_8c_1aee14fa2587a9ba9d23e4c7e16c4526ac" compoundref="tcpip_8c" startline="405" endline="414">tcpip_callbackmsg_new</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Memory pool API </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001-2004<sp/>Swedish<sp/>Institute<sp/>of<sp/>Computer<sp/>Science.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>3.<sp/>The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>lwIP<sp/>TCP/IP<sp/>stack.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Adam<sp/>Dunkels<sp/>&lt;adam@sics.se&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LWIP_HDR_MEMP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_HDR_MEMP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="opt_8h" kindref="compound">net/opt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>run<sp/>once<sp/>with<sp/>empty<sp/>definition<sp/>to<sp/>handle<sp/>all<sp/>custom<sp/>includes<sp/>in<sp/>lwippools.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_MEMPOOL(name,num,size,desc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="memp__std_8h" kindref="compound">net/priv/memp_std.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="memp_8h_1a85a164b1f7764951cc685ea525114e57" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53" refid="memp_8h_1a5f75b6e9cf0c6df9e70b08b8e05a1835" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_MEMPOOL(name,num,size,desc)<sp/><sp/>MEMP_##name,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="memp__std_8h" kindref="compound">net/priv/memp_std.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="memp_8h_1a85a164b1f7764951cc685ea525114e57a3387042084427642949f3223c7ddd321" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="memp_8h_1a85a164b1f7764951cc685ea525114e57a3387042084427642949f3223c7ddd321" kindref="member">MEMP_MAX</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/><ref refid="memp_8h_1a85a164b1f7764951cc685ea525114e57" kindref="member">memp_t</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="memp__priv_8h" kindref="compound">net/priv/memp_priv.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stats_8h" kindref="compound">net/stats.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmemp__desc" kindref="compound">memp_desc</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="memp_8h_1ad78a1f656a766f2c6341aa466762b883" kindref="member">memp_pools</ref>[<ref refid="memp_8h_1a85a164b1f7764951cc685ea525114e57a3387042084427642949f3223c7ddd321" kindref="member">MEMP_MAX</ref>];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__mempool_1ga92fc8c29d0e2654f2a2ecc43b2b7fb13" refkind="member"><highlight class="preprocessor">#define<sp/>LWIP_MEMPOOL_PROTOTYPE(name)<sp/>extern<sp/>const<sp/>struct<sp/>memp_desc<sp/>memp_<sp/>##<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MEMP_MEM_MALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_MEMPOOL_DECLARE(name,num,size,desc)<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/>LWIP_MEMPOOL_DECLARE_STATS_INSTANCE(memp_stats_<sp/>##<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>const<sp/>struct<sp/>memp_desc<sp/>memp_<sp/>##<sp/>name<sp/>=<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_LWIP_MEMPOOL_DESC(desc)<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LWIP_MEMPOOL_DECLARE_STATS_REFERENCE(memp_stats_<sp/>##<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LWIP_MEM_ALIGN_SIZE(size)<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>MEMP_MEM_MALLOC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="group__mempool_1ga5b1fb3ce7942432d87cc948b1c5ed6cb" refkind="member"><highlight class="preprocessor">#define<sp/>LWIP_MEMPOOL_DECLARE(name,num,size,desc)<sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/>LWIP_DECLARE_MEMORY_ALIGNED(memp_memory_<sp/>##<sp/>name<sp/>##<sp/>_base,<sp/>((num)<sp/>*<sp/>(MEMP_SIZE<sp/>+<sp/>MEMP_ALIGN_SIZE(size))));<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/>LWIP_MEMPOOL_DECLARE_STATS_INSTANCE(memp_stats_<sp/>##<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/>static<sp/>struct<sp/>memp<sp/>*memp_tab_<sp/>##<sp/>name;<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/>const<sp/>struct<sp/>memp_desc<sp/>memp_<sp/>##<sp/>name<sp/>=<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DECLARE_LWIP_MEMPOOL_DESC(desc)<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LWIP_MEMPOOL_DECLARE_STATS_REFERENCE(memp_stats_<sp/>##<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LWIP_MEM_ALIGN_SIZE(size),<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(num),<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>memp_memory_<sp/>##<sp/>name<sp/>##<sp/>_base,<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&amp;memp_tab_<sp/>##<sp/>name<sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MEMP_MEM_MALLOC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="group__mempool_1ga60b51c06d276f525b35d8b7abd4dcb41" refkind="member"><highlight class="preprocessor">#define<sp/>LWIP_MEMPOOL_INIT(name)<sp/><sp/><sp/><sp/>memp_init_pool(&amp;memp_<sp/>##<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="group__mempool_1ga5e2498f6c17746c1fe7153de5f7f275a" refkind="member"><highlight class="preprocessor">#define<sp/>LWIP_MEMPOOL_ALLOC(name)<sp/><sp/><sp/>memp_malloc_pool(&amp;memp_<sp/>##<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group__mempool_1gaa43d114dd702fbd8f1db18474ea93a04" refkind="member"><highlight class="preprocessor">#define<sp/>LWIP_MEMPOOL_FREE(name,<sp/>x)<sp/>memp_free_pool(&amp;memp_<sp/>##<sp/>name,<sp/>(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MEM_USE_POOLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">memp_malloc_helper</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><ref refid="memp_8h_1a85a164b1f7764951cc685ea525114e57" kindref="member">memp_t</ref><sp/>poolnr;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MEMP_OVERFLOW_CHECK<sp/>||<sp/>(LWIP_STATS<sp/>&amp;&amp;<sp/>MEM_STATS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__compiler__abstraction_1ga77570ac4fcab86864fa1916e55676da2" kindref="member">u16_t</ref><sp/>size;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MEMP_OVERFLOW_CHECK<sp/>||<sp/>(LWIP_STATS<sp/>&amp;&amp;<sp/>MEM_STATS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MEM_USE_POOLS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="memp_8h_1a9693e5b1ac2c6b9c0e7870522d45efa2" kindref="member">memp_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MEMP_OVERFLOW_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*memp_malloc_fn(<ref refid="memp_8h_1a85a164b1f7764951cc685ea525114e57" kindref="member">memp_t</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structfile" kindref="compound">file</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>memp_malloc(t)<sp/>memp_malloc_fn((t),<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="memp_8h_1a2b00593d086313c267b54a976bf67aa5" kindref="member">memp_malloc</ref>(<ref refid="memp_8h_1a85a164b1f7764951cc685ea525114e57" kindref="member">memp_t</ref><sp/>type);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="memp_8h_1aecd94926b7c2a0e23ae195f4ae97581f" kindref="member">memp_free</ref>(<ref refid="memp_8h_1a85a164b1f7764951cc685ea525114e57" kindref="member">memp_t</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structmem" kindref="compound">mem</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_HDR_MEMP_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Dev/git/UbixOS/sys/include/net/memp.h"/>
  </compounddef>
</doxygen>
